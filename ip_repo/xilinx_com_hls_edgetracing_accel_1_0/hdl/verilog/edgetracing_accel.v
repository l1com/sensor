// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="edgetracing_accel_edgetracing_accel,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu2cg-sfvc784-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=452554,HLS_SYN_TPT=none,HLS_SYN_MEM=54,HLS_SYN_DSP=0,HLS_SYN_FF=5364,HLS_SYN_LUT=17804,HLS_VERSION=2020_2}" *)

module edgetracing_accel (
        ap_clk,
        ap_rst_n,
        m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST,
        m_axi_gmem3_WID,
        m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST,
        m_axi_gmem3_RID,
        m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP,
        m_axi_gmem3_BID,
        m_axi_gmem3_BUSER,
        m_axi_gmem4_AWVALID,
        m_axi_gmem4_AWREADY,
        m_axi_gmem4_AWADDR,
        m_axi_gmem4_AWID,
        m_axi_gmem4_AWLEN,
        m_axi_gmem4_AWSIZE,
        m_axi_gmem4_AWBURST,
        m_axi_gmem4_AWLOCK,
        m_axi_gmem4_AWCACHE,
        m_axi_gmem4_AWPROT,
        m_axi_gmem4_AWQOS,
        m_axi_gmem4_AWREGION,
        m_axi_gmem4_AWUSER,
        m_axi_gmem4_WVALID,
        m_axi_gmem4_WREADY,
        m_axi_gmem4_WDATA,
        m_axi_gmem4_WSTRB,
        m_axi_gmem4_WLAST,
        m_axi_gmem4_WID,
        m_axi_gmem4_WUSER,
        m_axi_gmem4_ARVALID,
        m_axi_gmem4_ARREADY,
        m_axi_gmem4_ARADDR,
        m_axi_gmem4_ARID,
        m_axi_gmem4_ARLEN,
        m_axi_gmem4_ARSIZE,
        m_axi_gmem4_ARBURST,
        m_axi_gmem4_ARLOCK,
        m_axi_gmem4_ARCACHE,
        m_axi_gmem4_ARPROT,
        m_axi_gmem4_ARQOS,
        m_axi_gmem4_ARREGION,
        m_axi_gmem4_ARUSER,
        m_axi_gmem4_RVALID,
        m_axi_gmem4_RREADY,
        m_axi_gmem4_RDATA,
        m_axi_gmem4_RLAST,
        m_axi_gmem4_RID,
        m_axi_gmem4_RUSER,
        m_axi_gmem4_RRESP,
        m_axi_gmem4_BVALID,
        m_axi_gmem4_BREADY,
        m_axi_gmem4_BRESP,
        m_axi_gmem4_BID,
        m_axi_gmem4_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 93'd1;
parameter    ap_ST_fsm_state2 = 93'd2;
parameter    ap_ST_fsm_state3 = 93'd4;
parameter    ap_ST_fsm_state4 = 93'd8;
parameter    ap_ST_fsm_state5 = 93'd16;
parameter    ap_ST_fsm_state6 = 93'd32;
parameter    ap_ST_fsm_state7 = 93'd64;
parameter    ap_ST_fsm_state8 = 93'd128;
parameter    ap_ST_fsm_state9 = 93'd256;
parameter    ap_ST_fsm_state10 = 93'd512;
parameter    ap_ST_fsm_state11 = 93'd1024;
parameter    ap_ST_fsm_state12 = 93'd2048;
parameter    ap_ST_fsm_state13 = 93'd4096;
parameter    ap_ST_fsm_state14 = 93'd8192;
parameter    ap_ST_fsm_state15 = 93'd16384;
parameter    ap_ST_fsm_state16 = 93'd32768;
parameter    ap_ST_fsm_state17 = 93'd65536;
parameter    ap_ST_fsm_state18 = 93'd131072;
parameter    ap_ST_fsm_state19 = 93'd262144;
parameter    ap_ST_fsm_state20 = 93'd524288;
parameter    ap_ST_fsm_state21 = 93'd1048576;
parameter    ap_ST_fsm_state22 = 93'd2097152;
parameter    ap_ST_fsm_state23 = 93'd4194304;
parameter    ap_ST_fsm_state24 = 93'd8388608;
parameter    ap_ST_fsm_state25 = 93'd16777216;
parameter    ap_ST_fsm_state26 = 93'd33554432;
parameter    ap_ST_fsm_state27 = 93'd67108864;
parameter    ap_ST_fsm_state28 = 93'd134217728;
parameter    ap_ST_fsm_state29 = 93'd268435456;
parameter    ap_ST_fsm_state30 = 93'd536870912;
parameter    ap_ST_fsm_state31 = 93'd1073741824;
parameter    ap_ST_fsm_state32 = 93'd2147483648;
parameter    ap_ST_fsm_state33 = 93'd4294967296;
parameter    ap_ST_fsm_state34 = 93'd8589934592;
parameter    ap_ST_fsm_state35 = 93'd17179869184;
parameter    ap_ST_fsm_state36 = 93'd34359738368;
parameter    ap_ST_fsm_state37 = 93'd68719476736;
parameter    ap_ST_fsm_state38 = 93'd137438953472;
parameter    ap_ST_fsm_state39 = 93'd274877906944;
parameter    ap_ST_fsm_state40 = 93'd549755813888;
parameter    ap_ST_fsm_state41 = 93'd1099511627776;
parameter    ap_ST_fsm_state42 = 93'd2199023255552;
parameter    ap_ST_fsm_state43 = 93'd4398046511104;
parameter    ap_ST_fsm_state44 = 93'd8796093022208;
parameter    ap_ST_fsm_state45 = 93'd17592186044416;
parameter    ap_ST_fsm_state46 = 93'd35184372088832;
parameter    ap_ST_fsm_state47 = 93'd70368744177664;
parameter    ap_ST_fsm_state48 = 93'd140737488355328;
parameter    ap_ST_fsm_state49 = 93'd281474976710656;
parameter    ap_ST_fsm_state50 = 93'd562949953421312;
parameter    ap_ST_fsm_state51 = 93'd1125899906842624;
parameter    ap_ST_fsm_state52 = 93'd2251799813685248;
parameter    ap_ST_fsm_state53 = 93'd4503599627370496;
parameter    ap_ST_fsm_state54 = 93'd9007199254740992;
parameter    ap_ST_fsm_state55 = 93'd18014398509481984;
parameter    ap_ST_fsm_state56 = 93'd36028797018963968;
parameter    ap_ST_fsm_state57 = 93'd72057594037927936;
parameter    ap_ST_fsm_state58 = 93'd144115188075855872;
parameter    ap_ST_fsm_state59 = 93'd288230376151711744;
parameter    ap_ST_fsm_state60 = 93'd576460752303423488;
parameter    ap_ST_fsm_state61 = 93'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 93'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 93'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 93'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage0 = 93'd18446744073709551616;
parameter    ap_ST_fsm_state69 = 93'd36893488147419103232;
parameter    ap_ST_fsm_state70 = 93'd73786976294838206464;
parameter    ap_ST_fsm_state71 = 93'd147573952589676412928;
parameter    ap_ST_fsm_state72 = 93'd295147905179352825856;
parameter    ap_ST_fsm_pp1_stage0 = 93'd590295810358705651712;
parameter    ap_ST_fsm_state76 = 93'd1180591620717411303424;
parameter    ap_ST_fsm_state77 = 93'd2361183241434822606848;
parameter    ap_ST_fsm_state78 = 93'd4722366482869645213696;
parameter    ap_ST_fsm_state79 = 93'd9444732965739290427392;
parameter    ap_ST_fsm_state80 = 93'd18889465931478580854784;
parameter    ap_ST_fsm_state81 = 93'd37778931862957161709568;
parameter    ap_ST_fsm_state82 = 93'd75557863725914323419136;
parameter    ap_ST_fsm_state83 = 93'd151115727451828646838272;
parameter    ap_ST_fsm_state84 = 93'd302231454903657293676544;
parameter    ap_ST_fsm_state85 = 93'd604462909807314587353088;
parameter    ap_ST_fsm_state86 = 93'd1208925819614629174706176;
parameter    ap_ST_fsm_state87 = 93'd2417851639229258349412352;
parameter    ap_ST_fsm_state88 = 93'd4835703278458516698824704;
parameter    ap_ST_fsm_state89 = 93'd9671406556917033397649408;
parameter    ap_ST_fsm_state90 = 93'd19342813113834066795298816;
parameter    ap_ST_fsm_state91 = 93'd38685626227668133590597632;
parameter    ap_ST_fsm_pp2_stage0 = 93'd77371252455336267181195264;
parameter    ap_ST_fsm_state95 = 93'd154742504910672534362390528;
parameter    ap_ST_fsm_state96 = 93'd309485009821345068724781056;
parameter    ap_ST_fsm_state97 = 93'd618970019642690137449562112;
parameter    ap_ST_fsm_state98 = 93'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp3_stage0 = 93'd2475880078570760549798248448;
parameter    ap_ST_fsm_state107 = 93'd4951760157141521099596496896;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM3_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM3_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_USER_VALUE = 0;
parameter    C_M_AXI_GMEM3_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM3_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM4_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM4_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM4_DATA_WIDTH = 64;
parameter    C_M_AXI_GMEM4_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM4_USER_VALUE = 0;
parameter    C_M_AXI_GMEM4_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM4_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM3_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM4_WSTRB_WIDTH = (64 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem3_AWVALID;
input   m_axi_gmem3_AWREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_AWADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_AWID;
output  [7:0] m_axi_gmem3_AWLEN;
output  [2:0] m_axi_gmem3_AWSIZE;
output  [1:0] m_axi_gmem3_AWBURST;
output  [1:0] m_axi_gmem3_AWLOCK;
output  [3:0] m_axi_gmem3_AWCACHE;
output  [2:0] m_axi_gmem3_AWPROT;
output  [3:0] m_axi_gmem3_AWQOS;
output  [3:0] m_axi_gmem3_AWREGION;
output  [C_M_AXI_GMEM3_AWUSER_WIDTH - 1:0] m_axi_gmem3_AWUSER;
output   m_axi_gmem3_WVALID;
input   m_axi_gmem3_WREADY;
output  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_WDATA;
output  [C_M_AXI_GMEM3_WSTRB_WIDTH - 1:0] m_axi_gmem3_WSTRB;
output   m_axi_gmem3_WLAST;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_WID;
output  [C_M_AXI_GMEM3_WUSER_WIDTH - 1:0] m_axi_gmem3_WUSER;
output   m_axi_gmem3_ARVALID;
input   m_axi_gmem3_ARREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_ARADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_ARID;
output  [7:0] m_axi_gmem3_ARLEN;
output  [2:0] m_axi_gmem3_ARSIZE;
output  [1:0] m_axi_gmem3_ARBURST;
output  [1:0] m_axi_gmem3_ARLOCK;
output  [3:0] m_axi_gmem3_ARCACHE;
output  [2:0] m_axi_gmem3_ARPROT;
output  [3:0] m_axi_gmem3_ARQOS;
output  [3:0] m_axi_gmem3_ARREGION;
output  [C_M_AXI_GMEM3_ARUSER_WIDTH - 1:0] m_axi_gmem3_ARUSER;
input   m_axi_gmem3_RVALID;
output   m_axi_gmem3_RREADY;
input  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_RDATA;
input   m_axi_gmem3_RLAST;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_RID;
input  [C_M_AXI_GMEM3_RUSER_WIDTH - 1:0] m_axi_gmem3_RUSER;
input  [1:0] m_axi_gmem3_RRESP;
input   m_axi_gmem3_BVALID;
output   m_axi_gmem3_BREADY;
input  [1:0] m_axi_gmem3_BRESP;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_BID;
input  [C_M_AXI_GMEM3_BUSER_WIDTH - 1:0] m_axi_gmem3_BUSER;
output   m_axi_gmem4_AWVALID;
input   m_axi_gmem4_AWREADY;
output  [C_M_AXI_GMEM4_ADDR_WIDTH - 1:0] m_axi_gmem4_AWADDR;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_AWID;
output  [7:0] m_axi_gmem4_AWLEN;
output  [2:0] m_axi_gmem4_AWSIZE;
output  [1:0] m_axi_gmem4_AWBURST;
output  [1:0] m_axi_gmem4_AWLOCK;
output  [3:0] m_axi_gmem4_AWCACHE;
output  [2:0] m_axi_gmem4_AWPROT;
output  [3:0] m_axi_gmem4_AWQOS;
output  [3:0] m_axi_gmem4_AWREGION;
output  [C_M_AXI_GMEM4_AWUSER_WIDTH - 1:0] m_axi_gmem4_AWUSER;
output   m_axi_gmem4_WVALID;
input   m_axi_gmem4_WREADY;
output  [C_M_AXI_GMEM4_DATA_WIDTH - 1:0] m_axi_gmem4_WDATA;
output  [C_M_AXI_GMEM4_WSTRB_WIDTH - 1:0] m_axi_gmem4_WSTRB;
output   m_axi_gmem4_WLAST;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_WID;
output  [C_M_AXI_GMEM4_WUSER_WIDTH - 1:0] m_axi_gmem4_WUSER;
output   m_axi_gmem4_ARVALID;
input   m_axi_gmem4_ARREADY;
output  [C_M_AXI_GMEM4_ADDR_WIDTH - 1:0] m_axi_gmem4_ARADDR;
output  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_ARID;
output  [7:0] m_axi_gmem4_ARLEN;
output  [2:0] m_axi_gmem4_ARSIZE;
output  [1:0] m_axi_gmem4_ARBURST;
output  [1:0] m_axi_gmem4_ARLOCK;
output  [3:0] m_axi_gmem4_ARCACHE;
output  [2:0] m_axi_gmem4_ARPROT;
output  [3:0] m_axi_gmem4_ARQOS;
output  [3:0] m_axi_gmem4_ARREGION;
output  [C_M_AXI_GMEM4_ARUSER_WIDTH - 1:0] m_axi_gmem4_ARUSER;
input   m_axi_gmem4_RVALID;
output   m_axi_gmem4_RREADY;
input  [C_M_AXI_GMEM4_DATA_WIDTH - 1:0] m_axi_gmem4_RDATA;
input   m_axi_gmem4_RLAST;
input  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_RID;
input  [C_M_AXI_GMEM4_RUSER_WIDTH - 1:0] m_axi_gmem4_RUSER;
input  [1:0] m_axi_gmem4_RRESP;
input   m_axi_gmem4_BVALID;
output   m_axi_gmem4_BREADY;
input  [1:0] m_axi_gmem4_BRESP;
input  [C_M_AXI_GMEM4_ID_WIDTH - 1:0] m_axi_gmem4_BID;
input  [C_M_AXI_GMEM4_BUSER_WIDTH - 1:0] m_axi_gmem4_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [92:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] img_inp;
wire   [63:0] img_out;
wire   [31:0] rows;
wire   [31:0] cols;
reg    gmem3_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln332_1_reg_2838;
reg    gmem3_blk_n_AW;
wire    ap_CS_fsm_state72;
reg    gmem3_blk_n_W;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln387_reg_2946;
reg   [0:0] icmp_ln387_reg_2946_pp1_iter1_reg;
reg    gmem3_blk_n_B;
wire    ap_CS_fsm_state80;
reg   [0:0] icmp_ln332_reg_2829;
reg    gmem3_blk_n_AR;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state85;
reg   [0:0] cmp119_i_i270_reg_2775;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln422_reg_3069;
reg    gmem4_blk_n_AW;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln433_reg_3088;
reg   [0:0] icmp_ln452_reg_3112;
reg    gmem4_blk_n_W;
reg    ap_enable_reg_pp3_iter2;
reg   [0:0] icmp_ln452_reg_3112_pp3_iter1_reg;
reg    gmem4_blk_n_B;
reg    ap_enable_reg_pp3_iter7;
reg   [0:0] icmp_ln452_reg_3112_pp3_iter6_reg;
reg    gmem3_AWVALID;
wire    gmem3_AWREADY;
reg    gmem3_WVALID;
wire    gmem3_WREADY;
reg    gmem3_ARVALID;
wire    gmem3_ARREADY;
reg   [63:0] gmem3_ARADDR;
reg   [31:0] gmem3_ARLEN;
wire    gmem3_RVALID;
reg    gmem3_RREADY;
wire   [63:0] gmem3_RDATA;
wire    gmem3_RLAST;
wire   [0:0] gmem3_RID;
wire   [0:0] gmem3_RUSER;
wire   [1:0] gmem3_RRESP;
wire    gmem3_BVALID;
reg    gmem3_BREADY;
wire   [1:0] gmem3_BRESP;
wire   [0:0] gmem3_BID;
wire   [0:0] gmem3_BUSER;
reg    gmem4_AWVALID;
wire    gmem4_AWREADY;
reg    gmem4_WVALID;
wire    gmem4_WREADY;
wire   [63:0] gmem4_WDATA;
wire    gmem4_ARREADY;
wire    gmem4_RVALID;
wire   [63:0] gmem4_RDATA;
wire    gmem4_RLAST;
wire   [0:0] gmem4_RID;
wire   [0:0] gmem4_RUSER;
wire   [1:0] gmem4_RRESP;
wire    gmem4_BVALID;
reg    gmem4_BREADY;
wire   [1:0] gmem4_BRESP;
wire   [0:0] gmem4_BID;
wire   [0:0] gmem4_BUSER;
reg   [28:0] i_reg_719;
reg   [15:0] idx1_V_reg_730;
reg   [15:0] dep_V_reg_741;
reg   [15:0] idx2_V_reg_752;
reg   [28:0] i_1_reg_774;
reg   [15:0] idx1_V_2_reg_785;
reg   [15:0] dep_V_2_reg_796;
reg   [15:0] idx2_V_3_reg_807;
reg   [5:0] k_reg_830;
reg   [5:0] k_reg_830_pp2_iter1_reg;
wire    ap_block_state92_pp2_stage0_iter0;
reg    ap_block_state93_pp2_stage0_iter1;
wire    ap_block_state94_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
reg   [7:0] j_reg_842;
reg   [8:0] pixel_V_reg_853;
reg   [2:0] id_V_reg_864;
reg   [31:0] bit_reg_875;
reg   [63:0] img_out_read_reg_2547;
reg   [63:0] img_inp_read_reg_2552;
wire   [10:0] npcCols_fu_984_p3;
reg   [10:0] npcCols_reg_2558;
wire   [10:0] npcCols_8_fu_1046_p3;
reg   [10:0] npcCols_8_reg_2563;
wire   [9:0] trunc_ln302_fu_1054_p1;
reg   [9:0] trunc_ln302_reg_2568;
reg   [7:0] slice_h_reg_2573;
wire   [5:0] ram_row_depth_fu_1068_p4;
reg   [5:0] ram_row_depth_reg_2582;
wire   [10:0] grp_fu_1082_p2;
reg   [10:0] bdrows_reg_2601;
wire    ap_CS_fsm_state15;
wire   [11:0] zext_ln304_fu_1091_p1;
reg   [11:0] zext_ln304_reg_2607;
wire   [12:0] add_ln305_2_fu_1117_p2;
reg   [12:0] add_ln305_2_reg_2618;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state46;
wire   [12:0] bramsetsval_fu_1135_p2;
reg   [12:0] bramsetsval_reg_2634;
wire   [3:0] trunc_ln305_fu_1140_p1;
reg   [3:0] trunc_ln305_reg_2640;
wire   [9:0] zext_ln302_1_fu_1157_p1;
reg   [9:0] zext_ln302_1_reg_2655;
wire    ap_CS_fsm_state49;
wire   [10:0] zext_ln302_fu_1160_p1;
reg   [10:0] zext_ln302_reg_2660;
wire   [22:0] zext_ln302_2_fu_1163_p1;
reg   [22:0] zext_ln302_2_reg_2665;
wire   [31:0] zext_ln303_fu_1169_p1;
reg   [31:0] zext_ln303_reg_2670;
wire   [29:0] zext_ln303_4_fu_1172_p1;
reg   [29:0] zext_ln303_4_reg_2675;
wire   [28:0] zext_ln303_5_fu_1175_p1;
reg   [28:0] zext_ln303_5_reg_2680;
wire   [15:0] zext_ln303_2_fu_1178_p1;
reg   [15:0] zext_ln303_2_reg_2685;
wire   [15:0] zext_ln305_1_fu_1181_p1;
reg   [15:0] zext_ln305_1_reg_2693;
wire   [22:0] trunc_ln307_fu_1184_p1;
reg   [22:0] trunc_ln307_reg_2698;
wire   [3:0] bramtotal_fu_1187_p2;
reg   [3:0] bramtotal_reg_2703;
wire   [15:0] op2_assign_1_cast_cast_fu_1197_p1;
reg   [15:0] op2_assign_1_cast_cast_reg_2708;
wire   [9:0] ram_row_depth_cast35_cast_fu_1201_p1;
reg   [9:0] ram_row_depth_cast35_cast_reg_2714;
wire  signed [17:0] grp_fu_2513_p2;
reg  signed [17:0] op2_assign_reg_2720;
(* use_dsp48 = "no" *) wire   [23:0] sub_ln324_fu_1204_p2;
reg   [23:0] sub_ln324_reg_2725;
wire   [3:0] add_ln312_fu_1209_p2;
reg   [3:0] add_ln312_reg_2730;
wire    ap_CS_fsm_state50;
wire   [2:0] select_ln312_fu_1227_p3;
reg   [2:0] select_ln312_reg_2738;
wire   [0:0] icmp_ln312_fu_1215_p2;
wire   [0:0] select_ln312_1_fu_1253_p3;
reg   [0:0] select_ln312_1_reg_2744;
wire   [1:0] select_ln312_2_fu_1261_p3;
reg   [1:0] select_ln312_2_reg_2750;
wire   [1:0] trunc_ln318_fu_1269_p1;
reg   [1:0] trunc_ln318_reg_2755;
wire   [0:0] icmp_ln319_fu_1273_p2;
reg   [0:0] icmp_ln319_reg_2760;
wire   [7:0] div153_i_i_fu_1289_p4;
reg   [7:0] div153_i_i_reg_2770;
wire   [0:0] cmp119_i_i270_fu_1298_p2;
wire   [16:0] zext_ln414_fu_1303_p1;
reg   [16:0] zext_ln414_reg_2779;
reg   [7:0] trunc_ln417_2_reg_2784;
wire   [14:0] ram_row_depth_cast25_fu_1316_p1;
reg   [14:0] ram_row_depth_cast25_reg_2789;
wire    ap_CS_fsm_state51;
wire   [28:0] grp_fu_2519_p2;
reg   [28:0] lBound_reg_2799;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
reg   [60:0] trunc_ln536_1_reg_2812;
wire    ap_CS_fsm_state57;
wire   [31:0] zext_ln315_fu_1394_p1;
reg   [31:0] zext_ln315_reg_2817;
reg   [63:0] gmem3_addr_1_reg_2822;
wire   [0:0] icmp_ln332_fu_1408_p2;
wire    ap_CS_fsm_state64;
wire   [28:0] i_3_fu_1413_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state65_pp0_stage0_iter0;
reg    ap_block_state66_pp0_stage0_iter1;
wire    ap_block_state67_pp0_stage0_iter2;
wire    ap_block_state68_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln332_1_fu_1419_p2;
reg   [0:0] icmp_ln332_1_reg_2838_pp0_iter1_reg;
wire   [15:0] idx2_V_7_fu_1465_p3;
reg   [15:0] idx2_V_7_reg_2842;
wire   [15:0] dep_V_5_fu_1473_p3;
reg   [15:0] dep_V_5_reg_2849;
wire   [9:0] index_fu_1485_p2;
reg   [9:0] index_reg_2856;
reg   [9:0] index_reg_2856_pp0_iter1_reg;
reg   [9:0] index_reg_2856_pp0_iter2_reg;
wire   [3:0] trunc_ln353_fu_1491_p1;
reg   [3:0] trunc_ln353_reg_2863;
reg   [3:0] trunc_ln353_reg_2863_pp0_iter1_reg;
wire   [15:0] idx1_V_5_fu_1495_p2;
reg   [63:0] iReg_V_reg_2872;
reg   [63:0] iReg_V_reg_2872_pp0_iter2_reg;
wire   [0:0] icmp_ln870_2_fu_1501_p2;
reg   [0:0] icmp_ln870_2_reg_2892;
reg   [0:0] icmp_ln870_2_reg_2892_pp0_iter2_reg;
wire   [0:0] icmp_ln870_5_fu_1506_p2;
reg   [0:0] icmp_ln870_5_reg_2896;
reg   [0:0] icmp_ln870_5_reg_2896_pp0_iter2_reg;
wire   [0:0] icmp_ln870_6_fu_1513_p2;
reg   [0:0] icmp_ln870_6_reg_2900;
reg   [0:0] icmp_ln870_6_reg_2900_pp0_iter2_reg;
wire   [0:0] icmp_ln870_4_fu_1518_p2;
reg   [0:0] icmp_ln870_4_reg_2904;
reg   [0:0] icmp_ln870_4_reg_2904_pp0_iter2_reg;
reg   [9:0] iBuff_V_0_addr_reg_2908;
reg   [9:0] iBuff_V_1_addr_reg_2913;
reg   [9:0] iBuff_V_4_addr_reg_2918;
reg   [9:0] iBuff_V_7_addr_reg_2923;
reg   [9:0] iBuff_V_10_addr_reg_2928;
wire   [3:0] intra_i_1_fu_1558_p2;
reg   [3:0] intra_i_1_reg_2933;
wire    ap_CS_fsm_state70;
wire   [28:0] i_2_fu_1570_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state73_pp1_stage0_iter0;
wire    ap_block_state74_pp1_stage0_iter1;
wire    ap_block_state75_pp1_stage0_iter2;
reg    ap_block_state75_io;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln387_fu_1576_p2;
wire   [15:0] idx2_V_6_fu_1618_p3;
reg   [15:0] idx2_V_6_reg_2950;
wire   [15:0] rhs_fu_1626_p3;
reg   [15:0] rhs_reg_2955;
wire   [3:0] trunc_ln402_fu_1663_p1;
reg   [3:0] trunc_ln402_reg_2960;
wire   [15:0] idx1_V_4_fu_1667_p2;
wire   [63:0] oReg_V_fu_1673_p13;
reg   [63:0] oReg_V_reg_3025;
wire   [2:0] slice_1_fu_1700_p2;
wire   [9:0] add_ln417_fu_1705_p2;
reg   [9:0] add_ln417_reg_3035;
wire    ap_CS_fsm_state81;
wire   [0:0] icmp_ln417_fu_1711_p2;
wire   [63:0] empty_38_fu_1731_p2;
reg   [63:0] empty_38_reg_3048;
wire    ap_CS_fsm_state84;
wire   [16:0] zext_ln414_1_fu_1736_p1;
reg   [16:0] zext_ln414_1_reg_3053;
wire   [5:0] add_ln422_fu_1760_p2;
reg   [5:0] add_ln422_reg_3064;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln422_fu_1766_p2;
reg   [0:0] icmp_ln422_reg_3069_pp2_iter1_reg;
reg   [63:0] gmem3_addr_read_reg_3073;
wire   [16:0] grp_fu_2543_p2;
reg   [16:0] mul_ln414_reg_3078;
wire    ap_CS_fsm_state98;
wire   [7:0] add_ln433_fu_1776_p2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state99_pp3_stage0_iter0;
wire    ap_block_state100_pp3_stage0_iter1;
reg    ap_predicate_op669_writereq_state100;
reg    ap_block_state100_io;
wire    ap_block_state101_pp3_stage0_iter2;
reg    ap_block_state101_io;
wire    ap_block_state102_pp3_stage0_iter3;
wire    ap_block_state103_pp3_stage0_iter4;
wire    ap_block_state104_pp3_stage0_iter5;
wire    ap_block_state105_pp3_stage0_iter6;
reg    ap_block_state106_pp3_stage0_iter7;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] icmp_ln433_fu_1782_p2;
wire   [0:0] icmp_ln870_3_fu_1791_p2;
reg   [0:0] icmp_ln870_3_reg_3092;
wire   [8:0] pixel_V_2_fu_1803_p3;
reg   [8:0] pixel_V_2_reg_3097;
wire   [2:0] id_V_1_fu_1822_p3;
wire   [0:0] icmp_ln452_fu_1830_p2;
reg   [0:0] icmp_ln452_reg_3112_pp3_iter2_reg;
reg   [0:0] icmp_ln452_reg_3112_pp3_iter3_reg;
reg   [0:0] icmp_ln452_reg_3112_pp3_iter4_reg;
reg   [0:0] icmp_ln452_reg_3112_pp3_iter5_reg;
reg   [60:0] trunc_ln2_reg_3116;
wire   [7:0] select_ln870_fu_1898_p3;
reg   [7:0] select_ln870_reg_3121;
wire   [7:0] select_ln870_1_fu_1980_p3;
reg   [7:0] select_ln870_1_reg_3126;
wire   [7:0] select_ln870_2_fu_2062_p3;
reg   [7:0] select_ln870_2_reg_3131;
wire   [7:0] select_ln870_3_fu_2144_p3;
reg   [7:0] select_ln870_3_reg_3136;
wire   [7:0] select_ln870_4_fu_2226_p3;
reg   [7:0] select_ln870_4_reg_3141;
wire   [7:0] select_ln870_5_fu_2308_p3;
reg   [7:0] select_ln870_5_reg_3146;
wire   [7:0] select_ln870_6_fu_2390_p3;
reg   [7:0] select_ln870_6_reg_3151;
wire   [0:0] icmp_ln870_16_fu_2466_p2;
reg   [0:0] icmp_ln870_16_reg_3156;
wire   [31:0] bit_2_fu_2482_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state65;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state73;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state91;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state92;
reg    ap_enable_reg_pp2_iter2;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_condition_pp3_exit_iter1_state100;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg   [9:0] iBuff_V_0_address0;
reg    iBuff_V_0_ce0;
reg    iBuff_V_0_we0;
reg   [63:0] iBuff_V_0_d0;
wire   [63:0] iBuff_V_0_q0;
reg   [9:0] iBuff_V_0_address1;
reg    iBuff_V_0_ce1;
reg    iBuff_V_0_we1;
wire   [63:0] iBuff_V_0_q1;
reg   [9:0] iBuff_V_1_address0;
reg    iBuff_V_1_ce0;
reg    iBuff_V_1_we0;
reg   [63:0] iBuff_V_1_d0;
wire   [63:0] iBuff_V_1_q0;
reg   [9:0] iBuff_V_1_address1;
reg    iBuff_V_1_ce1;
reg    iBuff_V_1_we1;
wire   [63:0] iBuff_V_1_q1;
reg   [9:0] iBuff_V_2_address0;
reg    iBuff_V_2_ce0;
reg    iBuff_V_2_we0;
reg   [63:0] iBuff_V_2_d0;
wire   [63:0] iBuff_V_2_q0;
reg    iBuff_V_2_ce1;
wire   [63:0] iBuff_V_2_q1;
reg   [9:0] iBuff_V_3_address0;
reg    iBuff_V_3_ce0;
reg    iBuff_V_3_we0;
reg   [63:0] iBuff_V_3_d0;
wire   [63:0] iBuff_V_3_q0;
reg    iBuff_V_3_ce1;
wire   [63:0] iBuff_V_3_q1;
reg   [9:0] iBuff_V_4_address0;
reg    iBuff_V_4_ce0;
reg    iBuff_V_4_we0;
reg   [63:0] iBuff_V_4_d0;
wire   [63:0] iBuff_V_4_q0;
reg   [9:0] iBuff_V_4_address1;
reg    iBuff_V_4_ce1;
reg    iBuff_V_4_we1;
wire   [63:0] iBuff_V_4_q1;
reg   [9:0] iBuff_V_5_address0;
reg    iBuff_V_5_ce0;
reg    iBuff_V_5_we0;
reg   [63:0] iBuff_V_5_d0;
wire   [63:0] iBuff_V_5_q0;
reg    iBuff_V_5_ce1;
wire   [63:0] iBuff_V_5_q1;
reg   [9:0] iBuff_V_6_address0;
reg    iBuff_V_6_ce0;
reg    iBuff_V_6_we0;
reg   [63:0] iBuff_V_6_d0;
wire   [63:0] iBuff_V_6_q0;
reg    iBuff_V_6_ce1;
wire   [63:0] iBuff_V_6_q1;
reg   [9:0] iBuff_V_7_address0;
reg    iBuff_V_7_ce0;
reg    iBuff_V_7_we0;
reg   [63:0] iBuff_V_7_d0;
wire   [63:0] iBuff_V_7_q0;
reg   [9:0] iBuff_V_7_address1;
reg    iBuff_V_7_ce1;
reg    iBuff_V_7_we1;
wire   [63:0] iBuff_V_7_q1;
reg   [9:0] iBuff_V_8_address0;
reg    iBuff_V_8_ce0;
reg    iBuff_V_8_we0;
reg   [63:0] iBuff_V_8_d0;
wire   [63:0] iBuff_V_8_q0;
reg    iBuff_V_8_ce1;
wire   [63:0] iBuff_V_8_q1;
reg   [9:0] iBuff_V_9_address0;
reg    iBuff_V_9_ce0;
reg    iBuff_V_9_we0;
reg   [63:0] iBuff_V_9_d0;
wire   [63:0] iBuff_V_9_q0;
reg    iBuff_V_9_ce1;
wire   [63:0] iBuff_V_9_q1;
reg   [9:0] iBuff_V_10_address0;
reg    iBuff_V_10_ce0;
reg    iBuff_V_10_we0;
reg   [63:0] iBuff_V_10_d0;
wire   [63:0] iBuff_V_10_q0;
reg   [9:0] iBuff_V_10_address1;
reg    iBuff_V_10_ce1;
reg    iBuff_V_10_we1;
wire   [63:0] iBuff_V_10_q1;
reg   [5:0] oBuff_V_address0;
reg    oBuff_V_ce0;
reg    oBuff_V_we0;
wire   [63:0] oBuff_V_q0;
wire    grp_TopDown_11_3_1024_s_fu_886_ap_start;
wire    grp_TopDown_11_3_1024_s_fu_886_ap_done;
wire    grp_TopDown_11_3_1024_s_fu_886_ap_idle;
wire    grp_TopDown_11_3_1024_s_fu_886_ap_ready;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff1_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff1_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff1_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff1_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff1_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff1_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff2_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff2_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff2_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff2_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff2_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff2_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff3_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff3_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff3_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff3_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff3_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff3_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff4_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff4_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff4_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff4_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff4_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff4_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff5_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff5_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff5_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff5_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff5_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff5_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff6_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff6_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff6_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff6_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff6_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff6_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff7_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff7_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff7_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff7_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff7_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff7_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff8_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff8_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff8_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff8_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff8_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff8_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff9_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff9_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff9_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff9_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff9_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff9_ce1;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff10_address0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff10_ce0;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff10_we0;
wire   [63:0] grp_TopDown_11_3_1024_s_fu_886_iBuff10_d0;
wire   [9:0] grp_TopDown_11_3_1024_s_fu_886_iBuff10_address1;
wire    grp_TopDown_11_3_1024_s_fu_886_iBuff10_ce1;
reg   [3:0] indvar_flatten_reg_686;
reg    ap_block_state80;
reg   [1:0] inter_i_reg_697;
reg   [2:0] slice_reg_708;
reg   [15:0] ap_phi_mux_dep_V_phi_fu_745_p4;
reg   [15:0] ap_phi_mux_idx2_V_phi_fu_756_p4;
reg   [3:0] intra_i_reg_763;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state69;
reg   [15:0] ap_phi_mux_dep_V_2_phi_fu_800_p4;
reg   [15:0] ap_phi_mux_idx2_V_3_phi_fu_811_p4;
reg   [9:0] ii_reg_818;
wire    ap_CS_fsm_state107;
reg   [5:0] ap_phi_mux_k_phi_fu_834_p4;
reg   [8:0] ap_phi_mux_pixel_V_phi_fu_857_p4;
reg    grp_TopDown_11_3_1024_s_fu_886_ap_start_reg;
wire   [0:0] icmp_ln377_fu_1564_p2;
wire   [63:0] zext_ln534_fu_1523_p1;
wire   [63:0] zext_ln534_2_fu_1541_p1;
wire   [63:0] zext_ln534_3_fu_1550_p1;
wire   [63:0] zext_ln534_1_fu_1648_p1;
wire   [63:0] zext_ln422_fu_1771_p1;
wire   [63:0] conv_i_i_i_fu_1811_p1;
wire  signed [63:0] sext_ln536_1_fu_1398_p1;
wire  signed [63:0] sext_ln422_fu_1749_p1;
wire   [63:0] sext_ln548_fu_2472_p1;
wire    ap_block_pp1_stage0_01001;
reg    ap_block_state85_io;
reg    ap_block_pp3_stage0_01001;
wire   [10:0] empty_34_fu_912_p1;
wire   [10:0] sub_ln24_fu_924_p2;
wire   [5:0] trunc_ln24_1_fu_930_p4;
wire   [0:0] tmp_4_fu_916_p3;
wire   [5:0] sub_ln24_1_fu_940_p2;
wire   [5:0] tmp_fu_946_p4;
wire   [5:0] select_ln24_fu_956_p3;
wire   [10:0] shl_ln_fu_964_p3;
wire   [4:0] empty_33_fu_908_p1;
wire   [0:0] icmp_ln26_fu_978_p2;
wire   [10:0] npcColsNxt_fu_972_p2;
wire   [7:0] trunc_ln1_fu_992_p4;
wire   [7:0] sub_ln31_fu_1002_p2;
wire   [7:0] tmp_1_fu_1008_p4;
wire   [7:0] select_ln31_fu_1018_p3;
wire   [10:0] shl_ln1_fu_1026_p3;
wire   [2:0] empty_fu_904_p1;
wire   [0:0] icmp_ln33_fu_1040_p2;
wire   [10:0] npcColsNxt_8_fu_1034_p2;
wire   [5:0] grp_fu_1082_p1;
wire   [11:0] add_ln305_fu_1095_p2;
wire   [11:0] zext_ln302_3_fu_1088_p1;
wire   [11:0] grp_fu_1107_p0;
wire   [10:0] grp_fu_1107_p1;
wire   [11:0] grp_fu_1107_p2;
wire   [12:0] zext_ln305_fu_1113_p1;
wire   [12:0] grp_fu_1123_p0;
wire   [2:0] grp_fu_1123_p1;
wire   [12:0] grp_fu_1123_p2;
wire  signed [11:0] sub66_i_i_fu_1148_p2;
wire   [23:0] grp_fu_2505_p2;
wire   [12:0] op2_assign_1_cast_fu_1192_p2;
wire   [23:0] zext_ln302_4_fu_1166_p1;
wire   [0:0] icmp_ln318_fu_1221_p2;
wire   [1:0] add_ln312_1_fu_1235_p2;
wire   [0:0] cmp31_i_i_mid1_fu_1241_p2;
wire   [0:0] cmp31_i_i4_fu_1247_p2;
wire   [22:0] select_ln319_fu_1279_p3;
wire   [1:0] xor_ln324_fu_1319_p2;
wire   [7:0] mul_ln322_fu_1331_p0;
wire   [2:0] mul_ln322_fu_1331_p1;
wire   [10:0] mul_ln322_fu_1331_p2;
wire   [23:0] zext_ln324_fu_1336_p1;
wire   [23:0] grp_fu_2524_p3;
wire  signed [23:0] sel_tmp_v_fu_1340_p3;
wire   [0:0] xor_ln312_fu_1350_p2;
wire   [0:0] and_ln319_fu_1355_p2;
wire  signed [29:0] grp_fu_2531_p2;
wire   [29:0] offset_fu_1360_p3;
wire   [32:0] tmp_5_fu_1367_p3;
wire  signed [63:0] sext_ln536_fu_1375_p1;
wire   [63:0] add_ln536_fu_1379_p2;
wire   [0:0] icmp_ln870_fu_1424_p2;
wire   [15:0] idx2_V_1_fu_1429_p2;
wire   [15:0] idx1_V_1_fu_1443_p3;
wire   [15:0] idx2_V_2_fu_1435_p3;
wire   [0:0] icmp_ln870_1_fu_1455_p2;
wire   [15:0] dep_V_1_fu_1460_p2;
wire   [9:0] trunc_ln208_fu_1481_p1;
wire   [9:0] trunc_ln327_fu_1451_p1;
wire   [17:0] zext_ln870_fu_1510_p1;
wire   [9:0] ret_2_fu_1537_p2;
wire   [9:0] ret_fu_1546_p2;
wire   [0:0] icmp_ln870_8_fu_1581_p2;
wire   [15:0] idx2_V_4_fu_1586_p2;
wire   [15:0] idx2_V_5_fu_1592_p3;
wire   [0:0] icmp_ln870_9_fu_1608_p2;
wire   [15:0] dep_V_3_fu_1613_p2;
wire   [15:0] idx1_V_6_fu_1600_p3;
wire   [9:0] trunc_ln1346_1_fu_1638_p1;
wire   [9:0] trunc_ln1346_fu_1634_p1;
wire   [9:0] ret_1_fu_1642_p2;
wire   [14:0] grp_fu_2537_p2;
wire   [17:0] tmp_2_fu_1720_p3;
wire   [63:0] p_cast38_fu_1727_p1;
wire   [60:0] trunc_ln_fu_1740_p4;
wire   [8:0] pixel_V_1_fu_1797_p2;
wire   [2:0] add_ln691_fu_1816_p2;
wire   [16:0] zext_ln433_fu_1787_p1;
(* use_dsp48 = "no" *) wire   [16:0] add_ln452_fu_1835_p2;
wire   [19:0] shl_ln3_fu_1840_p3;
wire   [63:0] zext_ln548_fu_1848_p1;
wire   [63:0] add_ln548_fu_1852_p2;
wire   [31:0] bit_1_fu_1867_p3;
wire   [5:0] trunc_ln674_fu_1874_p1;
wire   [63:0] zext_ln674_fu_1878_p1;
wire   [63:0] lshr_ln674_fu_1882_p2;
wire   [1:0] trunc_ln674_1_fu_1888_p1;
wire   [0:0] icmp_ln870_7_fu_1892_p2;
wire   [31:0] add_ln444_fu_1906_p2;
wire   [31:0] add_ln444_1_fu_1912_p2;
wire   [6:0] trunc_ln674_2_fu_1924_p1;
wire   [0:0] icmp_ln674_fu_1918_p2;
reg   [63:0] tmp_6_fu_1928_p4;
wire   [6:0] sub_ln674_fu_1938_p2;
wire   [6:0] select_ln674_1_fu_1952_p3;
wire   [63:0] select_ln674_fu_1944_p3;
wire   [63:0] zext_ln674_1_fu_1960_p1;
wire   [63:0] lshr_ln674_1_fu_1964_p2;
wire   [1:0] trunc_ln358_fu_1970_p1;
wire   [0:0] icmp_ln870_10_fu_1974_p2;
wire   [31:0] add_ln444_2_fu_1988_p2;
wire   [31:0] add_ln444_8_fu_1994_p2;
wire   [6:0] trunc_ln674_3_fu_2006_p1;
wire   [0:0] icmp_ln674_1_fu_2000_p2;
reg   [63:0] tmp_7_fu_2010_p4;
wire   [6:0] sub_ln674_1_fu_2020_p2;
wire   [6:0] select_ln674_3_fu_2034_p3;
wire   [63:0] select_ln674_2_fu_2026_p3;
wire   [63:0] zext_ln674_2_fu_2042_p1;
wire   [63:0] lshr_ln674_2_fu_2046_p2;
wire   [1:0] trunc_ln358_1_fu_2052_p1;
wire   [0:0] icmp_ln870_11_fu_2056_p2;
wire   [31:0] add_ln444_3_fu_2070_p2;
wire   [31:0] add_ln444_9_fu_2076_p2;
wire   [6:0] trunc_ln674_4_fu_2088_p1;
wire   [0:0] icmp_ln674_2_fu_2082_p2;
reg   [63:0] tmp_8_fu_2092_p4;
wire   [6:0] sub_ln674_2_fu_2102_p2;
wire   [6:0] select_ln674_5_fu_2116_p3;
wire   [63:0] select_ln674_4_fu_2108_p3;
wire   [63:0] zext_ln674_3_fu_2124_p1;
wire   [63:0] lshr_ln674_3_fu_2128_p2;
wire   [1:0] trunc_ln358_2_fu_2134_p1;
wire   [0:0] icmp_ln870_12_fu_2138_p2;
wire   [31:0] add_ln444_4_fu_2152_p2;
wire   [31:0] add_ln444_10_fu_2158_p2;
wire   [6:0] trunc_ln674_5_fu_2170_p1;
wire   [0:0] icmp_ln674_3_fu_2164_p2;
reg   [63:0] tmp_9_fu_2174_p4;
wire   [6:0] sub_ln674_3_fu_2184_p2;
wire   [6:0] select_ln674_7_fu_2198_p3;
wire   [63:0] select_ln674_6_fu_2190_p3;
wire   [63:0] zext_ln674_4_fu_2206_p1;
wire   [63:0] lshr_ln674_4_fu_2210_p2;
wire   [1:0] trunc_ln358_3_fu_2216_p1;
wire   [0:0] icmp_ln870_13_fu_2220_p2;
wire   [31:0] add_ln444_5_fu_2234_p2;
wire   [31:0] add_ln444_11_fu_2240_p2;
wire   [6:0] trunc_ln674_6_fu_2252_p1;
wire   [0:0] icmp_ln674_4_fu_2246_p2;
reg   [63:0] tmp_10_fu_2256_p4;
wire   [6:0] sub_ln674_4_fu_2266_p2;
wire   [6:0] select_ln674_9_fu_2280_p3;
wire   [63:0] select_ln674_8_fu_2272_p3;
wire   [63:0] zext_ln674_5_fu_2288_p1;
wire   [63:0] lshr_ln674_5_fu_2292_p2;
wire   [1:0] trunc_ln358_4_fu_2298_p1;
wire   [0:0] icmp_ln870_14_fu_2302_p2;
wire   [31:0] add_ln444_6_fu_2316_p2;
wire   [31:0] add_ln444_12_fu_2322_p2;
wire   [6:0] trunc_ln674_7_fu_2334_p1;
wire   [0:0] icmp_ln674_5_fu_2328_p2;
reg   [63:0] tmp_11_fu_2338_p4;
wire   [6:0] sub_ln674_5_fu_2348_p2;
wire   [6:0] select_ln674_11_fu_2362_p3;
wire   [63:0] select_ln674_10_fu_2354_p3;
wire   [63:0] zext_ln674_6_fu_2370_p1;
wire   [63:0] lshr_ln674_6_fu_2374_p2;
wire   [1:0] trunc_ln358_5_fu_2380_p1;
wire   [0:0] icmp_ln870_15_fu_2384_p2;
wire   [31:0] add_ln444_7_fu_2398_p2;
wire   [31:0] add_ln444_13_fu_2404_p2;
wire   [6:0] trunc_ln674_8_fu_2416_p1;
wire   [0:0] icmp_ln674_6_fu_2410_p2;
reg   [63:0] tmp_12_fu_2420_p4;
wire   [6:0] sub_ln674_6_fu_2430_p2;
wire   [6:0] select_ln674_13_fu_2444_p3;
wire   [63:0] select_ln674_12_fu_2436_p3;
wire   [63:0] zext_ln674_7_fu_2452_p1;
wire   [63:0] lshr_ln674_7_fu_2456_p2;
wire   [1:0] trunc_ln358_6_fu_2462_p1;
wire   [56:0] tmp_3_fu_2488_p9;
wire   [12:0] grp_fu_2505_p0;
wire   [10:0] grp_fu_2505_p1;
wire   [5:0] grp_fu_2513_p1;
wire   [22:0] grp_fu_2519_p0;
wire   [5:0] grp_fu_2519_p1;
wire   [1:0] grp_fu_2524_p0;
wire   [7:0] grp_fu_2524_p1;
wire   [5:0] grp_fu_2531_p1;
wire   [9:0] grp_fu_2537_p0;
wire   [5:0] grp_fu_2537_p1;
wire   [9:0] grp_fu_2543_p0;
wire   [7:0] grp_fu_2543_p1;
wire    ap_CS_fsm_state95;
reg    grp_fu_1082_ap_start;
wire    grp_fu_1082_ap_done;
reg    grp_fu_1107_ap_start;
wire    grp_fu_1107_ap_done;
reg    grp_fu_1123_ap_start;
wire    grp_fu_1123_ap_done;
reg   [92:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_block_pp3;
reg    ap_enable_operation_381;
reg    ap_enable_state67_pp0_iter2_stage0;
reg    ap_predicate_op395_store_state68;
reg    ap_enable_operation_395;
reg    ap_enable_state68_pp0_iter3_stage0;
reg    ap_predicate_op409_store_state68;
reg    ap_enable_operation_409;
reg    ap_enable_operation_384;
reg    ap_predicate_op397_store_state68;
reg    ap_enable_operation_397;
reg    ap_predicate_op411_store_state68;
reg    ap_enable_operation_411;
reg    ap_enable_operation_387;
reg    ap_predicate_op399_store_state68;
reg    ap_enable_operation_399;
reg    ap_predicate_op413_store_state68;
reg    ap_enable_operation_413;
reg    ap_enable_operation_388;
reg    ap_predicate_op393_store_state68;
reg    ap_enable_operation_393;
reg    ap_predicate_op417_store_state68;
reg    ap_enable_operation_417;
reg    ap_predicate_op389_store_state67;
reg    ap_enable_operation_389;
reg    ap_predicate_op401_store_state68;
reg    ap_enable_operation_401;
reg    ap_predicate_op415_store_state68;
reg    ap_enable_operation_415;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [10:0] grp_fu_1082_p10;
wire   [23:0] grp_fu_2505_p00;
wire   [23:0] grp_fu_2505_p10;
wire   [17:0] grp_fu_2513_p10;
wire   [28:0] grp_fu_2519_p00;
wire   [9:0] grp_fu_2524_p00;
wire   [14:0] grp_fu_2537_p00;
wire   [10:0] mul_ln322_fu_1331_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 93'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 grp_TopDown_11_3_1024_s_fu_886_ap_start_reg = 1'b0;
end

edgetracing_accel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .img_inp(img_inp),
    .img_out(img_out),
    .rows(rows),
    .cols(cols),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

edgetracing_accel_gmem3_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM3_CACHE_VALUE ))
gmem3_m_axi_U(
    .AWVALID(m_axi_gmem3_AWVALID),
    .AWREADY(m_axi_gmem3_AWREADY),
    .AWADDR(m_axi_gmem3_AWADDR),
    .AWID(m_axi_gmem3_AWID),
    .AWLEN(m_axi_gmem3_AWLEN),
    .AWSIZE(m_axi_gmem3_AWSIZE),
    .AWBURST(m_axi_gmem3_AWBURST),
    .AWLOCK(m_axi_gmem3_AWLOCK),
    .AWCACHE(m_axi_gmem3_AWCACHE),
    .AWPROT(m_axi_gmem3_AWPROT),
    .AWQOS(m_axi_gmem3_AWQOS),
    .AWREGION(m_axi_gmem3_AWREGION),
    .AWUSER(m_axi_gmem3_AWUSER),
    .WVALID(m_axi_gmem3_WVALID),
    .WREADY(m_axi_gmem3_WREADY),
    .WDATA(m_axi_gmem3_WDATA),
    .WSTRB(m_axi_gmem3_WSTRB),
    .WLAST(m_axi_gmem3_WLAST),
    .WID(m_axi_gmem3_WID),
    .WUSER(m_axi_gmem3_WUSER),
    .ARVALID(m_axi_gmem3_ARVALID),
    .ARREADY(m_axi_gmem3_ARREADY),
    .ARADDR(m_axi_gmem3_ARADDR),
    .ARID(m_axi_gmem3_ARID),
    .ARLEN(m_axi_gmem3_ARLEN),
    .ARSIZE(m_axi_gmem3_ARSIZE),
    .ARBURST(m_axi_gmem3_ARBURST),
    .ARLOCK(m_axi_gmem3_ARLOCK),
    .ARCACHE(m_axi_gmem3_ARCACHE),
    .ARPROT(m_axi_gmem3_ARPROT),
    .ARQOS(m_axi_gmem3_ARQOS),
    .ARREGION(m_axi_gmem3_ARREGION),
    .ARUSER(m_axi_gmem3_ARUSER),
    .RVALID(m_axi_gmem3_RVALID),
    .RREADY(m_axi_gmem3_RREADY),
    .RDATA(m_axi_gmem3_RDATA),
    .RLAST(m_axi_gmem3_RLAST),
    .RID(m_axi_gmem3_RID),
    .RUSER(m_axi_gmem3_RUSER),
    .RRESP(m_axi_gmem3_RRESP),
    .BVALID(m_axi_gmem3_BVALID),
    .BREADY(m_axi_gmem3_BREADY),
    .BRESP(m_axi_gmem3_BRESP),
    .BID(m_axi_gmem3_BID),
    .BUSER(m_axi_gmem3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem3_ARVALID),
    .I_ARREADY(gmem3_ARREADY),
    .I_ARADDR(gmem3_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem3_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem3_RVALID),
    .I_RREADY(gmem3_RREADY),
    .I_RDATA(gmem3_RDATA),
    .I_RID(gmem3_RID),
    .I_RUSER(gmem3_RUSER),
    .I_RRESP(gmem3_RRESP),
    .I_RLAST(gmem3_RLAST),
    .I_AWVALID(gmem3_AWVALID),
    .I_AWREADY(gmem3_AWREADY),
    .I_AWADDR(gmem3_addr_1_reg_2822),
    .I_AWID(1'd0),
    .I_AWLEN(zext_ln315_reg_2817),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem3_WVALID),
    .I_WREADY(gmem3_WREADY),
    .I_WDATA(oReg_V_reg_3025),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(8'd255),
    .I_BVALID(gmem3_BVALID),
    .I_BREADY(gmem3_BREADY),
    .I_BRESP(gmem3_BRESP),
    .I_BID(gmem3_BID),
    .I_BUSER(gmem3_BUSER)
);

edgetracing_accel_gmem4_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM4_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM4_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM4_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM4_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM4_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM4_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM4_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM4_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM4_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM4_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM4_CACHE_VALUE ))
gmem4_m_axi_U(
    .AWVALID(m_axi_gmem4_AWVALID),
    .AWREADY(m_axi_gmem4_AWREADY),
    .AWADDR(m_axi_gmem4_AWADDR),
    .AWID(m_axi_gmem4_AWID),
    .AWLEN(m_axi_gmem4_AWLEN),
    .AWSIZE(m_axi_gmem4_AWSIZE),
    .AWBURST(m_axi_gmem4_AWBURST),
    .AWLOCK(m_axi_gmem4_AWLOCK),
    .AWCACHE(m_axi_gmem4_AWCACHE),
    .AWPROT(m_axi_gmem4_AWPROT),
    .AWQOS(m_axi_gmem4_AWQOS),
    .AWREGION(m_axi_gmem4_AWREGION),
    .AWUSER(m_axi_gmem4_AWUSER),
    .WVALID(m_axi_gmem4_WVALID),
    .WREADY(m_axi_gmem4_WREADY),
    .WDATA(m_axi_gmem4_WDATA),
    .WSTRB(m_axi_gmem4_WSTRB),
    .WLAST(m_axi_gmem4_WLAST),
    .WID(m_axi_gmem4_WID),
    .WUSER(m_axi_gmem4_WUSER),
    .ARVALID(m_axi_gmem4_ARVALID),
    .ARREADY(m_axi_gmem4_ARREADY),
    .ARADDR(m_axi_gmem4_ARADDR),
    .ARID(m_axi_gmem4_ARID),
    .ARLEN(m_axi_gmem4_ARLEN),
    .ARSIZE(m_axi_gmem4_ARSIZE),
    .ARBURST(m_axi_gmem4_ARBURST),
    .ARLOCK(m_axi_gmem4_ARLOCK),
    .ARCACHE(m_axi_gmem4_ARCACHE),
    .ARPROT(m_axi_gmem4_ARPROT),
    .ARQOS(m_axi_gmem4_ARQOS),
    .ARREGION(m_axi_gmem4_ARREGION),
    .ARUSER(m_axi_gmem4_ARUSER),
    .RVALID(m_axi_gmem4_RVALID),
    .RREADY(m_axi_gmem4_RREADY),
    .RDATA(m_axi_gmem4_RDATA),
    .RLAST(m_axi_gmem4_RLAST),
    .RID(m_axi_gmem4_RID),
    .RUSER(m_axi_gmem4_RUSER),
    .RRESP(m_axi_gmem4_RRESP),
    .BVALID(m_axi_gmem4_BVALID),
    .BREADY(m_axi_gmem4_BREADY),
    .BRESP(m_axi_gmem4_BRESP),
    .BID(m_axi_gmem4_BID),
    .BUSER(m_axi_gmem4_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem4_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem4_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem4_RDATA),
    .I_RID(gmem4_RID),
    .I_RUSER(gmem4_RUSER),
    .I_RRESP(gmem4_RRESP),
    .I_RLAST(gmem4_RLAST),
    .I_AWVALID(gmem4_AWVALID),
    .I_AWREADY(gmem4_AWREADY),
    .I_AWADDR(sext_ln548_fu_2472_p1),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem4_WVALID),
    .I_WREADY(gmem4_WREADY),
    .I_WDATA(gmem4_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(8'd255),
    .I_BVALID(gmem4_BVALID),
    .I_BREADY(gmem4_BREADY),
    .I_BRESP(gmem4_BRESP),
    .I_BID(gmem4_BID),
    .I_BUSER(gmem4_BUSER)
);

edgetracing_accel_iBuff_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_0_address0),
    .ce0(iBuff_V_0_ce0),
    .we0(iBuff_V_0_we0),
    .d0(iBuff_V_0_d0),
    .q0(iBuff_V_0_q0),
    .address1(iBuff_V_0_address1),
    .ce1(iBuff_V_0_ce1),
    .we1(iBuff_V_0_we1),
    .d1(iReg_V_reg_2872),
    .q1(iBuff_V_0_q1)
);

edgetracing_accel_iBuff_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_1_address0),
    .ce0(iBuff_V_1_ce0),
    .we0(iBuff_V_1_we0),
    .d0(iBuff_V_1_d0),
    .q0(iBuff_V_1_q0),
    .address1(iBuff_V_1_address1),
    .ce1(iBuff_V_1_ce1),
    .we1(iBuff_V_1_we1),
    .d1(iReg_V_reg_2872),
    .q1(iBuff_V_1_q1)
);

edgetracing_accel_iBuff_V_2 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_2_address0),
    .ce0(iBuff_V_2_ce0),
    .we0(iBuff_V_2_we0),
    .d0(iBuff_V_2_d0),
    .q0(iBuff_V_2_q0),
    .address1(grp_TopDown_11_3_1024_s_fu_886_iBuff2_address1),
    .ce1(iBuff_V_2_ce1),
    .q1(iBuff_V_2_q1)
);

edgetracing_accel_iBuff_V_2 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_3_address0),
    .ce0(iBuff_V_3_ce0),
    .we0(iBuff_V_3_we0),
    .d0(iBuff_V_3_d0),
    .q0(iBuff_V_3_q0),
    .address1(grp_TopDown_11_3_1024_s_fu_886_iBuff3_address1),
    .ce1(iBuff_V_3_ce1),
    .q1(iBuff_V_3_q1)
);

edgetracing_accel_iBuff_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_4_address0),
    .ce0(iBuff_V_4_ce0),
    .we0(iBuff_V_4_we0),
    .d0(iBuff_V_4_d0),
    .q0(iBuff_V_4_q0),
    .address1(iBuff_V_4_address1),
    .ce1(iBuff_V_4_ce1),
    .we1(iBuff_V_4_we1),
    .d1(iReg_V_reg_2872),
    .q1(iBuff_V_4_q1)
);

edgetracing_accel_iBuff_V_2 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_5_address0),
    .ce0(iBuff_V_5_ce0),
    .we0(iBuff_V_5_we0),
    .d0(iBuff_V_5_d0),
    .q0(iBuff_V_5_q0),
    .address1(grp_TopDown_11_3_1024_s_fu_886_iBuff5_address1),
    .ce1(iBuff_V_5_ce1),
    .q1(iBuff_V_5_q1)
);

edgetracing_accel_iBuff_V_2 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_6_address0),
    .ce0(iBuff_V_6_ce0),
    .we0(iBuff_V_6_we0),
    .d0(iBuff_V_6_d0),
    .q0(iBuff_V_6_q0),
    .address1(grp_TopDown_11_3_1024_s_fu_886_iBuff6_address1),
    .ce1(iBuff_V_6_ce1),
    .q1(iBuff_V_6_q1)
);

edgetracing_accel_iBuff_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_7_address0),
    .ce0(iBuff_V_7_ce0),
    .we0(iBuff_V_7_we0),
    .d0(iBuff_V_7_d0),
    .q0(iBuff_V_7_q0),
    .address1(iBuff_V_7_address1),
    .ce1(iBuff_V_7_ce1),
    .we1(iBuff_V_7_we1),
    .d1(iReg_V_reg_2872),
    .q1(iBuff_V_7_q1)
);

edgetracing_accel_iBuff_V_2 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_8_address0),
    .ce0(iBuff_V_8_ce0),
    .we0(iBuff_V_8_we0),
    .d0(iBuff_V_8_d0),
    .q0(iBuff_V_8_q0),
    .address1(grp_TopDown_11_3_1024_s_fu_886_iBuff8_address1),
    .ce1(iBuff_V_8_ce1),
    .q1(iBuff_V_8_q1)
);

edgetracing_accel_iBuff_V_2 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_9_address0),
    .ce0(iBuff_V_9_ce0),
    .we0(iBuff_V_9_we0),
    .d0(iBuff_V_9_d0),
    .q0(iBuff_V_9_q0),
    .address1(grp_TopDown_11_3_1024_s_fu_886_iBuff9_address1),
    .ce1(iBuff_V_9_ce1),
    .q1(iBuff_V_9_q1)
);

edgetracing_accel_iBuff_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
iBuff_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(iBuff_V_10_address0),
    .ce0(iBuff_V_10_ce0),
    .we0(iBuff_V_10_we0),
    .d0(iBuff_V_10_d0),
    .q0(iBuff_V_10_q0),
    .address1(iBuff_V_10_address1),
    .ce1(iBuff_V_10_ce1),
    .we1(iBuff_V_10_we1),
    .d1(iReg_V_reg_2872),
    .q1(iBuff_V_10_q1)
);

edgetracing_accel_oBuff_V #(
    .DataWidth( 64 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
oBuff_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(oBuff_V_address0),
    .ce0(oBuff_V_ce0),
    .we0(oBuff_V_we0),
    .d0(gmem3_addr_read_reg_3073),
    .q0(oBuff_V_q0)
);

edgetracing_accel_TopDown_11_3_1024_s grp_TopDown_11_3_1024_s_fu_886(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_TopDown_11_3_1024_s_fu_886_ap_start),
    .ap_done(grp_TopDown_11_3_1024_s_fu_886_ap_done),
    .ap_idle(grp_TopDown_11_3_1024_s_fu_886_ap_idle),
    .ap_ready(grp_TopDown_11_3_1024_s_fu_886_ap_ready),
    .iBuff_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff_address0),
    .iBuff_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff_ce0),
    .iBuff_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff_we0),
    .iBuff_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff_d0),
    .iBuff_q0(iBuff_V_0_q0),
    .iBuff_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff_address1),
    .iBuff_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff_ce1),
    .iBuff_q1(iBuff_V_0_q1),
    .iBuff1_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff1_address0),
    .iBuff1_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff1_ce0),
    .iBuff1_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff1_we0),
    .iBuff1_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff1_d0),
    .iBuff1_q0(iBuff_V_1_q0),
    .iBuff1_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff1_address1),
    .iBuff1_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff1_ce1),
    .iBuff1_q1(iBuff_V_1_q1),
    .iBuff2_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff2_address0),
    .iBuff2_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff2_ce0),
    .iBuff2_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff2_we0),
    .iBuff2_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff2_d0),
    .iBuff2_q0(iBuff_V_2_q0),
    .iBuff2_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff2_address1),
    .iBuff2_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff2_ce1),
    .iBuff2_q1(iBuff_V_2_q1),
    .iBuff3_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff3_address0),
    .iBuff3_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff3_ce0),
    .iBuff3_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff3_we0),
    .iBuff3_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff3_d0),
    .iBuff3_q0(iBuff_V_3_q0),
    .iBuff3_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff3_address1),
    .iBuff3_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff3_ce1),
    .iBuff3_q1(iBuff_V_3_q1),
    .iBuff4_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff4_address0),
    .iBuff4_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff4_ce0),
    .iBuff4_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff4_we0),
    .iBuff4_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff4_d0),
    .iBuff4_q0(iBuff_V_4_q0),
    .iBuff4_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff4_address1),
    .iBuff4_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff4_ce1),
    .iBuff4_q1(iBuff_V_4_q1),
    .iBuff5_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff5_address0),
    .iBuff5_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff5_ce0),
    .iBuff5_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff5_we0),
    .iBuff5_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff5_d0),
    .iBuff5_q0(iBuff_V_5_q0),
    .iBuff5_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff5_address1),
    .iBuff5_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff5_ce1),
    .iBuff5_q1(iBuff_V_5_q1),
    .iBuff6_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff6_address0),
    .iBuff6_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff6_ce0),
    .iBuff6_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff6_we0),
    .iBuff6_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff6_d0),
    .iBuff6_q0(iBuff_V_6_q0),
    .iBuff6_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff6_address1),
    .iBuff6_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff6_ce1),
    .iBuff6_q1(iBuff_V_6_q1),
    .iBuff7_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff7_address0),
    .iBuff7_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff7_ce0),
    .iBuff7_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff7_we0),
    .iBuff7_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff7_d0),
    .iBuff7_q0(iBuff_V_7_q0),
    .iBuff7_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff7_address1),
    .iBuff7_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff7_ce1),
    .iBuff7_q1(iBuff_V_7_q1),
    .iBuff8_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff8_address0),
    .iBuff8_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff8_ce0),
    .iBuff8_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff8_we0),
    .iBuff8_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff8_d0),
    .iBuff8_q0(iBuff_V_8_q0),
    .iBuff8_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff8_address1),
    .iBuff8_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff8_ce1),
    .iBuff8_q1(iBuff_V_8_q1),
    .iBuff9_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff9_address0),
    .iBuff9_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff9_ce0),
    .iBuff9_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff9_we0),
    .iBuff9_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff9_d0),
    .iBuff9_q0(iBuff_V_9_q0),
    .iBuff9_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff9_address1),
    .iBuff9_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff9_ce1),
    .iBuff9_q1(iBuff_V_9_q1),
    .iBuff10_address0(grp_TopDown_11_3_1024_s_fu_886_iBuff10_address0),
    .iBuff10_ce0(grp_TopDown_11_3_1024_s_fu_886_iBuff10_ce0),
    .iBuff10_we0(grp_TopDown_11_3_1024_s_fu_886_iBuff10_we0),
    .iBuff10_d0(grp_TopDown_11_3_1024_s_fu_886_iBuff10_d0),
    .iBuff10_q0(iBuff_V_10_q0),
    .iBuff10_address1(grp_TopDown_11_3_1024_s_fu_886_iBuff10_address1),
    .iBuff10_ce1(grp_TopDown_11_3_1024_s_fu_886_iBuff10_ce1),
    .iBuff10_q1(iBuff_V_10_q1),
    .bramtotal(bramtotal_reg_2703),
    .bdrows(bdrows_reg_2601),
    .ram_row_depth(ram_row_depth_reg_2582)
);

edgetracing_accel_udiv_11s_6ns_11_15_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
udiv_11s_6ns_11_15_seq_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1082_ap_start),
    .done(grp_fu_1082_ap_done),
    .din0(11'd1024),
    .din1(grp_fu_1082_p1),
    .ce(1'b1),
    .dout(grp_fu_1082_p2)
);

edgetracing_accel_udiv_12ns_11ns_12_16_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
udiv_12ns_11ns_12_16_seq_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1107_ap_start),
    .done(grp_fu_1107_ap_done),
    .din0(grp_fu_1107_p0),
    .din1(grp_fu_1107_p1),
    .ce(1'b1),
    .dout(grp_fu_1107_p2)
);

edgetracing_accel_urem_13ns_3ns_13_17_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 13 ))
urem_13ns_3ns_13_17_seq_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_1123_ap_start),
    .done(grp_fu_1123_ap_done),
    .din0(grp_fu_1123_p0),
    .din1(grp_fu_1123_p1),
    .ce(1'b1),
    .dout(grp_fu_1123_p2)
);

edgetracing_accel_mul_8ns_3ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 11 ))
mul_8ns_3ns_11_1_1_U46(
    .din0(mul_ln322_fu_1331_p0),
    .din1(mul_ln322_fu_1331_p1),
    .dout(mul_ln322_fu_1331_p2)
);

edgetracing_accel_mux_114_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_114_64_1_1_U47(
    .din0(iBuff_V_0_q1),
    .din1(iBuff_V_1_q1),
    .din2(iBuff_V_2_q0),
    .din3(iBuff_V_3_q0),
    .din4(iBuff_V_4_q1),
    .din5(iBuff_V_5_q0),
    .din6(iBuff_V_6_q0),
    .din7(iBuff_V_7_q1),
    .din8(iBuff_V_8_q0),
    .din9(iBuff_V_9_q0),
    .din10(iBuff_V_10_q1),
    .din11(trunc_ln402_reg_2960),
    .dout(oReg_V_fu_1673_p13)
);

edgetracing_accel_mul_mul_13ns_11ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 24 ))
mul_mul_13ns_11ns_24_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2505_p0),
    .din1(grp_fu_2505_p1),
    .ce(1'b1),
    .dout(grp_fu_2505_p2)
);

edgetracing_accel_mul_mul_12s_6ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 18 ))
mul_mul_12s_6ns_18_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sub66_i_i_fu_1148_p2),
    .din1(grp_fu_2513_p1),
    .ce(1'b1),
    .dout(grp_fu_2513_p2)
);

edgetracing_accel_mul_mul_23ns_6ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 23 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 29 ))
mul_mul_23ns_6ns_29_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2519_p0),
    .din1(grp_fu_2519_p1),
    .ce(1'b1),
    .dout(grp_fu_2519_p2)
);

edgetracing_accel_mac_muladd_2ns_8ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_2ns_8ns_24ns_24_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2524_p0),
    .din1(grp_fu_2524_p1),
    .din2(sub_ln324_reg_2725),
    .ce(1'b1),
    .dout(grp_fu_2524_p3)
);

edgetracing_accel_mul_mul_24s_6ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 30 ))
mul_mul_24s_6ns_30_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(sel_tmp_v_fu_1340_p3),
    .din1(grp_fu_2531_p1),
    .ce(1'b1),
    .dout(grp_fu_2531_p2)
);

edgetracing_accel_mul_mul_10ns_6ns_15_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 15 ))
mul_mul_10ns_6ns_15_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2537_p0),
    .din1(grp_fu_2537_p1),
    .ce(1'b1),
    .dout(grp_fu_2537_p2)
);

edgetracing_accel_mul_mul_10ns_8ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_mul_10ns_8ns_17_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_2543_p0),
    .din1(grp_fu_2543_p1),
    .ce(1'b1),
    .dout(grp_fu_2543_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state65) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state64)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state65)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state65);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state64)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state73))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state73)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state73);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state92))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state91)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state92)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state92);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state91)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state98)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter1_state100)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end else if ((1'b1 == ap_CS_fsm_state98)) begin
            ap_enable_reg_pp3_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_TopDown_11_3_1024_s_fu_886_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state70) & (icmp_ln377_fu_1564_p2 == 1'd0))) begin
            grp_TopDown_11_3_1024_s_fu_886_ap_start_reg <= 1'b1;
        end else if ((grp_TopDown_11_3_1024_s_fu_886_ap_ready == 1'b1)) begin
            grp_TopDown_11_3_1024_s_fu_886_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln433_reg_3088 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        bit_reg_875 <= bit_2_fu_2482_p2;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        bit_reg_875 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_reg_2946 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        dep_V_2_reg_796 <= rhs_reg_2955;
    end else if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        dep_V_2_reg_796 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_reg_2838 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dep_V_reg_741 <= dep_V_5_reg_2849;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        dep_V_reg_741 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_1576_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_774 <= i_2_fu_1570_p2;
    end else if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        i_1_reg_774 <= 29'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_fu_1419_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_719 <= i_3_fu_1413_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        i_reg_719 <= 29'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln433_fu_1782_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        id_V_reg_864 <= id_V_1_fu_1822_p3;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        id_V_reg_864 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_1576_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        idx1_V_2_reg_785 <= idx1_V_4_fu_1667_p2;
    end else if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        idx1_V_2_reg_785 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_fu_1419_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        idx1_V_reg_730 <= idx1_V_5_fu_1495_p2;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        idx1_V_reg_730 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_reg_2946 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        idx2_V_3_reg_807 <= idx2_V_6_reg_2950;
    end else if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        idx2_V_3_reg_807 <= 16'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_reg_2838 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        idx2_V_reg_752 <= idx2_V_7_reg_2842;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        idx2_V_reg_752 <= 16'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        ii_reg_818 <= add_ln417_reg_3035;
    end else if (((icmp_ln312_fu_1215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        ii_reg_818 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((gmem3_BVALID == 1'b0) & (icmp_ln332_reg_2829 == 1'd0)) & (1'b1 == ap_CS_fsm_state80))) begin
        indvar_flatten_reg_686 <= add_ln312_reg_2730;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        indvar_flatten_reg_686 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((gmem3_BVALID == 1'b0) & (icmp_ln332_reg_2829 == 1'd0)) & (1'b1 == ap_CS_fsm_state80))) begin
        inter_i_reg_697 <= select_ln312_2_reg_2750;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        inter_i_reg_697 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        intra_i_reg_763 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state71) & (grp_TopDown_11_3_1024_s_fu_886_ap_done == 1'b1))) begin
        intra_i_reg_763 <= intra_i_1_reg_2933;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln433_fu_1782_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_reg_842 <= add_ln433_fu_1776_p2;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        j_reg_842 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_reg_3069 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k_reg_830 <= add_ln422_reg_3064;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        k_reg_830 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln433_reg_3088 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        pixel_V_reg_853 <= pixel_V_2_reg_3097;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        pixel_V_reg_853 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((gmem3_BVALID == 1'b0) & (icmp_ln332_reg_2829 == 1'd0)) & (1'b1 == ap_CS_fsm_state80))) begin
        slice_reg_708 <= slice_1_fu_1700_p2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        slice_reg_708 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln305_2_reg_2618 <= add_ln305_2_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        add_ln312_reg_2730 <= add_ln312_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        add_ln417_reg_3035 <= add_ln417_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln422_reg_3064 <= add_ln422_fu_1760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        bdrows_reg_2601 <= grp_fu_1082_p2;
        zext_ln304_reg_2607[10 : 0] <= zext_ln304_fu_1091_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        bramsetsval_reg_2634 <= bramsetsval_fu_1135_p2;
        trunc_ln305_reg_2640 <= trunc_ln305_fu_1140_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        bramtotal_reg_2703 <= bramtotal_fu_1187_p2;
        op2_assign_1_cast_cast_reg_2708[12 : 0] <= op2_assign_1_cast_cast_fu_1197_p1[12 : 0];
        op2_assign_reg_2720 <= grp_fu_2513_p2;
        ram_row_depth_cast35_cast_reg_2714[5 : 0] <= ram_row_depth_cast35_cast_fu_1201_p1[5 : 0];
        sub_ln324_reg_2725 <= sub_ln324_fu_1204_p2;
        trunc_ln307_reg_2698 <= trunc_ln307_fu_1184_p1;
        zext_ln302_1_reg_2655[7 : 0] <= zext_ln302_1_fu_1157_p1[7 : 0];
        zext_ln302_2_reg_2665[7 : 0] <= zext_ln302_2_fu_1163_p1[7 : 0];
        zext_ln302_reg_2660[7 : 0] <= zext_ln302_fu_1160_p1[7 : 0];
        zext_ln303_2_reg_2685[5 : 0] <= zext_ln303_2_fu_1178_p1[5 : 0];
        zext_ln303_4_reg_2675[5 : 0] <= zext_ln303_4_fu_1172_p1[5 : 0];
        zext_ln303_5_reg_2680[5 : 0] <= zext_ln303_5_fu_1175_p1[5 : 0];
        zext_ln303_reg_2670[5 : 0] <= zext_ln303_fu_1169_p1[5 : 0];
        zext_ln305_1_reg_2693[12 : 0] <= zext_ln305_1_fu_1181_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln312_fu_1215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        cmp119_i_i270_reg_2775 <= cmp119_i_i270_fu_1298_p2;
        div153_i_i_reg_2770 <= {{npcCols_8_reg_2563[10:3]}};
        ram_row_depth_cast25_reg_2789[5 : 0] <= ram_row_depth_cast25_fu_1316_p1[5 : 0];
        trunc_ln417_2_reg_2784 <= {{npcCols_reg_2558[10:3]}};
        zext_ln414_reg_2779[7 : 0] <= zext_ln414_fu_1303_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_fu_1419_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dep_V_5_reg_2849 <= dep_V_5_fu_1473_p3;
        idx2_V_7_reg_2842 <= idx2_V_7_fu_1465_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        empty_38_reg_3048 <= empty_38_fu_1731_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        gmem3_addr_1_reg_2822 <= sext_ln536_1_fu_1398_p1;
        zext_ln315_reg_2817[28 : 0] <= zext_ln315_fu_1394_p1[28 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln422_reg_3069 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        gmem3_addr_read_reg_3073 <= gmem3_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_reg_2838_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iBuff_V_0_addr_reg_2908 <= zext_ln534_fu_1523_p1;
        iBuff_V_10_addr_reg_2928 <= zext_ln534_fu_1523_p1;
        iBuff_V_1_addr_reg_2913 <= zext_ln534_fu_1523_p1;
        iBuff_V_4_addr_reg_2918 <= zext_ln534_fu_1523_p1;
        iBuff_V_7_addr_reg_2923 <= zext_ln534_fu_1523_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_reg_2838 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iReg_V_reg_2872 <= gmem3_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        iReg_V_reg_2872_pp0_iter2_reg <= iReg_V_reg_2872;
        icmp_ln870_2_reg_2892_pp0_iter2_reg <= icmp_ln870_2_reg_2892;
        icmp_ln870_4_reg_2904_pp0_iter2_reg <= icmp_ln870_4_reg_2904;
        icmp_ln870_5_reg_2896_pp0_iter2_reg <= icmp_ln870_5_reg_2896;
        icmp_ln870_6_reg_2900_pp0_iter2_reg <= icmp_ln870_6_reg_2900;
        index_reg_2856_pp0_iter2_reg <= index_reg_2856_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln312_fu_1215_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        icmp_ln319_reg_2760 <= icmp_ln319_fu_1273_p2;
        select_ln312_1_reg_2744 <= select_ln312_1_fu_1253_p3;
        select_ln312_2_reg_2750 <= select_ln312_2_fu_1261_p3;
        select_ln312_reg_2738 <= select_ln312_fu_1227_p3;
        trunc_ln318_reg_2755 <= trunc_ln318_fu_1269_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln332_1_reg_2838 <= icmp_ln332_1_fu_1419_p2;
        icmp_ln332_1_reg_2838_pp0_iter1_reg <= icmp_ln332_1_reg_2838;
        icmp_ln870_2_reg_2892 <= icmp_ln870_2_fu_1501_p2;
        index_reg_2856_pp0_iter1_reg <= index_reg_2856;
        trunc_ln353_reg_2863_pp0_iter1_reg <= trunc_ln353_reg_2863;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        icmp_ln332_reg_2829 <= icmp_ln332_fu_1408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln387_reg_2946 <= icmp_ln387_fu_1576_p2;
        icmp_ln387_reg_2946_pp1_iter1_reg <= icmp_ln387_reg_2946;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln422_reg_3069 <= icmp_ln422_fu_1766_p2;
        icmp_ln422_reg_3069_pp2_iter1_reg <= icmp_ln422_reg_3069;
        k_reg_830_pp2_iter1_reg <= k_reg_830;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln433_reg_3088 <= icmp_ln433_fu_1782_p2;
        icmp_ln452_reg_3112_pp3_iter1_reg <= icmp_ln452_reg_3112;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln433_fu_1782_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln452_reg_3112 <= icmp_ln452_fu_1830_p2;
        icmp_ln870_3_reg_3092 <= icmp_ln870_3_fu_1791_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln452_reg_3112_pp3_iter2_reg <= icmp_ln452_reg_3112_pp3_iter1_reg;
        icmp_ln452_reg_3112_pp3_iter3_reg <= icmp_ln452_reg_3112_pp3_iter2_reg;
        icmp_ln452_reg_3112_pp3_iter4_reg <= icmp_ln452_reg_3112_pp3_iter3_reg;
        icmp_ln452_reg_3112_pp3_iter5_reg <= icmp_ln452_reg_3112_pp3_iter4_reg;
        icmp_ln452_reg_3112_pp3_iter6_reg <= icmp_ln452_reg_3112_pp3_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln433_reg_3088 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln870_16_reg_3156 <= icmp_ln870_16_fu_2466_p2;
        select_ln870_1_reg_3126 <= select_ln870_1_fu_1980_p3;
        select_ln870_2_reg_3131 <= select_ln870_2_fu_2062_p3;
        select_ln870_3_reg_3136 <= select_ln870_3_fu_2144_p3;
        select_ln870_4_reg_3141 <= select_ln870_4_fu_2226_p3;
        select_ln870_5_reg_3146 <= select_ln870_5_fu_2308_p3;
        select_ln870_6_reg_3151 <= select_ln870_6_fu_2390_p3;
        select_ln870_reg_3121 <= select_ln870_fu_1898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_2_fu_1501_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln870_4_reg_2904 <= icmp_ln870_4_fu_1518_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_2_fu_1501_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln870_5_reg_2896 <= icmp_ln870_5_fu_1506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_5_fu_1506_p2 == 1'd1) & (icmp_ln870_2_fu_1501_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln870_6_reg_2900 <= icmp_ln870_6_fu_1513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_1576_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        idx2_V_6_reg_2950 <= idx2_V_6_fu_1618_p3;
        rhs_reg_2955 <= rhs_fu_1626_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        img_inp_read_reg_2552 <= img_inp;
        img_out_read_reg_2547 <= img_out;
        npcCols_8_reg_2563 <= npcCols_8_fu_1046_p3;
        npcCols_reg_2558 <= npcCols_fu_984_p3;
        ram_row_depth_reg_2582 <= {{npcCols_fu_984_p3[10:5]}};
        slice_h_reg_2573 <= {{rows[9:2]}};
        trunc_ln302_reg_2568 <= trunc_ln302_fu_1054_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_1_fu_1419_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        index_reg_2856 <= index_fu_1485_p2;
        trunc_ln353_reg_2863 <= trunc_ln353_fu_1491_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        intra_i_1_reg_2933 <= intra_i_1_fu_1558_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        lBound_reg_2799 <= grp_fu_2519_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        mul_ln414_reg_3078 <= grp_fu_2543_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_reg_2946 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        oReg_V_reg_3025 <= oReg_V_fu_1673_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln433_fu_1782_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        pixel_V_2_reg_3097 <= pixel_V_2_fu_1803_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln452_fu_1830_p2 == 1'd1) & (icmp_ln433_fu_1782_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        trunc_ln2_reg_3116 <= {{add_ln548_fu_1852_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln387_fu_1576_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln402_reg_2960 <= trunc_ln402_fu_1663_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        trunc_ln536_1_reg_2812 <= {{add_ln536_fu_1379_p2[63:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        zext_ln414_1_reg_3053[9 : 0] <= zext_ln414_1_fu_1736_p1[9 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln332_1_fu_1419_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state65 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state65 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln387_fu_1576_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state73 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state73 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln422_fu_1766_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state92 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state92 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        ap_condition_pp3_exit_iter1_state100 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter1_state100 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln433_fu_1782_p2 == 1'd1) & (1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln417_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln387_reg_2946 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_dep_V_2_phi_fu_800_p4 = rhs_reg_2955;
    end else begin
        ap_phi_mux_dep_V_2_phi_fu_800_p4 = dep_V_2_reg_796;
    end
end

always @ (*) begin
    if (((icmp_ln332_1_reg_2838 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_dep_V_phi_fu_745_p4 = dep_V_5_reg_2849;
    end else begin
        ap_phi_mux_dep_V_phi_fu_745_p4 = dep_V_reg_741;
    end
end

always @ (*) begin
    if (((icmp_ln387_reg_2946 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_idx2_V_3_phi_fu_811_p4 = idx2_V_6_reg_2950;
    end else begin
        ap_phi_mux_idx2_V_3_phi_fu_811_p4 = idx2_V_3_reg_807;
    end
end

always @ (*) begin
    if (((icmp_ln332_1_reg_2838 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_idx2_V_phi_fu_756_p4 = idx2_V_7_reg_2842;
    end else begin
        ap_phi_mux_idx2_V_phi_fu_756_p4 = idx2_V_reg_752;
    end
end

always @ (*) begin
    if (((icmp_ln422_reg_3069 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_k_phi_fu_834_p4 = add_ln422_reg_3064;
    end else begin
        ap_phi_mux_k_phi_fu_834_p4 = k_reg_830;
    end
end

always @ (*) begin
    if (((icmp_ln433_reg_3088 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_pixel_V_phi_fu_857_p4 = pixel_V_2_reg_3097;
    end else begin
        ap_phi_mux_pixel_V_phi_fu_857_p4 = pixel_V_reg_853;
    end
end

always @ (*) begin
    if (((icmp_ln417_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((cmp119_i_i270_reg_2775 == 1'd0) & (1'b0 == ap_block_state85_io) & (1'b1 == ap_CS_fsm_state85))) begin
        gmem3_ARADDR = sext_ln422_fu_1749_p1;
    end else if (((gmem3_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
        gmem3_ARADDR = sext_ln536_1_fu_1398_p1;
    end else begin
        gmem3_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((cmp119_i_i270_reg_2775 == 1'd0) & (1'b0 == ap_block_state85_io) & (1'b1 == ap_CS_fsm_state85))) begin
        gmem3_ARLEN = zext_ln303_reg_2670;
    end else if (((gmem3_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
        gmem3_ARLEN = zext_ln315_fu_1394_p1;
    end else begin
        gmem3_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((cmp119_i_i270_reg_2775 == 1'd0) & (1'b0 == ap_block_state85_io) & (1'b1 == ap_CS_fsm_state85)) | ((gmem3_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state58)))) begin
        gmem3_ARVALID = 1'b1;
    end else begin
        gmem3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        gmem3_AWVALID = 1'b1;
    end else begin
        gmem3_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((gmem3_BVALID == 1'b0) & (icmp_ln332_reg_2829 == 1'd0)) & (icmp_ln332_reg_2829 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        gmem3_BREADY = 1'b1;
    end else begin
        gmem3_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln422_reg_3069 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln332_1_reg_2838 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem3_RREADY = 1'b1;
    end else begin
        gmem3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln387_reg_2946_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        gmem3_WVALID = 1'b1;
    end else begin
        gmem3_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | ((cmp119_i_i270_reg_2775 == 1'd0) & (1'b1 == ap_CS_fsm_state85)))) begin
        gmem3_blk_n_AR = m_axi_gmem3_ARREADY;
    end else begin
        gmem3_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        gmem3_blk_n_AW = m_axi_gmem3_AWREADY;
    end else begin
        gmem3_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln332_reg_2829 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        gmem3_blk_n_B = m_axi_gmem3_BVALID;
    end else begin
        gmem3_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln422_reg_3069 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln332_1_reg_2838 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem3_blk_n_R = m_axi_gmem3_RVALID;
    end else begin
        gmem3_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln387_reg_2946_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        gmem3_blk_n_W = m_axi_gmem3_WREADY;
    end else begin
        gmem3_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op669_writereq_state100 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem4_AWVALID = 1'b1;
    end else begin
        gmem4_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln452_reg_3112_pp3_iter6_reg == 1'd1) & (ap_enable_reg_pp3_iter7 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        gmem4_BREADY = 1'b1;
    end else begin
        gmem4_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln452_reg_3112_pp3_iter1_reg == 1'd1) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        gmem4_WVALID = 1'b1;
    end else begin
        gmem4_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln452_reg_3112 == 1'd1) & (icmp_ln433_reg_3088 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        gmem4_blk_n_AW = m_axi_gmem4_AWREADY;
    end else begin
        gmem4_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln452_reg_3112_pp3_iter6_reg == 1'd1) & (ap_enable_reg_pp3_iter7 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        gmem4_blk_n_B = m_axi_gmem4_BVALID;
    end else begin
        gmem4_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln452_reg_3112_pp3_iter1_reg == 1'd1) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        gmem4_blk_n_W = m_axi_gmem4_WREADY;
    end else begin
        gmem4_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_fu_1082_ap_start = 1'b1;
    end else begin
        grp_fu_1082_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1107_ap_start = 1'b1;
    end else begin
        grp_fu_1107_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1123_ap_start = 1'b1;
    end else begin
        grp_fu_1123_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_0_address0 = iBuff_V_0_addr_reg_2908;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd0) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_0_address0 = zext_ln534_2_fu_1541_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_0_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff_address0;
    end else begin
        iBuff_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_0_address1 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_0_address1 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_0_address1 = grp_TopDown_11_3_1024_s_fu_886_iBuff_address1;
    end else begin
        iBuff_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd0) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_0_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff_ce0;
    end else begin
        iBuff_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_0_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_0_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff_ce1;
    end else begin
        iBuff_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_0_d0 = 64'd0;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd0) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_0_d0 = iReg_V_reg_2872_pp0_iter2_reg;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_0_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff_d0;
    end else begin
        iBuff_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd0) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_0_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff_we0;
    end else begin
        iBuff_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_0_we1 = 1'b1;
    end else begin
        iBuff_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_10_address0 = zext_ln534_3_fu_1550_p1;
    end else if ((~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_10_address0 = iBuff_V_10_addr_reg_2928;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_10_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff10_address0;
    end else begin
        iBuff_V_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_10_address1 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_10_address1 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_10_address1 = grp_TopDown_11_3_1024_s_fu_886_iBuff10_address1;
    end else begin
        iBuff_V_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_10_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff10_ce0;
    end else begin
        iBuff_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_10_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_10_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff10_ce1;
    end else begin
        iBuff_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_10_d0 = iReg_V_reg_2872_pp0_iter2_reg;
    end else if ((~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_10_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_10_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff10_d0;
    end else begin
        iBuff_V_10_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_10_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_10_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff10_we0;
    end else begin
        iBuff_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd10) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd11) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd12) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd13) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd14) | (trunc_ln353_reg_2863_pp0_iter1_reg == 4'd15)))))))) begin
        iBuff_V_10_we1 = 1'b1;
    end else begin
        iBuff_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_1_address0 = zext_ln534_3_fu_1550_p1;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_1_address0 = iBuff_V_1_addr_reg_2913;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_1_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff1_address0;
    end else begin
        iBuff_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_1_address1 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_1_address1 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_1_address1 = grp_TopDown_11_3_1024_s_fu_886_iBuff1_address1;
    end else begin
        iBuff_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_1_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff1_ce0;
    end else begin
        iBuff_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_1_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_1_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff1_ce1;
    end else begin
        iBuff_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_1_d0 = iReg_V_reg_2872_pp0_iter2_reg;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_1_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_1_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff1_d0;
    end else begin
        iBuff_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_1_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff1_we0;
    end else begin
        iBuff_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_1_we1 = 1'b1;
    end else begin
        iBuff_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_2_address0 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_2_address0 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_2_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff2_address0;
    end else begin
        iBuff_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_2_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff2_ce0;
    end else begin
        iBuff_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_2_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff2_ce1;
    end else begin
        iBuff_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_2_d0 = iReg_V_reg_2872;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_2_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff2_d0;
    end else begin
        iBuff_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_2_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff2_we0;
    end else begin
        iBuff_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_3_address0 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_3_address0 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_3_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff3_address0;
    end else begin
        iBuff_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_3_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff3_ce0;
    end else begin
        iBuff_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_3_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff3_ce1;
    end else begin
        iBuff_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_3_d0 = iReg_V_reg_2872;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_3_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff3_d0;
    end else begin
        iBuff_V_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_3_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff3_we0;
    end else begin
        iBuff_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_4_address0 = zext_ln534_3_fu_1550_p1;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_4_address0 = iBuff_V_4_addr_reg_2918;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_4_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff4_address0;
    end else begin
        iBuff_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_4_address1 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_4_address1 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_4_address1 = grp_TopDown_11_3_1024_s_fu_886_iBuff4_address1;
    end else begin
        iBuff_V_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_4_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff4_ce0;
    end else begin
        iBuff_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_4_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_4_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff4_ce1;
    end else begin
        iBuff_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_4_d0 = iReg_V_reg_2872_pp0_iter2_reg;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_4_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_4_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff4_d0;
    end else begin
        iBuff_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_4_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_4_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff4_we0;
    end else begin
        iBuff_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_4_we1 = 1'b1;
    end else begin
        iBuff_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_5_address0 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_5_address0 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_5_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff5_address0;
    end else begin
        iBuff_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_5_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff5_ce0;
    end else begin
        iBuff_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_5_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff5_ce1;
    end else begin
        iBuff_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_5_d0 = iReg_V_reg_2872;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_5_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff5_d0;
    end else begin
        iBuff_V_5_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_5_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_5_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff5_we0;
    end else begin
        iBuff_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_6_address0 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_6_address0 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_6_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff6_address0;
    end else begin
        iBuff_V_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_6_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff6_ce0;
    end else begin
        iBuff_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_6_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff6_ce1;
    end else begin
        iBuff_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_6_d0 = iReg_V_reg_2872;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_6_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff6_d0;
    end else begin
        iBuff_V_6_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_6_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_6_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff6_we0;
    end else begin
        iBuff_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_7_address0 = zext_ln534_3_fu_1550_p1;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_7_address0 = iBuff_V_7_addr_reg_2923;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_7_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff7_address0;
    end else begin
        iBuff_V_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_7_address1 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_7_address1 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_7_address1 = grp_TopDown_11_3_1024_s_fu_886_iBuff7_address1;
    end else begin
        iBuff_V_7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_7_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff7_ce0;
    end else begin
        iBuff_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_7_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_7_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff7_ce1;
    end else begin
        iBuff_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_7_d0 = iReg_V_reg_2872_pp0_iter2_reg;
    end else if (((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        iBuff_V_7_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_7_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff7_d0;
    end else begin
        iBuff_V_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        iBuff_V_7_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_7_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff7_we0;
    end else begin
        iBuff_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_7_we1 = 1'b1;
    end else begin
        iBuff_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_8_address0 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_8_address0 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_8_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff8_address0;
    end else begin
        iBuff_V_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_8_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff8_ce0;
    end else begin
        iBuff_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_8_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff8_ce1;
    end else begin
        iBuff_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_8_d0 = iReg_V_reg_2872;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_8_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff8_d0;
    end else begin
        iBuff_V_8_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_8_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_8_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff8_we0;
    end else begin
        iBuff_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        iBuff_V_9_address0 = zext_ln534_1_fu_1648_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_9_address0 = zext_ln534_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_9_address0 = grp_TopDown_11_3_1024_s_fu_886_iBuff9_address0;
    end else begin
        iBuff_V_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        iBuff_V_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_9_ce0 = grp_TopDown_11_3_1024_s_fu_886_iBuff9_ce0;
    end else begin
        iBuff_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_9_ce1 = grp_TopDown_11_3_1024_s_fu_886_iBuff9_ce1;
    end else begin
        iBuff_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_9_d0 = iReg_V_reg_2872;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_9_d0 = grp_TopDown_11_3_1024_s_fu_886_iBuff9_d0;
    end else begin
        iBuff_V_9_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        iBuff_V_9_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        iBuff_V_9_we0 = grp_TopDown_11_3_1024_s_fu_886_iBuff9_we0;
    end else begin
        iBuff_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        oBuff_V_address0 = conv_i_i_i_fu_1811_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        oBuff_V_address0 = zext_ln422_fu_1771_p1;
    end else begin
        oBuff_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
        oBuff_V_ce0 = 1'b1;
    end else begin
        oBuff_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln422_reg_3069_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        oBuff_V_we0 = 1'b1;
    end else begin
        oBuff_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln312_fu_1215_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((gmem3_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln332_1_fu_1419_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln332_1_fu_1419_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln332_reg_2829 == 1'd1) & (1'b1 == ap_CS_fsm_state70) & (icmp_ln377_fu_1564_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else if (((icmp_ln332_reg_2829 == 1'd0) & (1'b1 == ap_CS_fsm_state70) & (icmp_ln377_fu_1564_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == ap_CS_fsm_state71) & (grp_TopDown_11_3_1024_s_fu_886_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((gmem3_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln387_fu_1576_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((icmp_ln387_fu_1576_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if ((~((gmem3_BVALID == 1'b0) & (icmp_ln332_reg_2829 == 1'd0)) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            if (((icmp_ln417_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (((cmp119_i_i270_reg_2775 == 1'd1) & (1'b0 == ap_block_state85_io) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else if (((cmp119_i_i270_reg_2775 == 1'd0) & (1'b0 == ap_block_state85_io) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln422_fu_1766_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((icmp_ln422_fu_1766_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)) & ~((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter6 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter7 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter6 == 1'b0)) | ((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln305_2_fu_1117_p2 = (zext_ln305_fu_1113_p1 + 13'd2);

assign add_ln305_fu_1095_p2 = (zext_ln304_fu_1091_p1 + 12'd9);

assign add_ln312_1_fu_1235_p2 = (inter_i_reg_697 + 2'd1);

assign add_ln312_fu_1209_p2 = (indvar_flatten_reg_686 + 4'd1);

assign add_ln417_fu_1705_p2 = (ii_reg_818 + 10'd1);

assign add_ln422_fu_1760_p2 = (ap_phi_mux_k_phi_fu_834_p4 + 6'd1);

assign add_ln433_fu_1776_p2 = (j_reg_842 + 8'd1);

assign add_ln444_10_fu_2158_p2 = (bit_1_fu_1867_p3 + 32'd9);

assign add_ln444_11_fu_2240_p2 = (bit_1_fu_1867_p3 + 32'd11);

assign add_ln444_12_fu_2322_p2 = (bit_1_fu_1867_p3 + 32'd13);

assign add_ln444_13_fu_2404_p2 = (bit_1_fu_1867_p3 + 32'd15);

assign add_ln444_1_fu_1912_p2 = (bit_1_fu_1867_p3 + 32'd3);

assign add_ln444_2_fu_1988_p2 = (bit_1_fu_1867_p3 + 32'd4);

assign add_ln444_3_fu_2070_p2 = (bit_1_fu_1867_p3 + 32'd6);

assign add_ln444_4_fu_2152_p2 = (bit_1_fu_1867_p3 + 32'd8);

assign add_ln444_5_fu_2234_p2 = (bit_1_fu_1867_p3 + 32'd10);

assign add_ln444_6_fu_2316_p2 = (bit_1_fu_1867_p3 + 32'd12);

assign add_ln444_7_fu_2398_p2 = (bit_1_fu_1867_p3 + 32'd14);

assign add_ln444_8_fu_1994_p2 = (bit_1_fu_1867_p3 + 32'd5);

assign add_ln444_9_fu_2076_p2 = (bit_1_fu_1867_p3 + 32'd7);

assign add_ln444_fu_1906_p2 = (bit_1_fu_1867_p3 + 32'd2);

assign add_ln452_fu_1835_p2 = (zext_ln433_fu_1787_p1 + mul_ln414_reg_3078);

assign add_ln536_fu_1379_p2 = ($signed(sext_ln536_fu_1375_p1) + $signed(img_inp_read_reg_2552));

assign add_ln548_fu_1852_p2 = (zext_ln548_fu_1848_p1 + img_out_read_reg_2547);

assign add_ln691_fu_1816_p2 = (id_V_reg_864 + 3'd1);

assign and_ln319_fu_1355_p2 = (xor_ln312_fu_1350_p2 & icmp_ln319_reg_2760);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd90];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem3_RVALID == 1'b0) & (icmp_ln332_1_reg_2838 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem3_RVALID == 1'b0) & (icmp_ln332_1_reg_2838 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1 = ((ap_ST_fsm_pp1_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp1_stage0_subdone));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_block_state75_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_block_state75_io));
end

always @ (*) begin
    ap_block_pp2 = ((ap_ST_fsm_pp2_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp2_stage0_subdone));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((gmem3_RVALID == 1'b0) & (icmp_ln422_reg_3069 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((gmem3_RVALID == 1'b0) & (icmp_ln422_reg_3069 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3 = ((ap_ST_fsm_pp3_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp3_stage0_subdone));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((gmem4_BVALID == 1'b0) & (icmp_ln452_reg_3112_pp3_iter6_reg == 1'd1) & (ap_enable_reg_pp3_iter7 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((gmem4_BVALID == 1'b0) & (icmp_ln452_reg_3112_pp3_iter6_reg == 1'd1) & (ap_enable_reg_pp3_iter7 == 1'b1)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_block_state101_io)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_block_state100_io)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((gmem4_BVALID == 1'b0) & (icmp_ln452_reg_3112_pp3_iter6_reg == 1'd1) & (ap_enable_reg_pp3_iter7 == 1'b1)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_block_state101_io)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_block_state100_io)));
end

always @ (*) begin
    ap_block_state100_io = ((ap_predicate_op669_writereq_state100 == 1'b1) & (gmem4_AWREADY == 1'b0));
end

assign ap_block_state100_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state101_io = ((gmem4_WREADY == 1'b0) & (icmp_ln452_reg_3112_pp3_iter1_reg == 1'd1));
end

assign ap_block_state101_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state106_pp3_stage0_iter7 = ((gmem4_BVALID == 1'b0) & (icmp_ln452_reg_3112_pp3_iter6_reg == 1'd1));
end

assign ap_block_state65_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state66_pp0_stage0_iter1 = ((gmem3_RVALID == 1'b0) & (icmp_ln332_1_reg_2838 == 1'd0));
end

assign ap_block_state67_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state75_io = ((gmem3_WREADY == 1'b0) & (icmp_ln387_reg_2946_pp1_iter1_reg == 1'd0));
end

assign ap_block_state75_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state80 = ((gmem3_BVALID == 1'b0) & (icmp_ln332_reg_2829 == 1'd0));
end

always @ (*) begin
    ap_block_state85_io = ((gmem3_ARREADY == 1'b0) & (cmp119_i_i270_reg_2775 == 1'd0));
end

assign ap_block_state92_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state93_pp2_stage0_iter1 = ((gmem3_RVALID == 1'b0) & (icmp_ln422_reg_3069 == 1'd0));
end

assign ap_block_state94_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_381 = (trunc_ln353_reg_2863_pp0_iter1_reg == 4'd7);
end

always @ (*) begin
    ap_enable_operation_384 = (trunc_ln353_reg_2863_pp0_iter1_reg == 4'd4);
end

always @ (*) begin
    ap_enable_operation_387 = (trunc_ln353_reg_2863_pp0_iter1_reg == 4'd1);
end

always @ (*) begin
    ap_enable_operation_388 = (trunc_ln353_reg_2863_pp0_iter1_reg == 4'd0);
end

always @ (*) begin
    ap_enable_operation_389 = (ap_predicate_op389_store_state67 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_393 = (ap_predicate_op393_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_395 = (ap_predicate_op395_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_397 = (ap_predicate_op397_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_399 = (ap_predicate_op399_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_401 = (ap_predicate_op401_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_409 = (ap_predicate_op409_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_411 = (ap_predicate_op411_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_413 = (ap_predicate_op413_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_415 = (ap_predicate_op415_store_state68 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_417 = (ap_predicate_op417_store_state68 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

always @ (*) begin
    ap_enable_state67_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state68_pp0_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_predicate_op389_store_state67 = ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd10) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd11) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd12) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd13) | ((trunc_ln353_reg_2863_pp0_iter1_reg == 4'd14) | (trunc_ln353_reg_2863_pp0_iter1_reg == 4'd15))))));
end

always @ (*) begin
    ap_predicate_op393_store_state68 = ((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd0) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op395_store_state68 = ((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd6));
end

always @ (*) begin
    ap_predicate_op397_store_state68 = ((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd3));
end

always @ (*) begin
    ap_predicate_op399_store_state68 = ((icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0) & (trunc_ln305_reg_2640 == 4'd0));
end

always @ (*) begin
    ap_predicate_op401_store_state68 = (~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_6_reg_2900_pp0_iter2_reg == 1'd1) & (icmp_ln870_5_reg_2896_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op409_store_state68 = ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd6));
end

always @ (*) begin
    ap_predicate_op411_store_state68 = ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd3));
end

always @ (*) begin
    ap_predicate_op413_store_state68 = ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1) & (trunc_ln305_reg_2640 == 4'd0));
end

always @ (*) begin
    ap_predicate_op415_store_state68 = (~(trunc_ln305_reg_2640 == 4'd0) & ~(trunc_ln305_reg_2640 == 4'd3) & ~(trunc_ln305_reg_2640 == 4'd6) & (icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd0) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op417_store_state68 = ((icmp_ln870_4_reg_2904_pp0_iter2_reg == 1'd1) & (icmp_ln870_2_reg_2892_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op669_writereq_state100 = ((icmp_ln452_reg_3112 == 1'd1) & (icmp_ln433_reg_3088 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bit_1_fu_1867_p3 = ((icmp_ln870_3_reg_3092[0:0] == 1'b1) ? 32'd0 : bit_reg_875);

assign bit_2_fu_2482_p2 = (bit_1_fu_1867_p3 + 32'd16);

assign bramsetsval_fu_1135_p2 = (add_ln305_2_reg_2618 - grp_fu_1123_p2);

assign bramtotal_fu_1187_p2 = (trunc_ln305_reg_2640 + 4'd2);

assign cmp119_i_i270_fu_1298_p2 = ((ram_row_depth_reg_2582 == 6'd0) ? 1'b1 : 1'b0);

assign cmp31_i_i4_fu_1247_p2 = ((inter_i_reg_697 == 2'd0) ? 1'b1 : 1'b0);

assign cmp31_i_i_mid1_fu_1241_p2 = ((add_ln312_1_fu_1235_p2 == 2'd0) ? 1'b1 : 1'b0);

assign conv_i_i_i_fu_1811_p1 = pixel_V_2_fu_1803_p3;

assign dep_V_1_fu_1460_p2 = (ap_phi_mux_dep_V_phi_fu_745_p4 + zext_ln303_2_reg_2685);

assign dep_V_3_fu_1613_p2 = (ap_phi_mux_dep_V_2_phi_fu_800_p4 + zext_ln303_2_reg_2685);

assign dep_V_5_fu_1473_p3 = ((icmp_ln870_1_fu_1455_p2[0:0] == 1'b1) ? dep_V_1_fu_1460_p2 : ap_phi_mux_dep_V_phi_fu_745_p4);

assign div153_i_i_fu_1289_p4 = {{npcCols_8_reg_2563[10:3]}};

assign empty_33_fu_908_p1 = cols[4:0];

assign empty_34_fu_912_p1 = cols[10:0];

assign empty_38_fu_1731_p2 = (p_cast38_fu_1727_p1 + img_inp_read_reg_2552);

assign empty_fu_904_p1 = cols[2:0];

assign gmem4_WDATA = $signed(tmp_3_fu_2488_p9);

assign grp_TopDown_11_3_1024_s_fu_886_ap_start = grp_TopDown_11_3_1024_s_fu_886_ap_start_reg;

assign grp_fu_1082_p1 = grp_fu_1082_p10;

assign grp_fu_1082_p10 = ram_row_depth_fu_1068_p4;

assign grp_fu_1107_p0 = (add_ln305_fu_1095_p2 + zext_ln302_3_fu_1088_p1);

assign grp_fu_1107_p1 = zext_ln304_fu_1091_p1;

assign grp_fu_1123_p0 = (zext_ln305_fu_1113_p1 + 13'd2);

assign grp_fu_1123_p1 = 13'd3;

assign grp_fu_2505_p0 = grp_fu_2505_p00;

assign grp_fu_2505_p00 = bramsetsval_fu_1135_p2;

assign grp_fu_2505_p1 = grp_fu_2505_p10;

assign grp_fu_2505_p10 = bdrows_reg_2601;

assign grp_fu_2513_p1 = grp_fu_2513_p10;

assign grp_fu_2513_p10 = ram_row_depth_reg_2582;

assign grp_fu_2519_p0 = grp_fu_2519_p00;

assign grp_fu_2519_p00 = select_ln319_fu_1279_p3;

assign grp_fu_2519_p1 = zext_ln303_5_reg_2680;

assign grp_fu_2524_p0 = grp_fu_2524_p00;

assign grp_fu_2524_p00 = xor_ln324_fu_1319_p2;

assign grp_fu_2524_p1 = zext_ln302_1_reg_2655;

assign grp_fu_2531_p1 = zext_ln303_4_reg_2675;

assign grp_fu_2537_p0 = grp_fu_2537_p00;

assign grp_fu_2537_p00 = ii_reg_818;

assign grp_fu_2537_p1 = ram_row_depth_cast25_reg_2789;

assign grp_fu_2543_p0 = zext_ln414_1_reg_3053;

assign grp_fu_2543_p1 = zext_ln414_reg_2779;

assign i_2_fu_1570_p2 = (i_1_reg_774 + 29'd1);

assign i_3_fu_1413_p2 = (i_reg_719 + 29'd1);

assign icmp_ln26_fu_978_p2 = ((empty_33_fu_908_p1 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln312_fu_1215_p2 = ((indvar_flatten_reg_686 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_1221_p2 = ((slice_reg_708 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln319_fu_1273_p2 = ((select_ln312_fu_1227_p3 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln332_1_fu_1419_p2 = ((i_reg_719 == lBound_reg_2799) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_1408_p2 = ((lBound_reg_2799 == 29'd0) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1040_p2 = ((empty_fu_904_p1 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln377_fu_1564_p2 = ((intra_i_reg_763 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln387_fu_1576_p2 = ((i_1_reg_774 == lBound_reg_2799) ? 1'b1 : 1'b0);

assign icmp_ln417_fu_1711_p2 = ((ii_reg_818 == trunc_ln302_reg_2568) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_1766_p2 = ((ap_phi_mux_k_phi_fu_834_p4 == ram_row_depth_reg_2582) ? 1'b1 : 1'b0);

assign icmp_ln433_fu_1782_p2 = ((j_reg_842 == trunc_ln417_2_reg_2784) ? 1'b1 : 1'b0);

assign icmp_ln452_fu_1830_p2 = ((j_reg_842 < div153_i_i_reg_2770) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_2000_p2 = ((add_ln444_2_fu_1988_p2 > add_ln444_8_fu_1994_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_2_fu_2082_p2 = ((add_ln444_3_fu_2070_p2 > add_ln444_9_fu_2076_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_3_fu_2164_p2 = ((add_ln444_4_fu_2152_p2 > add_ln444_10_fu_2158_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_4_fu_2246_p2 = ((add_ln444_5_fu_2234_p2 > add_ln444_11_fu_2240_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_5_fu_2328_p2 = ((add_ln444_6_fu_2316_p2 > add_ln444_12_fu_2322_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_6_fu_2410_p2 = ((add_ln444_7_fu_2398_p2 > add_ln444_13_fu_2404_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_1918_p2 = ((add_ln444_fu_1906_p2 > add_ln444_1_fu_1912_p2) ? 1'b1 : 1'b0);

assign icmp_ln870_10_fu_1974_p2 = ((trunc_ln358_fu_1970_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_11_fu_2056_p2 = ((trunc_ln358_1_fu_2052_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_12_fu_2138_p2 = ((trunc_ln358_2_fu_2134_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_13_fu_2220_p2 = ((trunc_ln358_3_fu_2216_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_14_fu_2302_p2 = ((trunc_ln358_4_fu_2298_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_15_fu_2384_p2 = ((trunc_ln358_5_fu_2380_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_16_fu_2466_p2 = ((trunc_ln358_6_fu_2462_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_1_fu_1455_p2 = ((idx2_V_2_fu_1435_p3 == op2_assign_1_cast_cast_reg_2708) ? 1'b1 : 1'b0);

assign icmp_ln870_2_fu_1501_p2 = ((idx2_V_7_reg_2842 == 16'd1) ? 1'b1 : 1'b0);

assign icmp_ln870_3_fu_1791_p2 = ((id_V_reg_864 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln870_4_fu_1518_p2 = ((dep_V_5_reg_2849 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_5_fu_1506_p2 = ((idx2_V_7_reg_2842 == zext_ln305_1_reg_2693) ? 1'b1 : 1'b0);

assign icmp_ln870_6_fu_1513_p2 = ((zext_ln870_fu_1510_p1 == op2_assign_reg_2720) ? 1'b1 : 1'b0);

assign icmp_ln870_7_fu_1892_p2 = ((trunc_ln674_1_fu_1888_p1 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_8_fu_1581_p2 = ((idx1_V_2_reg_785 == zext_ln303_2_reg_2685) ? 1'b1 : 1'b0);

assign icmp_ln870_9_fu_1608_p2 = ((idx2_V_5_fu_1592_p3 == op2_assign_1_cast_cast_reg_2708) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_1424_p2 = ((idx1_V_reg_730 == zext_ln303_2_reg_2685) ? 1'b1 : 1'b0);

assign id_V_1_fu_1822_p3 = ((icmp_ln870_3_fu_1791_p2[0:0] == 1'b1) ? 3'd1 : add_ln691_fu_1816_p2);

assign idx1_V_1_fu_1443_p3 = ((icmp_ln870_fu_1424_p2[0:0] == 1'b1) ? 16'd0 : idx1_V_reg_730);

assign idx1_V_4_fu_1667_p2 = (idx1_V_6_fu_1600_p3 + 16'd1);

assign idx1_V_5_fu_1495_p2 = (idx1_V_1_fu_1443_p3 + 16'd1);

assign idx1_V_6_fu_1600_p3 = ((icmp_ln870_8_fu_1581_p2[0:0] == 1'b1) ? 16'd0 : idx1_V_2_reg_785);

assign idx2_V_1_fu_1429_p2 = (ap_phi_mux_idx2_V_phi_fu_756_p4 + 16'd1);

assign idx2_V_2_fu_1435_p3 = ((icmp_ln870_fu_1424_p2[0:0] == 1'b1) ? idx2_V_1_fu_1429_p2 : ap_phi_mux_idx2_V_phi_fu_756_p4);

assign idx2_V_4_fu_1586_p2 = (ap_phi_mux_idx2_V_3_phi_fu_811_p4 + 16'd1);

assign idx2_V_5_fu_1592_p3 = ((icmp_ln870_8_fu_1581_p2[0:0] == 1'b1) ? idx2_V_4_fu_1586_p2 : ap_phi_mux_idx2_V_3_phi_fu_811_p4);

assign idx2_V_6_fu_1618_p3 = ((icmp_ln870_9_fu_1608_p2[0:0] == 1'b1) ? 16'd1 : idx2_V_5_fu_1592_p3);

assign idx2_V_7_fu_1465_p3 = ((icmp_ln870_1_fu_1455_p2[0:0] == 1'b1) ? 16'd1 : idx2_V_2_fu_1435_p3);

assign index_fu_1485_p2 = (trunc_ln208_fu_1481_p1 + trunc_ln327_fu_1451_p1);

assign intra_i_1_fu_1558_p2 = (intra_i_reg_763 + 4'd1);

assign lshr_ln674_1_fu_1964_p2 = select_ln674_fu_1944_p3 >> zext_ln674_1_fu_1960_p1;

assign lshr_ln674_2_fu_2046_p2 = select_ln674_2_fu_2026_p3 >> zext_ln674_2_fu_2042_p1;

assign lshr_ln674_3_fu_2128_p2 = select_ln674_4_fu_2108_p3 >> zext_ln674_3_fu_2124_p1;

assign lshr_ln674_4_fu_2210_p2 = select_ln674_6_fu_2190_p3 >> zext_ln674_4_fu_2206_p1;

assign lshr_ln674_5_fu_2292_p2 = select_ln674_8_fu_2272_p3 >> zext_ln674_5_fu_2288_p1;

assign lshr_ln674_6_fu_2374_p2 = select_ln674_10_fu_2354_p3 >> zext_ln674_6_fu_2370_p1;

assign lshr_ln674_7_fu_2456_p2 = select_ln674_12_fu_2436_p3 >> zext_ln674_7_fu_2452_p1;

assign lshr_ln674_fu_1882_p2 = oBuff_V_q0 >> zext_ln674_fu_1878_p1;

assign mul_ln322_fu_1331_p0 = zext_ln302_reg_2660;

assign mul_ln322_fu_1331_p1 = mul_ln322_fu_1331_p10;

assign mul_ln322_fu_1331_p10 = select_ln312_reg_2738;

assign npcColsNxt_8_fu_1034_p2 = (shl_ln1_fu_1026_p3 + 11'd8);

assign npcColsNxt_fu_972_p2 = (shl_ln_fu_964_p3 + 11'd32);

assign npcCols_8_fu_1046_p3 = ((icmp_ln33_fu_1040_p2[0:0] == 1'b1) ? npcColsNxt_8_fu_1034_p2 : empty_34_fu_912_p1);

assign npcCols_fu_984_p3 = ((icmp_ln26_fu_978_p2[0:0] == 1'b1) ? npcColsNxt_fu_972_p2 : empty_34_fu_912_p1);

assign offset_fu_1360_p3 = ((and_ln319_fu_1355_p2[0:0] == 1'b1) ? 30'd0 : grp_fu_2531_p2);

assign op2_assign_1_cast_cast_fu_1197_p1 = op2_assign_1_cast_fu_1192_p2;

assign op2_assign_1_cast_fu_1192_p2 = (bramsetsval_reg_2634 + 13'd1);

assign p_cast38_fu_1727_p1 = tmp_2_fu_1720_p3;

assign pixel_V_1_fu_1797_p2 = (ap_phi_mux_pixel_V_phi_fu_857_p4 + 9'd1);

assign pixel_V_2_fu_1803_p3 = ((icmp_ln870_3_fu_1791_p2[0:0] == 1'b1) ? pixel_V_1_fu_1797_p2 : ap_phi_mux_pixel_V_phi_fu_857_p4);

assign ram_row_depth_cast25_fu_1316_p1 = ram_row_depth_reg_2582;

assign ram_row_depth_cast35_cast_fu_1201_p1 = ram_row_depth_reg_2582;

assign ram_row_depth_fu_1068_p4 = {{npcCols_fu_984_p3[10:5]}};

assign ret_1_fu_1642_p2 = (trunc_ln1346_1_fu_1638_p1 + trunc_ln1346_fu_1634_p1);

assign ret_2_fu_1537_p2 = (ram_row_depth_cast35_cast_reg_2714 + index_reg_2856_pp0_iter2_reg);

assign ret_fu_1546_p2 = (index_reg_2856_pp0_iter2_reg - ram_row_depth_cast35_cast_reg_2714);

assign rhs_fu_1626_p3 = ((icmp_ln870_9_fu_1608_p2[0:0] == 1'b1) ? dep_V_3_fu_1613_p2 : ap_phi_mux_dep_V_2_phi_fu_800_p4);

assign sel_tmp_v_fu_1340_p3 = ((select_ln312_1_reg_2744[0:0] == 1'b1) ? zext_ln324_fu_1336_p1 : grp_fu_2524_p3);

assign select_ln24_fu_956_p3 = ((tmp_4_fu_916_p3[0:0] == 1'b1) ? sub_ln24_1_fu_940_p2 : tmp_fu_946_p4);

assign select_ln312_1_fu_1253_p3 = ((icmp_ln318_fu_1221_p2[0:0] == 1'b1) ? cmp31_i_i_mid1_fu_1241_p2 : cmp31_i_i4_fu_1247_p2);

assign select_ln312_2_fu_1261_p3 = ((icmp_ln318_fu_1221_p2[0:0] == 1'b1) ? add_ln312_1_fu_1235_p2 : inter_i_reg_697);

assign select_ln312_fu_1227_p3 = ((icmp_ln318_fu_1221_p2[0:0] == 1'b1) ? 3'd0 : slice_reg_708);

assign select_ln319_fu_1279_p3 = ((icmp_ln319_fu_1273_p2[0:0] == 1'b1) ? zext_ln302_2_reg_2665 : trunc_ln307_reg_2698);

assign select_ln31_fu_1018_p3 = ((tmp_4_fu_916_p3[0:0] == 1'b1) ? sub_ln31_fu_1002_p2 : tmp_1_fu_1008_p4);

assign select_ln674_10_fu_2354_p3 = ((icmp_ln674_5_fu_2328_p2[0:0] == 1'b1) ? tmp_11_fu_2338_p4 : oBuff_V_q0);

assign select_ln674_11_fu_2362_p3 = ((icmp_ln674_5_fu_2328_p2[0:0] == 1'b1) ? sub_ln674_5_fu_2348_p2 : trunc_ln674_7_fu_2334_p1);

assign select_ln674_12_fu_2436_p3 = ((icmp_ln674_6_fu_2410_p2[0:0] == 1'b1) ? tmp_12_fu_2420_p4 : oBuff_V_q0);

assign select_ln674_13_fu_2444_p3 = ((icmp_ln674_6_fu_2410_p2[0:0] == 1'b1) ? sub_ln674_6_fu_2430_p2 : trunc_ln674_8_fu_2416_p1);

assign select_ln674_1_fu_1952_p3 = ((icmp_ln674_fu_1918_p2[0:0] == 1'b1) ? sub_ln674_fu_1938_p2 : trunc_ln674_2_fu_1924_p1);

assign select_ln674_2_fu_2026_p3 = ((icmp_ln674_1_fu_2000_p2[0:0] == 1'b1) ? tmp_7_fu_2010_p4 : oBuff_V_q0);

assign select_ln674_3_fu_2034_p3 = ((icmp_ln674_1_fu_2000_p2[0:0] == 1'b1) ? sub_ln674_1_fu_2020_p2 : trunc_ln674_3_fu_2006_p1);

assign select_ln674_4_fu_2108_p3 = ((icmp_ln674_2_fu_2082_p2[0:0] == 1'b1) ? tmp_8_fu_2092_p4 : oBuff_V_q0);

assign select_ln674_5_fu_2116_p3 = ((icmp_ln674_2_fu_2082_p2[0:0] == 1'b1) ? sub_ln674_2_fu_2102_p2 : trunc_ln674_4_fu_2088_p1);

assign select_ln674_6_fu_2190_p3 = ((icmp_ln674_3_fu_2164_p2[0:0] == 1'b1) ? tmp_9_fu_2174_p4 : oBuff_V_q0);

assign select_ln674_7_fu_2198_p3 = ((icmp_ln674_3_fu_2164_p2[0:0] == 1'b1) ? sub_ln674_3_fu_2184_p2 : trunc_ln674_5_fu_2170_p1);

assign select_ln674_8_fu_2272_p3 = ((icmp_ln674_4_fu_2246_p2[0:0] == 1'b1) ? tmp_10_fu_2256_p4 : oBuff_V_q0);

assign select_ln674_9_fu_2280_p3 = ((icmp_ln674_4_fu_2246_p2[0:0] == 1'b1) ? sub_ln674_4_fu_2266_p2 : trunc_ln674_6_fu_2252_p1);

assign select_ln674_fu_1944_p3 = ((icmp_ln674_fu_1918_p2[0:0] == 1'b1) ? tmp_6_fu_1928_p4 : oBuff_V_q0);

assign select_ln870_1_fu_1980_p3 = ((icmp_ln870_10_fu_1974_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln870_2_fu_2062_p3 = ((icmp_ln870_11_fu_2056_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln870_3_fu_2144_p3 = ((icmp_ln870_12_fu_2138_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln870_4_fu_2226_p3 = ((icmp_ln870_13_fu_2220_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln870_5_fu_2308_p3 = ((icmp_ln870_14_fu_2302_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln870_6_fu_2390_p3 = ((icmp_ln870_15_fu_2384_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln870_fu_1898_p3 = ((icmp_ln870_7_fu_1892_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign sext_ln422_fu_1749_p1 = $signed(trunc_ln_fu_1740_p4);

assign sext_ln536_1_fu_1398_p1 = $signed(trunc_ln536_1_reg_2812);

assign sext_ln536_fu_1375_p1 = $signed(tmp_5_fu_1367_p3);

assign sext_ln548_fu_2472_p1 = $signed(trunc_ln2_reg_3116);

assign shl_ln1_fu_1026_p3 = {{select_ln31_fu_1018_p3}, {3'd0}};

assign shl_ln3_fu_1840_p3 = {{add_ln452_fu_1835_p2}, {3'd0}};

assign shl_ln_fu_964_p3 = {{select_ln24_fu_956_p3}, {5'd0}};

assign slice_1_fu_1700_p2 = (select_ln312_reg_2738 + 3'd1);

assign sub66_i_i_fu_1148_p2 = ($signed(zext_ln304_reg_2607) + $signed(12'd4095));

assign sub_ln24_1_fu_940_p2 = (6'd0 - trunc_ln24_1_fu_930_p4);

assign sub_ln24_fu_924_p2 = (11'd0 - empty_34_fu_912_p1);

assign sub_ln31_fu_1002_p2 = (8'd0 - trunc_ln1_fu_992_p4);

assign sub_ln324_fu_1204_p2 = (zext_ln302_4_fu_1166_p1 - grp_fu_2505_p2);

assign sub_ln674_1_fu_2020_p2 = (7'd63 - trunc_ln674_3_fu_2006_p1);

assign sub_ln674_2_fu_2102_p2 = (7'd63 - trunc_ln674_4_fu_2088_p1);

assign sub_ln674_3_fu_2184_p2 = (7'd63 - trunc_ln674_5_fu_2170_p1);

assign sub_ln674_4_fu_2266_p2 = (7'd63 - trunc_ln674_6_fu_2252_p1);

assign sub_ln674_5_fu_2348_p2 = (7'd63 - trunc_ln674_7_fu_2334_p1);

assign sub_ln674_6_fu_2430_p2 = (7'd63 - trunc_ln674_8_fu_2416_p1);

assign sub_ln674_fu_1938_p2 = (7'd63 - trunc_ln674_2_fu_1924_p1);

integer ap_tvar_int_0;

always @ (oBuff_V_q0) begin
    for (ap_tvar_int_0 = 64 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 63 - 0) begin
            tmp_10_fu_2256_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_10_fu_2256_p4[ap_tvar_int_0] = oBuff_V_q0[63 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (oBuff_V_q0) begin
    for (ap_tvar_int_1 = 64 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 63 - 0) begin
            tmp_11_fu_2338_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_11_fu_2338_p4[ap_tvar_int_1] = oBuff_V_q0[63 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (oBuff_V_q0) begin
    for (ap_tvar_int_2 = 64 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 63 - 0) begin
            tmp_12_fu_2420_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_12_fu_2420_p4[ap_tvar_int_2] = oBuff_V_q0[63 - ap_tvar_int_2];
        end
    end
end

assign tmp_1_fu_1008_p4 = {{cols[10:3]}};

assign tmp_2_fu_1720_p3 = {{grp_fu_2537_p2}, {3'd0}};

assign tmp_3_fu_2488_p9 = {{{{{{{{icmp_ln870_16_reg_3156}, {select_ln870_6_reg_3151}}, {select_ln870_5_reg_3146}}, {select_ln870_4_reg_3141}}, {select_ln870_3_reg_3136}}, {select_ln870_2_reg_3131}}, {select_ln870_1_reg_3126}}, {select_ln870_reg_3121}};

assign tmp_4_fu_916_p3 = cols[32'd31];

assign tmp_5_fu_1367_p3 = {{offset_fu_1360_p3}, {3'd0}};

integer ap_tvar_int_3;

always @ (oBuff_V_q0) begin
    for (ap_tvar_int_3 = 64 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 63 - 0) begin
            tmp_6_fu_1928_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_6_fu_1928_p4[ap_tvar_int_3] = oBuff_V_q0[63 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (oBuff_V_q0) begin
    for (ap_tvar_int_4 = 64 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 63 - 0) begin
            tmp_7_fu_2010_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_7_fu_2010_p4[ap_tvar_int_4] = oBuff_V_q0[63 - ap_tvar_int_4];
        end
    end
end

integer ap_tvar_int_5;

always @ (oBuff_V_q0) begin
    for (ap_tvar_int_5 = 64 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 63 - 0) begin
            tmp_8_fu_2092_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_8_fu_2092_p4[ap_tvar_int_5] = oBuff_V_q0[63 - ap_tvar_int_5];
        end
    end
end

integer ap_tvar_int_6;

always @ (oBuff_V_q0) begin
    for (ap_tvar_int_6 = 64 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 63 - 0) begin
            tmp_9_fu_2174_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_9_fu_2174_p4[ap_tvar_int_6] = oBuff_V_q0[63 - ap_tvar_int_6];
        end
    end
end

assign tmp_fu_946_p4 = {{cols[10:5]}};

assign trunc_ln1346_1_fu_1638_p1 = rhs_fu_1626_p3[9:0];

assign trunc_ln1346_fu_1634_p1 = idx1_V_6_fu_1600_p3[9:0];

assign trunc_ln1_fu_992_p4 = {{sub_ln24_fu_924_p2[10:3]}};

assign trunc_ln208_fu_1481_p1 = dep_V_5_fu_1473_p3[9:0];

assign trunc_ln24_1_fu_930_p4 = {{sub_ln24_fu_924_p2[10:5]}};

assign trunc_ln302_fu_1054_p1 = rows[9:0];

assign trunc_ln305_fu_1140_p1 = bramsetsval_fu_1135_p2[3:0];

assign trunc_ln307_fu_1184_p1 = grp_fu_2505_p2[22:0];

assign trunc_ln318_fu_1269_p1 = select_ln312_fu_1227_p3[1:0];

assign trunc_ln327_fu_1451_p1 = idx1_V_1_fu_1443_p3[9:0];

assign trunc_ln353_fu_1491_p1 = idx2_V_7_fu_1465_p3[3:0];

assign trunc_ln358_1_fu_2052_p1 = lshr_ln674_2_fu_2046_p2[1:0];

assign trunc_ln358_2_fu_2134_p1 = lshr_ln674_3_fu_2128_p2[1:0];

assign trunc_ln358_3_fu_2216_p1 = lshr_ln674_4_fu_2210_p2[1:0];

assign trunc_ln358_4_fu_2298_p1 = lshr_ln674_5_fu_2292_p2[1:0];

assign trunc_ln358_5_fu_2380_p1 = lshr_ln674_6_fu_2374_p2[1:0];

assign trunc_ln358_6_fu_2462_p1 = lshr_ln674_7_fu_2456_p2[1:0];

assign trunc_ln358_fu_1970_p1 = lshr_ln674_1_fu_1964_p2[1:0];

assign trunc_ln402_fu_1663_p1 = idx2_V_6_fu_1618_p3[3:0];

assign trunc_ln674_1_fu_1888_p1 = lshr_ln674_fu_1882_p2[1:0];

assign trunc_ln674_2_fu_1924_p1 = add_ln444_fu_1906_p2[6:0];

assign trunc_ln674_3_fu_2006_p1 = add_ln444_2_fu_1988_p2[6:0];

assign trunc_ln674_4_fu_2088_p1 = add_ln444_3_fu_2070_p2[6:0];

assign trunc_ln674_5_fu_2170_p1 = add_ln444_4_fu_2152_p2[6:0];

assign trunc_ln674_6_fu_2252_p1 = add_ln444_5_fu_2234_p2[6:0];

assign trunc_ln674_7_fu_2334_p1 = add_ln444_6_fu_2316_p2[6:0];

assign trunc_ln674_8_fu_2416_p1 = add_ln444_7_fu_2398_p2[6:0];

assign trunc_ln674_fu_1874_p1 = bit_1_fu_1867_p3[5:0];

assign trunc_ln_fu_1740_p4 = {{empty_38_reg_3048[63:3]}};

assign xor_ln312_fu_1350_p2 = (select_ln312_1_reg_2744 ^ 1'd1);

assign xor_ln324_fu_1319_p2 = (trunc_ln318_reg_2755 ^ 2'd3);

assign zext_ln302_1_fu_1157_p1 = slice_h_reg_2573;

assign zext_ln302_2_fu_1163_p1 = slice_h_reg_2573;

assign zext_ln302_3_fu_1088_p1 = slice_h_reg_2573;

assign zext_ln302_4_fu_1166_p1 = slice_h_reg_2573;

assign zext_ln302_fu_1160_p1 = slice_h_reg_2573;

assign zext_ln303_2_fu_1178_p1 = ram_row_depth_reg_2582;

assign zext_ln303_4_fu_1172_p1 = ram_row_depth_reg_2582;

assign zext_ln303_5_fu_1175_p1 = ram_row_depth_reg_2582;

assign zext_ln303_fu_1169_p1 = ram_row_depth_reg_2582;

assign zext_ln304_fu_1091_p1 = grp_fu_1082_p2;

assign zext_ln305_1_fu_1181_p1 = bramsetsval_reg_2634;

assign zext_ln305_fu_1113_p1 = grp_fu_1107_p2;

assign zext_ln315_fu_1394_p1 = lBound_reg_2799;

assign zext_ln324_fu_1336_p1 = mul_ln322_fu_1331_p2;

assign zext_ln414_1_fu_1736_p1 = ii_reg_818;

assign zext_ln414_fu_1303_p1 = div153_i_i_fu_1289_p4;

assign zext_ln422_fu_1771_p1 = k_reg_830_pp2_iter1_reg;

assign zext_ln433_fu_1787_p1 = j_reg_842;

assign zext_ln534_1_fu_1648_p1 = ret_1_fu_1642_p2;

assign zext_ln534_2_fu_1541_p1 = ret_2_fu_1537_p2;

assign zext_ln534_3_fu_1550_p1 = ret_fu_1546_p2;

assign zext_ln534_fu_1523_p1 = index_reg_2856_pp0_iter1_reg;

assign zext_ln548_fu_1848_p1 = shl_ln3_fu_1840_p3;

assign zext_ln674_1_fu_1960_p1 = select_ln674_1_fu_1952_p3;

assign zext_ln674_2_fu_2042_p1 = select_ln674_3_fu_2034_p3;

assign zext_ln674_3_fu_2124_p1 = select_ln674_5_fu_2116_p3;

assign zext_ln674_4_fu_2206_p1 = select_ln674_7_fu_2198_p3;

assign zext_ln674_5_fu_2288_p1 = select_ln674_9_fu_2280_p3;

assign zext_ln674_6_fu_2370_p1 = select_ln674_11_fu_2362_p3;

assign zext_ln674_7_fu_2452_p1 = select_ln674_13_fu_2444_p3;

assign zext_ln674_fu_1878_p1 = trunc_ln674_fu_1874_p1;

assign zext_ln870_fu_1510_p1 = dep_V_5_reg_2849;

always @ (posedge ap_clk) begin
    zext_ln304_reg_2607[11] <= 1'b0;
    zext_ln302_1_reg_2655[9:8] <= 2'b00;
    zext_ln302_reg_2660[10:8] <= 3'b000;
    zext_ln302_2_reg_2665[22:8] <= 15'b000000000000000;
    zext_ln303_reg_2670[31:6] <= 26'b00000000000000000000000000;
    zext_ln303_4_reg_2675[29:6] <= 24'b000000000000000000000000;
    zext_ln303_5_reg_2680[28:6] <= 23'b00000000000000000000000;
    zext_ln303_2_reg_2685[15:6] <= 10'b0000000000;
    zext_ln305_1_reg_2693[15:13] <= 3'b000;
    op2_assign_1_cast_cast_reg_2708[15:13] <= 3'b000;
    ram_row_depth_cast35_cast_reg_2714[9:6] <= 4'b0000;
    zext_ln414_reg_2779[16:8] <= 9'b000000000;
    ram_row_depth_cast25_reg_2789[14:6] <= 9'b000000000;
    zext_ln315_reg_2817[31:29] <= 3'b000;
    zext_ln414_1_reg_3053[16:10] <= 7'b0000000;
end

endmodule //edgetracing_accel
