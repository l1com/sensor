// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module edgetracing_accel_TopDown_11_3_1024_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        iBuff_address0,
        iBuff_ce0,
        iBuff_we0,
        iBuff_d0,
        iBuff_q0,
        iBuff_address1,
        iBuff_ce1,
        iBuff_q1,
        iBuff1_address0,
        iBuff1_ce0,
        iBuff1_we0,
        iBuff1_d0,
        iBuff1_q0,
        iBuff1_address1,
        iBuff1_ce1,
        iBuff1_q1,
        iBuff2_address0,
        iBuff2_ce0,
        iBuff2_we0,
        iBuff2_d0,
        iBuff2_q0,
        iBuff2_address1,
        iBuff2_ce1,
        iBuff2_q1,
        iBuff3_address0,
        iBuff3_ce0,
        iBuff3_we0,
        iBuff3_d0,
        iBuff3_q0,
        iBuff3_address1,
        iBuff3_ce1,
        iBuff3_q1,
        iBuff4_address0,
        iBuff4_ce0,
        iBuff4_we0,
        iBuff4_d0,
        iBuff4_q0,
        iBuff4_address1,
        iBuff4_ce1,
        iBuff4_q1,
        iBuff5_address0,
        iBuff5_ce0,
        iBuff5_we0,
        iBuff5_d0,
        iBuff5_q0,
        iBuff5_address1,
        iBuff5_ce1,
        iBuff5_q1,
        iBuff6_address0,
        iBuff6_ce0,
        iBuff6_we0,
        iBuff6_d0,
        iBuff6_q0,
        iBuff6_address1,
        iBuff6_ce1,
        iBuff6_q1,
        iBuff7_address0,
        iBuff7_ce0,
        iBuff7_we0,
        iBuff7_d0,
        iBuff7_q0,
        iBuff7_address1,
        iBuff7_ce1,
        iBuff7_q1,
        iBuff8_address0,
        iBuff8_ce0,
        iBuff8_we0,
        iBuff8_d0,
        iBuff8_q0,
        iBuff8_address1,
        iBuff8_ce1,
        iBuff8_q1,
        iBuff9_address0,
        iBuff9_ce0,
        iBuff9_we0,
        iBuff9_d0,
        iBuff9_q0,
        iBuff9_address1,
        iBuff9_ce1,
        iBuff9_q1,
        iBuff10_address0,
        iBuff10_ce0,
        iBuff10_we0,
        iBuff10_d0,
        iBuff10_q0,
        iBuff10_address1,
        iBuff10_ce1,
        iBuff10_q1,
        bramtotal,
        bdrows,
        ram_row_depth
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state10 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] iBuff_address0;
output   iBuff_ce0;
output   iBuff_we0;
output  [63:0] iBuff_d0;
input  [63:0] iBuff_q0;
output  [9:0] iBuff_address1;
output   iBuff_ce1;
input  [63:0] iBuff_q1;
output  [9:0] iBuff1_address0;
output   iBuff1_ce0;
output   iBuff1_we0;
output  [63:0] iBuff1_d0;
input  [63:0] iBuff1_q0;
output  [9:0] iBuff1_address1;
output   iBuff1_ce1;
input  [63:0] iBuff1_q1;
output  [9:0] iBuff2_address0;
output   iBuff2_ce0;
output   iBuff2_we0;
output  [63:0] iBuff2_d0;
input  [63:0] iBuff2_q0;
output  [9:0] iBuff2_address1;
output   iBuff2_ce1;
input  [63:0] iBuff2_q1;
output  [9:0] iBuff3_address0;
output   iBuff3_ce0;
output   iBuff3_we0;
output  [63:0] iBuff3_d0;
input  [63:0] iBuff3_q0;
output  [9:0] iBuff3_address1;
output   iBuff3_ce1;
input  [63:0] iBuff3_q1;
output  [9:0] iBuff4_address0;
output   iBuff4_ce0;
output   iBuff4_we0;
output  [63:0] iBuff4_d0;
input  [63:0] iBuff4_q0;
output  [9:0] iBuff4_address1;
output   iBuff4_ce1;
input  [63:0] iBuff4_q1;
output  [9:0] iBuff5_address0;
output   iBuff5_ce0;
output   iBuff5_we0;
output  [63:0] iBuff5_d0;
input  [63:0] iBuff5_q0;
output  [9:0] iBuff5_address1;
output   iBuff5_ce1;
input  [63:0] iBuff5_q1;
output  [9:0] iBuff6_address0;
output   iBuff6_ce0;
output   iBuff6_we0;
output  [63:0] iBuff6_d0;
input  [63:0] iBuff6_q0;
output  [9:0] iBuff6_address1;
output   iBuff6_ce1;
input  [63:0] iBuff6_q1;
output  [9:0] iBuff7_address0;
output   iBuff7_ce0;
output   iBuff7_we0;
output  [63:0] iBuff7_d0;
input  [63:0] iBuff7_q0;
output  [9:0] iBuff7_address1;
output   iBuff7_ce1;
input  [63:0] iBuff7_q1;
output  [9:0] iBuff8_address0;
output   iBuff8_ce0;
output   iBuff8_we0;
output  [63:0] iBuff8_d0;
input  [63:0] iBuff8_q0;
output  [9:0] iBuff8_address1;
output   iBuff8_ce1;
input  [63:0] iBuff8_q1;
output  [9:0] iBuff9_address0;
output   iBuff9_ce0;
output   iBuff9_we0;
output  [63:0] iBuff9_d0;
input  [63:0] iBuff9_q0;
output  [9:0] iBuff9_address1;
output   iBuff9_ce1;
input  [63:0] iBuff9_q1;
output  [9:0] iBuff10_address0;
output   iBuff10_ce0;
output   iBuff10_we0;
output  [63:0] iBuff10_d0;
input  [63:0] iBuff10_q0;
output  [9:0] iBuff10_address1;
output   iBuff10_ce1;
input  [63:0] iBuff10_q1;
input  [3:0] bramtotal;
input  [10:0] bdrows;
input  [5:0] ram_row_depth;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] iBuff_address0;
reg iBuff_ce0;
reg iBuff_we0;
reg[63:0] iBuff_d0;
reg iBuff_ce1;
reg[9:0] iBuff1_address0;
reg iBuff1_ce0;
reg iBuff1_we0;
reg iBuff1_ce1;
reg[9:0] iBuff2_address0;
reg iBuff2_ce0;
reg iBuff2_we0;
reg iBuff2_ce1;
reg[9:0] iBuff3_address0;
reg iBuff3_ce0;
reg iBuff3_we0;
reg iBuff3_ce1;
reg[9:0] iBuff4_address0;
reg iBuff4_ce0;
reg iBuff4_we0;
reg iBuff4_ce1;
reg[9:0] iBuff5_address0;
reg iBuff5_ce0;
reg iBuff5_we0;
reg iBuff5_ce1;
reg[9:0] iBuff6_address0;
reg iBuff6_ce0;
reg iBuff6_we0;
reg iBuff6_ce1;
reg[9:0] iBuff7_address0;
reg iBuff7_ce0;
reg iBuff7_we0;
reg iBuff7_ce1;
reg[9:0] iBuff8_address0;
reg iBuff8_ce0;
reg iBuff8_we0;
reg iBuff8_ce1;
reg[9:0] iBuff9_address0;
reg iBuff9_ce0;
reg iBuff9_we0;
reg iBuff9_ce1;
reg[9:0] iBuff10_address0;
reg iBuff10_ce0;
reg iBuff10_we0;
reg iBuff10_ce1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [16:0] el_reg_566;
reg   [63:0] p_Val2_31_reg_577;
reg   [63:0] p_Val2_29_reg_586;
reg   [63:0] p_Val2_27_reg_595;
reg   [63:0] p_Val2_25_reg_604;
reg   [63:0] p_Val2_23_reg_613;
reg   [63:0] p_Val2_21_reg_622;
reg   [63:0] p_Val2_19_reg_631;
reg   [63:0] p_Val2_17_reg_640;
reg   [63:0] p_Val2_15_reg_649;
reg   [63:0] p_Val2_13_reg_658;
reg   [63:0] p_Val2_11_reg_667;
reg   [3:0] arr3_V_10_0_reg_676;
reg   [3:0] arr3_V_9_0_reg_685;
reg   [3:0] arr3_V_8_0_reg_694;
reg   [3:0] arr3_V_7_0_reg_703;
reg   [3:0] arr3_V_6_0_reg_712;
reg   [3:0] arr3_V_5_0_reg_721;
reg   [3:0] arr3_V_4_0_reg_730;
reg   [3:0] arr3_V_3_0_reg_739;
reg   [3:0] arr3_V_2_0_reg_748;
reg   [3:0] arr3_V_1_0_reg_757;
reg   [3:0] arr3_V_0_0_reg_766;
wire   [16:0] grp_fu_2712_p2;
reg   [16:0] mul_reg_2804;
wire    ap_CS_fsm_state4;
wire  signed [17:0] grp_fu_2718_p2;
reg  signed [17:0] mul143_reg_2809;
wire   [3:0] sub145_t_fu_822_p2;
reg   [3:0] sub145_t_reg_2814;
wire  signed [9:0] tmp_cast_fu_837_p1;
reg  signed [9:0] tmp_cast_reg_2874;
wire   [1:0] empty_fu_841_p2;
reg   [1:0] empty_reg_2879;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [3:0] arr3_V_0_fu_853_p1;
wire   [3:0] arr3_V_1_fu_857_p1;
wire   [3:0] arr3_V_2_fu_861_p1;
wire   [3:0] arr3_V_3_fu_865_p1;
wire   [3:0] arr3_V_4_fu_869_p1;
wire   [3:0] arr3_V_5_fu_873_p1;
wire   [3:0] arr3_V_6_fu_877_p1;
wire   [3:0] arr3_V_7_fu_881_p1;
wire   [3:0] arr3_V_8_fu_885_p1;
wire   [3:0] arr3_V_9_fu_889_p1;
wire   [3:0] arr3_V_10_fu_893_p1;
wire   [3:0] j_t617_cast5_fu_897_p1;
reg   [3:0] j_t617_cast5_reg_2998;
wire   [3:0] p_t593_cast_fu_905_p1;
reg   [3:0] p_t593_cast_reg_3004;
wire   [3:0] p_t569_cast_fu_914_p1;
reg   [3:0] p_t569_cast_reg_3010;
wire   [3:0] p_t545_cast_fu_924_p1;
reg   [3:0] p_t545_cast_reg_3016;
wire   [3:0] p_t521_cast_fu_936_p1;
reg   [3:0] p_t521_cast_reg_3022;
wire   [3:0] p_t497_cast_fu_946_p1;
reg   [3:0] p_t497_cast_reg_3028;
wire   [3:0] p_t473_fu_950_p2;
reg   [3:0] p_t473_reg_3034;
wire   [3:0] p_t449_fu_956_p2;
reg   [3:0] p_t449_reg_3040;
wire   [3:0] p_t1_fu_962_p3;
reg   [3:0] p_t1_reg_3046;
wire   [0:0] icmp_ln233_fu_970_p2;
reg   [0:0] icmp_ln233_reg_3052;
wire   [0:0] icmp_ln233_1_fu_976_p2;
reg   [0:0] icmp_ln233_1_reg_3076;
wire   [0:0] or_ln239_fu_982_p2;
reg   [0:0] or_ln239_reg_3110;
wire   [0:0] icmp_ln189_fu_1007_p2;
reg   [0:0] icmp_ln189_reg_3122;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln189_reg_3122_pp0_iter1_reg;
wire   [0:0] cmp144_fu_1012_p2;
reg   [0:0] cmp144_reg_3181;
reg   [0:0] cmp144_reg_3181_pp0_iter1_reg;
wire   [9:0] trunc_ln189_fu_1017_p1;
reg   [9:0] trunc_ln189_reg_3185;
wire   [16:0] add_ln190_fu_1021_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [63:0] arr1_V_0_1_reg_3196;
reg    ap_enable_reg_pp0_iter1;
reg   [63:0] arr1_V_1_1_reg_3201;
reg   [63:0] arr1_V_2_1_reg_3206;
reg   [63:0] arr1_V_3_1_reg_3211;
reg   [63:0] arr1_V_4_1_reg_3216;
reg   [63:0] arr1_V_5_1_reg_3221;
reg   [63:0] arr1_V_6_1_reg_3226;
reg   [63:0] arr1_V_7_1_reg_3231;
reg   [63:0] arr1_V_8_1_reg_3236;
reg   [63:0] arr1_V_9_1_reg_3241;
reg   [63:0] arr1_V_10_1_reg_3246;
wire   [63:0] arr4_V_0_2_fu_1594_p3;
reg   [63:0] arr4_V_0_2_reg_3251;
wire   [3:0] arr3_V_0_3_fu_1684_p3;
wire   [3:0] arr3_V_1_5_fu_1701_p3;
wire   [3:0] arr3_V_2_4_fu_1725_p3;
wire   [3:0] arr3_V_3_4_fu_2121_p3;
wire   [3:0] arr3_V_4_4_fu_2145_p3;
wire   [3:0] arr3_V_5_4_fu_2169_p3;
wire   [3:0] arr3_V_6_4_fu_2574_p3;
wire   [3:0] arr3_V_7_4_fu_2598_p3;
wire   [3:0] arr3_V_10_4_fu_2622_p3;
wire   [3:0] arr3_V_9_4_fu_2636_p3;
wire   [3:0] arr3_V_8_4_fu_2650_p3;
wire   [63:0] p_cast_fu_2662_p1;
reg   [63:0] p_cast_reg_3311;
reg   [9:0] iBuff_addr_2_reg_3316;
wire   [63:0] tmp_1_fu_2685_p13;
reg   [63:0] tmp_1_reg_3321;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter1_state8;
reg    ap_enable_reg_pp0_iter2;
wire    call_ret_PixelProcessNew_1_s_fu_775_ap_ready;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_775_k1;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_775_k2;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_775_k3;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_775_ap_return_0;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_775_ap_return_1;
wire   [67:0] call_ret_PixelProcessNew_1_s_fu_775_ap_return_2;
wire    call_ret1_PixelProcessNew_1_s_fu_782_ap_ready;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_782_k1;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_782_k2;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_782_k3;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_782_ap_return_0;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_782_ap_return_1;
wire   [67:0] call_ret1_PixelProcessNew_1_s_fu_782_ap_return_2;
wire    call_ret2_PixelProcessNew_1_s_fu_789_ap_ready;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_789_k1;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_789_k2;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_789_k3;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_789_ap_return_0;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_789_ap_return_1;
wire   [67:0] call_ret2_PixelProcessNew_1_s_fu_789_ap_return_2;
reg   [1:0] j_reg_554;
wire    ap_CS_fsm_state10;
reg   [63:0] ap_phi_mux_p_Val2_31_phi_fu_580_p4;
wire    ap_block_pp0_stage0;
reg   [63:0] ap_phi_mux_p_Val2_29_phi_fu_589_p4;
reg   [63:0] ap_phi_mux_p_Val2_27_phi_fu_598_p4;
reg   [63:0] ap_phi_mux_p_Val2_25_phi_fu_607_p4;
reg   [63:0] ap_phi_mux_p_Val2_23_phi_fu_616_p4;
reg   [63:0] ap_phi_mux_p_Val2_21_phi_fu_625_p4;
reg   [63:0] ap_phi_mux_p_Val2_19_phi_fu_634_p4;
reg   [63:0] ap_phi_mux_p_Val2_17_phi_fu_643_p4;
reg   [63:0] ap_phi_mux_p_Val2_15_phi_fu_652_p4;
reg   [63:0] ap_phi_mux_p_Val2_13_phi_fu_661_p4;
reg   [63:0] ap_phi_mux_p_Val2_11_phi_fu_670_p4;
wire   [63:0] zext_ln189_fu_988_p1;
wire   [63:0] p_cast7_fu_2680_p1;
wire   [63:0] p_Result_s_504_fu_1037_p3;
wire   [63:0] p_Result_17_fu_1064_p3;
wire   [63:0] p_Result_18_fu_1091_p3;
wire   [63:0] p_Result_19_fu_1114_p3;
wire   [63:0] p_Result_20_fu_1137_p3;
wire   [63:0] p_Result_21_fu_1160_p3;
wire   [63:0] p_Result_22_fu_1183_p3;
wire   [63:0] p_Result_23_fu_1206_p3;
wire   [63:0] p_Result_24_fu_1229_p3;
wire   [63:0] p_Result_25_fu_1252_p3;
wire   [63:0] p_Result_26_fu_1279_p3;
wire   [63:0] arr4_V_1_4_fu_1626_p3;
wire   [63:0] arr4_V_2_10_fu_1659_p3;
wire   [63:0] arr4_V_3_10_fu_2030_p3;
wire   [63:0] arr4_V_4_10_fu_2063_p3;
wire   [63:0] arr4_V_5_10_fu_2096_p3;
wire   [63:0] arr4_V_6_10_fu_2474_p3;
wire   [63:0] arr4_V_7_10_fu_2507_p3;
wire   [63:0] arr4_V_8_10_fu_2549_p3;
wire   [63:0] arr4_V_9_9_fu_2541_p3;
wire   [63:0] arr4_V_10_4_fu_2526_p3;
wire   [11:0] bdrows_cast8_fu_800_p1;
wire  signed [11:0] sub142_fu_812_p2;
wire   [6:0] zext_ln175_fu_828_p1;
wire   [6:0] tmp_fu_831_p2;
wire   [2:0] j_t617_cast_fu_901_p1;
wire   [2:0] p_t569_fu_908_p2;
wire   [2:0] p_t545_fu_918_p2;
wire   [2:0] p_t_fu_928_p3;
wire   [2:0] p_t497_fu_940_p2;
wire   [17:0] zext_ln189_1_fu_1003_p1;
wire   [59:0] p_Result_s_fu_1027_p4;
wire   [59:0] p_Result_2_fu_1054_p4;
wire   [59:0] p_Result_4_fu_1081_p4;
wire   [59:0] p_Result_6_fu_1104_p4;
wire   [59:0] p_Result_9_fu_1127_p4;
wire   [59:0] p_Result_1_fu_1150_p4;
wire   [59:0] p_Result_3_fu_1173_p4;
wire   [59:0] p_Result_7_fu_1196_p4;
wire   [59:0] p_Result_10_fu_1219_p4;
wire   [59:0] p_Result_12_fu_1242_p4;
wire   [59:0] p_Result_14_fu_1269_p4;
wire   [63:0] p_Val2_33_fu_1407_p18;
wire   [3:0] trunc_ln674_fu_1444_p1;
wire   [63:0] phi_ln_fu_1296_p18;
wire   [63:0] p_Val2_34_fu_1457_p18;
wire   [3:0] trunc_ln674_9_fu_1494_p1;
wire   [63:0] phi_ln215_1_fu_1333_p18;
wire   [63:0] p_Val2_35_fu_1507_p18;
wire   [3:0] trunc_ln674_10_fu_1544_p1;
wire   [63:0] phi_ln215_2_fu_1370_p18;
wire   [63:0] arr4_V_2_11_fu_1569_p1;
wire   [63:0] arr4_V_2_fu_1573_p3;
wire   [63:0] arr4_V_3_11_fu_1601_p1;
wire   [63:0] arr4_V_3_fu_1605_p3;
wire   [63:0] arr4_V_2_5_fu_1580_p3;
wire   [63:0] arr4_V_1_2_fu_1587_p3;
wire   [63:0] arr4_V_4_11_fu_1634_p1;
wire   [63:0] arr4_V_4_fu_1638_p3;
wire   [63:0] arr4_V_3_5_fu_1612_p3;
wire   [63:0] arr4_V_2_8_fu_1619_p3;
wire   [3:0] arr3_V_0_4_fu_1667_p4;
wire   [3:0] arr3_V_1_1_fu_1077_p1;
wire   [3:0] arr3_V_0_1_fu_1050_p1;
wire   [3:0] arr3_V_1_6_fu_1691_p4;
wire   [3:0] arr3_V_1_3_fu_1677_p3;
wire   [3:0] arr3_V_2_5_fu_1708_p4;
wire   [3:0] select_ln239_fu_1718_p3;
wire   [63:0] p_Val2_42_fu_1843_p18;
wire   [3:0] trunc_ln674_14_fu_1880_p1;
wire   [63:0] phi_ln215_3_fu_1732_p18;
wire   [63:0] p_Val2_43_fu_1893_p18;
wire   [3:0] trunc_ln674_15_fu_1930_p1;
wire   [63:0] phi_ln215_4_fu_1769_p18;
wire   [63:0] p_Val2_44_fu_1943_p18;
wire   [3:0] trunc_ln674_16_fu_1980_p1;
wire   [63:0] phi_ln215_5_fu_1806_p18;
wire   [63:0] arr4_V_5_11_fu_2005_p1;
wire   [63:0] arr4_V_5_fu_2009_p3;
wire   [63:0] arr4_V_4_5_fu_1645_p3;
wire   [63:0] arr4_V_3_8_fu_1652_p3;
wire   [63:0] arr4_V_6_11_fu_2038_p1;
wire   [63:0] arr4_V_6_fu_2042_p3;
wire   [63:0] arr4_V_5_5_fu_2016_p3;
wire   [63:0] arr4_V_4_8_fu_2023_p3;
wire   [63:0] arr4_V_7_11_fu_2071_p1;
wire   [63:0] arr4_V_7_fu_2075_p3;
wire   [63:0] arr4_V_6_5_fu_2049_p3;
wire   [63:0] arr4_V_5_8_fu_2056_p3;
wire   [3:0] arr3_V_3_5_fu_2104_p4;
wire   [3:0] select_ln237_fu_2114_p3;
wire   [3:0] arr3_V_4_5_fu_2128_p4;
wire   [3:0] select_ln238_fu_2138_p3;
wire   [3:0] arr3_V_5_5_fu_2152_p4;
wire   [3:0] select_ln239_2_fu_2162_p3;
wire   [63:0] p_Val2_51_fu_2287_p18;
wire   [3:0] trunc_ln674_20_fu_2324_p1;
wire   [63:0] phi_ln215_6_fu_2176_p18;
wire   [63:0] p_Val2_52_fu_2337_p18;
wire   [3:0] trunc_ln674_21_fu_2374_p1;
wire   [63:0] phi_ln215_7_fu_2213_p18;
wire   [63:0] p_Val2_53_fu_2387_p18;
wire   [3:0] trunc_ln674_22_fu_2424_p1;
wire   [63:0] phi_ln215_8_fu_2250_p18;
wire   [63:0] arr4_V_8_11_fu_2449_p1;
wire   [63:0] arr4_V_8_fu_2453_p3;
wire   [63:0] arr4_V_7_5_fu_2082_p3;
wire   [63:0] arr4_V_6_8_fu_2089_p3;
wire   [63:0] arr4_V_9_10_fu_2482_p1;
wire   [63:0] arr4_V_9_fu_2486_p3;
wire   [63:0] arr4_V_8_5_fu_2460_p3;
wire   [63:0] arr4_V_7_8_fu_2467_p3;
wire   [63:0] arr4_V_10_5_fu_2515_p1;
wire   [63:0] arr4_V_10_fu_2519_p3;
wire   [63:0] arr4_V_9_6_fu_2493_p3;
wire   [63:0] arr4_V_9_8_fu_2534_p3;
wire   [63:0] arr4_V_8_8_fu_2500_p3;
wire   [3:0] arr3_V_6_5_fu_2557_p4;
wire   [3:0] select_ln237_3_fu_2567_p3;
wire   [3:0] arr3_V_7_5_fu_2581_p4;
wire   [3:0] select_ln238_3_fu_2591_p3;
wire   [3:0] arr3_V_10_1_fu_1292_p1;
wire   [3:0] arr3_V_8_5_fu_2605_p4;
wire   [3:0] arr3_V_10_3_fu_2615_p3;
wire   [3:0] arr3_V_9_1_fu_1265_p1;
wire   [3:0] select_ln239_6_fu_2629_p3;
wire   [3:0] select_ln239_8_fu_2643_p3;
wire   [9:0] empty_505_fu_2657_p2;
wire   [9:0] empty_506_fu_2676_p2;
wire   [63:0] tmp_1_fu_2685_p1;
wire   [5:0] grp_fu_2712_p0;
wire   [10:0] grp_fu_2712_p1;
wire   [5:0] grp_fu_2718_p1;
wire   [0:0] icmp_ln175_fu_847_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_120;
reg    ap_enable_state7_pp0_iter0_stage0;
reg    ap_enable_operation_173;
reg    ap_enable_state8_pp0_iter1_stage0;
reg    ap_enable_operation_369;
reg    ap_enable_state9_pp0_iter2_stage0;
reg    ap_enable_operation_372;
reg    ap_enable_operation_122;
reg    ap_enable_operation_178;
reg    ap_enable_operation_349;
reg    ap_enable_operation_124;
reg    ap_enable_operation_183;
reg    ap_enable_operation_351;
reg    ap_enable_operation_126;
reg    ap_enable_operation_187;
reg    ap_enable_operation_353;
reg    ap_enable_operation_128;
reg    ap_enable_operation_191;
reg    ap_enable_operation_355;
reg    ap_enable_operation_130;
reg    ap_enable_operation_195;
reg    ap_enable_operation_357;
reg    ap_enable_operation_132;
reg    ap_enable_operation_199;
reg    ap_enable_operation_359;
reg    ap_enable_operation_134;
reg    ap_enable_operation_203;
reg    ap_enable_operation_361;
reg    ap_enable_operation_136;
reg    ap_enable_operation_207;
reg    ap_enable_operation_363;
reg    ap_enable_operation_138;
reg    ap_enable_operation_211;
reg    ap_enable_operation_365;
reg    ap_enable_operation_140;
reg    ap_enable_operation_216;
reg    ap_enable_operation_367;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [16:0] grp_fu_2712_p00;
wire   [16:0] grp_fu_2712_p10;
wire   [17:0] grp_fu_2718_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

edgetracing_accel_PixelProcessNew_1_s call_ret_PixelProcessNew_1_s_fu_775(
    .ap_ready(call_ret_PixelProcessNew_1_s_fu_775_ap_ready),
    .k1(call_ret_PixelProcessNew_1_s_fu_775_k1),
    .k2(call_ret_PixelProcessNew_1_s_fu_775_k2),
    .k3(call_ret_PixelProcessNew_1_s_fu_775_k3),
    .ap_return_0(call_ret_PixelProcessNew_1_s_fu_775_ap_return_0),
    .ap_return_1(call_ret_PixelProcessNew_1_s_fu_775_ap_return_1),
    .ap_return_2(call_ret_PixelProcessNew_1_s_fu_775_ap_return_2)
);

edgetracing_accel_PixelProcessNew_1_s call_ret1_PixelProcessNew_1_s_fu_782(
    .ap_ready(call_ret1_PixelProcessNew_1_s_fu_782_ap_ready),
    .k1(call_ret1_PixelProcessNew_1_s_fu_782_k1),
    .k2(call_ret1_PixelProcessNew_1_s_fu_782_k2),
    .k3(call_ret1_PixelProcessNew_1_s_fu_782_k3),
    .ap_return_0(call_ret1_PixelProcessNew_1_s_fu_782_ap_return_0),
    .ap_return_1(call_ret1_PixelProcessNew_1_s_fu_782_ap_return_1),
    .ap_return_2(call_ret1_PixelProcessNew_1_s_fu_782_ap_return_2)
);

edgetracing_accel_PixelProcessNew_1_s call_ret2_PixelProcessNew_1_s_fu_789(
    .ap_ready(call_ret2_PixelProcessNew_1_s_fu_789_ap_ready),
    .k1(call_ret2_PixelProcessNew_1_s_fu_789_k1),
    .k2(call_ret2_PixelProcessNew_1_s_fu_789_k2),
    .k3(call_ret2_PixelProcessNew_1_s_fu_789_k3),
    .ap_return_0(call_ret2_PixelProcessNew_1_s_fu_789_ap_return_0),
    .ap_return_1(call_ret2_PixelProcessNew_1_s_fu_789_ap_return_1),
    .ap_return_2(call_ret2_PixelProcessNew_1_s_fu_789_ap_return_2)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U4(
    .din0(p_Result_s_504_fu_1037_p3),
    .din1(p_Result_17_fu_1064_p3),
    .din2(p_Result_18_fu_1091_p3),
    .din3(p_Result_18_fu_1091_p3),
    .din4(p_Result_18_fu_1091_p3),
    .din5(p_Result_18_fu_1091_p3),
    .din6(p_Result_18_fu_1091_p3),
    .din7(p_Result_18_fu_1091_p3),
    .din8(p_Result_18_fu_1091_p3),
    .din9(p_Result_18_fu_1091_p3),
    .din10(p_Result_18_fu_1091_p3),
    .din11(p_Result_18_fu_1091_p3),
    .din12(p_Result_18_fu_1091_p3),
    .din13(p_Result_18_fu_1091_p3),
    .din14(p_Result_18_fu_1091_p3),
    .din15(p_Result_18_fu_1091_p3),
    .din16(j_t617_cast5_reg_2998),
    .dout(phi_ln_fu_1296_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U5(
    .din0(p_Result_19_fu_1114_p3),
    .din1(p_Result_17_fu_1064_p3),
    .din2(p_Result_18_fu_1091_p3),
    .din3(p_Result_19_fu_1114_p3),
    .din4(p_Result_19_fu_1114_p3),
    .din5(p_Result_19_fu_1114_p3),
    .din6(p_Result_19_fu_1114_p3),
    .din7(p_Result_19_fu_1114_p3),
    .din8(p_Result_19_fu_1114_p3),
    .din9(p_Result_19_fu_1114_p3),
    .din10(p_Result_19_fu_1114_p3),
    .din11(p_Result_19_fu_1114_p3),
    .din12(p_Result_19_fu_1114_p3),
    .din13(p_Result_19_fu_1114_p3),
    .din14(p_Result_19_fu_1114_p3),
    .din15(p_Result_19_fu_1114_p3),
    .din16(p_t593_cast_reg_3004),
    .dout(phi_ln215_1_fu_1333_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U6(
    .din0(p_Result_20_fu_1137_p3),
    .din1(p_Result_20_fu_1137_p3),
    .din2(p_Result_18_fu_1091_p3),
    .din3(p_Result_19_fu_1114_p3),
    .din4(p_Result_20_fu_1137_p3),
    .din5(p_Result_20_fu_1137_p3),
    .din6(p_Result_20_fu_1137_p3),
    .din7(p_Result_20_fu_1137_p3),
    .din8(p_Result_20_fu_1137_p3),
    .din9(p_Result_20_fu_1137_p3),
    .din10(p_Result_20_fu_1137_p3),
    .din11(p_Result_20_fu_1137_p3),
    .din12(p_Result_20_fu_1137_p3),
    .din13(p_Result_20_fu_1137_p3),
    .din14(p_Result_20_fu_1137_p3),
    .din15(p_Result_20_fu_1137_p3),
    .din16(p_t569_cast_reg_3010),
    .dout(phi_ln215_2_fu_1370_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U7(
    .din0(iBuff_q1),
    .din1(iBuff1_q1),
    .din2(iBuff2_q1),
    .din3(iBuff2_q1),
    .din4(iBuff2_q1),
    .din5(iBuff2_q1),
    .din6(iBuff2_q1),
    .din7(iBuff2_q1),
    .din8(iBuff2_q1),
    .din9(iBuff2_q1),
    .din10(iBuff2_q1),
    .din11(iBuff2_q1),
    .din12(iBuff2_q1),
    .din13(iBuff2_q1),
    .din14(iBuff2_q1),
    .din15(iBuff2_q1),
    .din16(j_t617_cast5_reg_2998),
    .dout(p_Val2_33_fu_1407_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U8(
    .din0(iBuff3_q1),
    .din1(iBuff1_q1),
    .din2(iBuff2_q1),
    .din3(iBuff3_q1),
    .din4(iBuff3_q1),
    .din5(iBuff3_q1),
    .din6(iBuff3_q1),
    .din7(iBuff3_q1),
    .din8(iBuff3_q1),
    .din9(iBuff3_q1),
    .din10(iBuff3_q1),
    .din11(iBuff3_q1),
    .din12(iBuff3_q1),
    .din13(iBuff3_q1),
    .din14(iBuff3_q1),
    .din15(iBuff3_q1),
    .din16(p_t593_cast_reg_3004),
    .dout(p_Val2_34_fu_1457_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U9(
    .din0(iBuff4_q1),
    .din1(iBuff4_q1),
    .din2(iBuff2_q1),
    .din3(iBuff3_q1),
    .din4(iBuff4_q1),
    .din5(iBuff4_q1),
    .din6(iBuff4_q1),
    .din7(iBuff4_q1),
    .din8(iBuff4_q1),
    .din9(iBuff4_q1),
    .din10(iBuff4_q1),
    .din11(iBuff4_q1),
    .din12(iBuff4_q1),
    .din13(iBuff4_q1),
    .din14(iBuff4_q1),
    .din15(iBuff4_q1),
    .din16(p_t569_cast_reg_3010),
    .dout(p_Val2_35_fu_1507_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U10(
    .din0(p_Result_21_fu_1160_p3),
    .din1(p_Result_21_fu_1160_p3),
    .din2(p_Result_21_fu_1160_p3),
    .din3(p_Result_19_fu_1114_p3),
    .din4(p_Result_20_fu_1137_p3),
    .din5(p_Result_21_fu_1160_p3),
    .din6(p_Result_21_fu_1160_p3),
    .din7(p_Result_21_fu_1160_p3),
    .din8(p_Result_21_fu_1160_p3),
    .din9(p_Result_21_fu_1160_p3),
    .din10(p_Result_21_fu_1160_p3),
    .din11(p_Result_21_fu_1160_p3),
    .din12(p_Result_21_fu_1160_p3),
    .din13(p_Result_21_fu_1160_p3),
    .din14(p_Result_21_fu_1160_p3),
    .din15(p_Result_21_fu_1160_p3),
    .din16(p_t545_cast_reg_3016),
    .dout(phi_ln215_3_fu_1732_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U11(
    .din0(p_Result_22_fu_1183_p3),
    .din1(p_Result_22_fu_1183_p3),
    .din2(p_Result_22_fu_1183_p3),
    .din3(p_Result_22_fu_1183_p3),
    .din4(p_Result_20_fu_1137_p3),
    .din5(p_Result_21_fu_1160_p3),
    .din6(p_Result_22_fu_1183_p3),
    .din7(p_Result_22_fu_1183_p3),
    .din8(p_Result_22_fu_1183_p3),
    .din9(p_Result_22_fu_1183_p3),
    .din10(p_Result_22_fu_1183_p3),
    .din11(p_Result_22_fu_1183_p3),
    .din12(p_Result_22_fu_1183_p3),
    .din13(p_Result_22_fu_1183_p3),
    .din14(p_Result_22_fu_1183_p3),
    .din15(p_Result_22_fu_1183_p3),
    .din16(p_t521_cast_reg_3022),
    .dout(phi_ln215_4_fu_1769_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U12(
    .din0(p_Result_23_fu_1206_p3),
    .din1(p_Result_23_fu_1206_p3),
    .din2(p_Result_23_fu_1206_p3),
    .din3(p_Result_23_fu_1206_p3),
    .din4(p_Result_23_fu_1206_p3),
    .din5(p_Result_21_fu_1160_p3),
    .din6(p_Result_22_fu_1183_p3),
    .din7(p_Result_23_fu_1206_p3),
    .din8(p_Result_23_fu_1206_p3),
    .din9(p_Result_23_fu_1206_p3),
    .din10(p_Result_23_fu_1206_p3),
    .din11(p_Result_23_fu_1206_p3),
    .din12(p_Result_23_fu_1206_p3),
    .din13(p_Result_23_fu_1206_p3),
    .din14(p_Result_23_fu_1206_p3),
    .din15(p_Result_23_fu_1206_p3),
    .din16(p_t497_cast_reg_3028),
    .dout(phi_ln215_5_fu_1806_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U13(
    .din0(iBuff5_q1),
    .din1(iBuff5_q1),
    .din2(iBuff5_q1),
    .din3(iBuff3_q1),
    .din4(iBuff4_q1),
    .din5(iBuff5_q1),
    .din6(iBuff5_q1),
    .din7(iBuff5_q1),
    .din8(iBuff5_q1),
    .din9(iBuff5_q1),
    .din10(iBuff5_q1),
    .din11(iBuff5_q1),
    .din12(iBuff5_q1),
    .din13(iBuff5_q1),
    .din14(iBuff5_q1),
    .din15(iBuff5_q1),
    .din16(p_t545_cast_reg_3016),
    .dout(p_Val2_42_fu_1843_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U14(
    .din0(iBuff6_q1),
    .din1(iBuff6_q1),
    .din2(iBuff6_q1),
    .din3(iBuff6_q1),
    .din4(iBuff4_q1),
    .din5(iBuff5_q1),
    .din6(iBuff6_q1),
    .din7(iBuff6_q1),
    .din8(iBuff6_q1),
    .din9(iBuff6_q1),
    .din10(iBuff6_q1),
    .din11(iBuff6_q1),
    .din12(iBuff6_q1),
    .din13(iBuff6_q1),
    .din14(iBuff6_q1),
    .din15(iBuff6_q1),
    .din16(p_t521_cast_reg_3022),
    .dout(p_Val2_43_fu_1893_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U15(
    .din0(iBuff7_q1),
    .din1(iBuff7_q1),
    .din2(iBuff7_q1),
    .din3(iBuff7_q1),
    .din4(iBuff7_q1),
    .din5(iBuff5_q1),
    .din6(iBuff6_q1),
    .din7(iBuff7_q1),
    .din8(iBuff7_q1),
    .din9(iBuff7_q1),
    .din10(iBuff7_q1),
    .din11(iBuff7_q1),
    .din12(iBuff7_q1),
    .din13(iBuff7_q1),
    .din14(iBuff7_q1),
    .din15(iBuff7_q1),
    .din16(p_t497_cast_reg_3028),
    .dout(p_Val2_44_fu_1943_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U16(
    .din0(p_Result_24_fu_1229_p3),
    .din1(p_Result_24_fu_1229_p3),
    .din2(p_Result_24_fu_1229_p3),
    .din3(p_Result_24_fu_1229_p3),
    .din4(p_Result_24_fu_1229_p3),
    .din5(p_Result_24_fu_1229_p3),
    .din6(p_Result_22_fu_1183_p3),
    .din7(p_Result_23_fu_1206_p3),
    .din8(p_Result_24_fu_1229_p3),
    .din9(p_Result_24_fu_1229_p3),
    .din10(p_Result_24_fu_1229_p3),
    .din11(p_Result_24_fu_1229_p3),
    .din12(p_Result_24_fu_1229_p3),
    .din13(p_Result_24_fu_1229_p3),
    .din14(p_Result_24_fu_1229_p3),
    .din15(p_Result_24_fu_1229_p3),
    .din16(p_t473_reg_3034),
    .dout(phi_ln215_6_fu_2176_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U17(
    .din0(p_Result_25_fu_1252_p3),
    .din1(p_Result_25_fu_1252_p3),
    .din2(p_Result_25_fu_1252_p3),
    .din3(p_Result_25_fu_1252_p3),
    .din4(p_Result_25_fu_1252_p3),
    .din5(p_Result_25_fu_1252_p3),
    .din6(p_Result_25_fu_1252_p3),
    .din7(p_Result_23_fu_1206_p3),
    .din8(p_Result_24_fu_1229_p3),
    .din9(p_Result_25_fu_1252_p3),
    .din10(p_Result_25_fu_1252_p3),
    .din11(p_Result_25_fu_1252_p3),
    .din12(p_Result_25_fu_1252_p3),
    .din13(p_Result_25_fu_1252_p3),
    .din14(p_Result_25_fu_1252_p3),
    .din15(p_Result_25_fu_1252_p3),
    .din16(p_t449_reg_3040),
    .dout(phi_ln215_7_fu_2213_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U18(
    .din0(p_Result_26_fu_1279_p3),
    .din1(p_Result_26_fu_1279_p3),
    .din2(p_Result_26_fu_1279_p3),
    .din3(p_Result_26_fu_1279_p3),
    .din4(p_Result_26_fu_1279_p3),
    .din5(p_Result_26_fu_1279_p3),
    .din6(p_Result_26_fu_1279_p3),
    .din7(p_Result_26_fu_1279_p3),
    .din8(p_Result_24_fu_1229_p3),
    .din9(p_Result_25_fu_1252_p3),
    .din10(p_Result_26_fu_1279_p3),
    .din11(p_Result_26_fu_1279_p3),
    .din12(p_Result_26_fu_1279_p3),
    .din13(p_Result_26_fu_1279_p3),
    .din14(p_Result_26_fu_1279_p3),
    .din15(p_Result_26_fu_1279_p3),
    .din16(p_t1_reg_3046),
    .dout(phi_ln215_8_fu_2250_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U19(
    .din0(iBuff8_q1),
    .din1(iBuff8_q1),
    .din2(iBuff8_q1),
    .din3(iBuff8_q1),
    .din4(iBuff8_q1),
    .din5(iBuff8_q1),
    .din6(iBuff6_q1),
    .din7(iBuff7_q1),
    .din8(iBuff8_q1),
    .din9(iBuff8_q1),
    .din10(iBuff8_q1),
    .din11(iBuff8_q1),
    .din12(iBuff8_q1),
    .din13(iBuff8_q1),
    .din14(iBuff8_q1),
    .din15(iBuff8_q1),
    .din16(p_t473_reg_3034),
    .dout(p_Val2_51_fu_2287_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U20(
    .din0(iBuff9_q1),
    .din1(iBuff9_q1),
    .din2(iBuff9_q1),
    .din3(iBuff9_q1),
    .din4(iBuff9_q1),
    .din5(iBuff9_q1),
    .din6(iBuff9_q1),
    .din7(iBuff7_q1),
    .din8(iBuff8_q1),
    .din9(iBuff9_q1),
    .din10(iBuff9_q1),
    .din11(iBuff9_q1),
    .din12(iBuff9_q1),
    .din13(iBuff9_q1),
    .din14(iBuff9_q1),
    .din15(iBuff9_q1),
    .din16(p_t449_reg_3040),
    .dout(p_Val2_52_fu_2337_p18)
);

edgetracing_accel_mux_164_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_164_64_1_1_U21(
    .din0(iBuff10_q1),
    .din1(iBuff10_q1),
    .din2(iBuff10_q1),
    .din3(iBuff10_q1),
    .din4(iBuff10_q1),
    .din5(iBuff10_q1),
    .din6(iBuff10_q1),
    .din7(iBuff10_q1),
    .din8(iBuff8_q1),
    .din9(iBuff9_q1),
    .din10(iBuff10_q1),
    .din11(iBuff10_q1),
    .din12(iBuff10_q1),
    .din13(iBuff10_q1),
    .din14(iBuff10_q1),
    .din15(iBuff10_q1),
    .din16(p_t1_reg_3046),
    .dout(p_Val2_53_fu_2387_p18)
);

edgetracing_accel_mux_114_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
mux_114_64_1_1_U22(
    .din0(tmp_1_fu_2685_p1),
    .din1(arr4_V_1_4_fu_1626_p3),
    .din2(arr4_V_2_10_fu_1659_p3),
    .din3(arr4_V_3_10_fu_2030_p3),
    .din4(arr4_V_4_10_fu_2063_p3),
    .din5(arr4_V_5_10_fu_2096_p3),
    .din6(arr4_V_6_10_fu_2474_p3),
    .din7(arr4_V_7_10_fu_2507_p3),
    .din8(arr4_V_8_10_fu_2549_p3),
    .din9(arr4_V_9_9_fu_2541_p3),
    .din10(arr4_V_10_4_fu_2526_p3),
    .din11(sub145_t_reg_2814),
    .dout(tmp_1_fu_2685_p13)
);

edgetracing_accel_mul_mul_6ns_11ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 17 ))
mul_mul_6ns_11ns_17_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2712_p0),
    .din1(grp_fu_2712_p1),
    .ce(1'b1),
    .dout(grp_fu_2712_p2)
);

edgetracing_accel_mul_mul_12s_6ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 18 ))
mul_mul_12s_6ns_18_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub142_fu_812_p2),
    .din1(grp_fu_2718_p1),
    .ce(1'b1),
    .dout(grp_fu_2718_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state8)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state8))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_0_0_reg_766 <= arr3_V_0_3_fu_1684_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_0_0_reg_766 <= arr3_V_0_fu_853_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_10_0_reg_676 <= arr3_V_10_4_fu_2622_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_10_0_reg_676 <= arr3_V_10_fu_893_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_1_0_reg_757 <= arr3_V_1_5_fu_1701_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_1_0_reg_757 <= arr3_V_1_fu_857_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_2_0_reg_748 <= arr3_V_2_4_fu_1725_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_2_0_reg_748 <= arr3_V_2_fu_861_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_3_0_reg_739 <= arr3_V_3_4_fu_2121_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_3_0_reg_739 <= arr3_V_3_fu_865_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_4_0_reg_730 <= arr3_V_4_4_fu_2145_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_4_0_reg_730 <= arr3_V_4_fu_869_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_5_0_reg_721 <= arr3_V_5_4_fu_2169_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_5_0_reg_721 <= arr3_V_5_fu_873_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_6_0_reg_712 <= arr3_V_6_4_fu_2574_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_6_0_reg_712 <= arr3_V_6_fu_877_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_7_0_reg_703 <= arr3_V_7_4_fu_2598_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_7_0_reg_703 <= arr3_V_7_fu_881_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_8_0_reg_694 <= arr3_V_8_4_fu_2650_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_8_0_reg_694 <= arr3_V_8_fu_885_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr3_V_9_0_reg_685 <= arr3_V_9_4_fu_2636_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        arr3_V_9_0_reg_685 <= arr3_V_9_fu_889_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_fu_1007_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        el_reg_566 <= add_ln190_fu_1021_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        el_reg_566 <= 17'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_reg_554 <= empty_reg_2879;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_554 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_11_reg_667 <= arr1_V_0_1_reg_3196;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_11_reg_667 <= iBuff_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_13_reg_658 <= arr1_V_1_1_reg_3201;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_13_reg_658 <= iBuff1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_15_reg_649 <= arr1_V_2_1_reg_3206;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_15_reg_649 <= iBuff2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_17_reg_640 <= arr1_V_3_1_reg_3211;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_17_reg_640 <= iBuff3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_19_reg_631 <= arr1_V_4_1_reg_3216;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_19_reg_631 <= iBuff4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_21_reg_622 <= arr1_V_5_1_reg_3221;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_21_reg_622 <= iBuff5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_23_reg_613 <= arr1_V_6_1_reg_3226;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_23_reg_613 <= iBuff6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_25_reg_604 <= arr1_V_7_1_reg_3231;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_25_reg_604 <= iBuff7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_27_reg_595 <= arr1_V_8_1_reg_3236;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_27_reg_595 <= iBuff8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_29_reg_586 <= arr1_V_9_1_reg_3241;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_29_reg_586 <= iBuff9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_31_reg_577 <= arr1_V_10_1_reg_3246;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_31_reg_577 <= iBuff10_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr1_V_0_1_reg_3196 <= iBuff_q1;
        arr1_V_10_1_reg_3246 <= iBuff10_q1;
        arr1_V_1_1_reg_3201 <= iBuff1_q1;
        arr1_V_2_1_reg_3206 <= iBuff2_q1;
        arr1_V_3_1_reg_3211 <= iBuff3_q1;
        arr1_V_4_1_reg_3216 <= iBuff4_q1;
        arr1_V_5_1_reg_3221 <= iBuff5_q1;
        arr1_V_6_1_reg_3226 <= iBuff6_q1;
        arr1_V_7_1_reg_3231 <= iBuff7_q1;
        arr1_V_8_1_reg_3236 <= iBuff8_q1;
        arr1_V_9_1_reg_3241 <= iBuff9_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arr4_V_0_2_reg_3251 <= arr4_V_0_2_fu_1594_p3;
        iBuff_addr_2_reg_3316 <= p_cast7_fu_2680_p1;
        p_cast_reg_3311[9 : 0] <= p_cast_fu_2662_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_fu_1007_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp144_reg_3181 <= cmp144_fu_1012_p2;
        trunc_ln189_reg_3185 <= trunc_ln189_fu_1017_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp144_reg_3181_pp0_iter1_reg <= cmp144_reg_3181;
        icmp_ln189_reg_3122 <= icmp_ln189_fu_1007_p2;
        icmp_ln189_reg_3122_pp0_iter1_reg <= icmp_ln189_reg_3122;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_reg_2879 <= empty_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln233_1_reg_3076 <= icmp_ln233_1_fu_976_p2;
        icmp_ln233_reg_3052 <= icmp_ln233_fu_970_p2;
        j_t617_cast5_reg_2998[1 : 0] <= j_t617_cast5_fu_897_p1[1 : 0];
        or_ln239_reg_3110 <= or_ln239_fu_982_p2;
        p_t1_reg_3046[1 : 0] <= p_t1_fu_962_p3[1 : 0];
        p_t449_reg_3040 <= p_t449_fu_956_p2;
        p_t473_reg_3034 <= p_t473_fu_950_p2;
        p_t497_cast_reg_3028[2 : 0] <= p_t497_cast_fu_946_p1[2 : 0];
        p_t521_cast_reg_3022[1 : 0] <= p_t521_cast_fu_936_p1[1 : 0];
        p_t545_cast_reg_3016[2 : 0] <= p_t545_cast_fu_924_p1[2 : 0];
        p_t569_cast_reg_3010[2 : 0] <= p_t569_cast_fu_914_p1[2 : 0];
        p_t593_cast_reg_3004[1 : 0] <= p_t593_cast_fu_905_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul143_reg_2809 <= grp_fu_2718_p2;
        mul_reg_2804 <= grp_fu_2712_p2;
        sub145_t_reg_2814 <= sub145_t_fu_822_p2;
        tmp_cast_reg_2874 <= tmp_cast_fu_837_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp144_reg_3181 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_3321 <= tmp_1_fu_2685_p13;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln189_fu_1007_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln175_fu_847_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_11_phi_fu_670_p4 = arr1_V_0_1_reg_3196;
    end else begin
        ap_phi_mux_p_Val2_11_phi_fu_670_p4 = p_Val2_11_reg_667;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_13_phi_fu_661_p4 = arr1_V_1_1_reg_3201;
    end else begin
        ap_phi_mux_p_Val2_13_phi_fu_661_p4 = p_Val2_13_reg_658;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_15_phi_fu_652_p4 = arr1_V_2_1_reg_3206;
    end else begin
        ap_phi_mux_p_Val2_15_phi_fu_652_p4 = p_Val2_15_reg_649;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_17_phi_fu_643_p4 = arr1_V_3_1_reg_3211;
    end else begin
        ap_phi_mux_p_Val2_17_phi_fu_643_p4 = p_Val2_17_reg_640;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_19_phi_fu_634_p4 = arr1_V_4_1_reg_3216;
    end else begin
        ap_phi_mux_p_Val2_19_phi_fu_634_p4 = p_Val2_19_reg_631;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_21_phi_fu_625_p4 = arr1_V_5_1_reg_3221;
    end else begin
        ap_phi_mux_p_Val2_21_phi_fu_625_p4 = p_Val2_21_reg_622;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_23_phi_fu_616_p4 = arr1_V_6_1_reg_3226;
    end else begin
        ap_phi_mux_p_Val2_23_phi_fu_616_p4 = p_Val2_23_reg_613;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_25_phi_fu_607_p4 = arr1_V_7_1_reg_3231;
    end else begin
        ap_phi_mux_p_Val2_25_phi_fu_607_p4 = p_Val2_25_reg_604;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_27_phi_fu_598_p4 = arr1_V_8_1_reg_3236;
    end else begin
        ap_phi_mux_p_Val2_27_phi_fu_598_p4 = p_Val2_27_reg_595;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_29_phi_fu_589_p4 = arr1_V_9_1_reg_3241;
    end else begin
        ap_phi_mux_p_Val2_29_phi_fu_589_p4 = p_Val2_29_reg_586;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln189_reg_3122_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_Val2_31_phi_fu_580_p4 = arr1_V_10_1_reg_3246;
    end else begin
        ap_phi_mux_p_Val2_31_phi_fu_580_p4 = p_Val2_31_reg_577;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln175_fu_847_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff10_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff10_address0 = 64'd0;
    end else begin
        iBuff10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff10_ce0 = 1'b1;
    end else begin
        iBuff10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff10_ce1 = 1'b1;
    end else begin
        iBuff10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff10_we0 = 1'b1;
    end else begin
        iBuff10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff1_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff1_address0 = 64'd0;
    end else begin
        iBuff1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff1_ce0 = 1'b1;
    end else begin
        iBuff1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff1_ce1 = 1'b1;
    end else begin
        iBuff1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff1_we0 = 1'b1;
    end else begin
        iBuff1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff2_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff2_address0 = 64'd0;
    end else begin
        iBuff2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff2_ce0 = 1'b1;
    end else begin
        iBuff2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff2_ce1 = 1'b1;
    end else begin
        iBuff2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff2_we0 = 1'b1;
    end else begin
        iBuff2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff3_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff3_address0 = 64'd0;
    end else begin
        iBuff3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff3_ce0 = 1'b1;
    end else begin
        iBuff3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff3_ce1 = 1'b1;
    end else begin
        iBuff3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff3_we0 = 1'b1;
    end else begin
        iBuff3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff4_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff4_address0 = 64'd0;
    end else begin
        iBuff4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff4_ce0 = 1'b1;
    end else begin
        iBuff4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff4_ce1 = 1'b1;
    end else begin
        iBuff4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff4_we0 = 1'b1;
    end else begin
        iBuff4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff5_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff5_address0 = 64'd0;
    end else begin
        iBuff5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff5_ce0 = 1'b1;
    end else begin
        iBuff5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff5_ce1 = 1'b1;
    end else begin
        iBuff5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff5_we0 = 1'b1;
    end else begin
        iBuff5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff6_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff6_address0 = 64'd0;
    end else begin
        iBuff6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff6_ce0 = 1'b1;
    end else begin
        iBuff6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff6_ce1 = 1'b1;
    end else begin
        iBuff6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff6_we0 = 1'b1;
    end else begin
        iBuff6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff7_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff7_address0 = 64'd0;
    end else begin
        iBuff7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff7_ce0 = 1'b1;
    end else begin
        iBuff7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff7_ce1 = 1'b1;
    end else begin
        iBuff7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff7_we0 = 1'b1;
    end else begin
        iBuff7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff8_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff8_address0 = 64'd0;
    end else begin
        iBuff8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff8_ce0 = 1'b1;
    end else begin
        iBuff8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff8_ce1 = 1'b1;
    end else begin
        iBuff8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff8_we0 = 1'b1;
    end else begin
        iBuff8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff9_address0 = p_cast_fu_2662_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff9_address0 = 64'd0;
    end else begin
        iBuff9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        iBuff9_ce0 = 1'b1;
    end else begin
        iBuff9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff9_ce1 = 1'b1;
    end else begin
        iBuff9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln189_reg_3122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff9_we0 = 1'b1;
    end else begin
        iBuff9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (cmp144_reg_3181_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        iBuff_address0 = p_cast_reg_3311;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (cmp144_reg_3181_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        iBuff_address0 = iBuff_addr_2_reg_3316;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        iBuff_address0 = 64'd0;
    end else begin
        iBuff_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (cmp144_reg_3181_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (cmp144_reg_3181_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        iBuff_ce0 = 1'b1;
    end else begin
        iBuff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iBuff_ce1 = 1'b1;
    end else begin
        iBuff_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((cmp144_reg_3181_pp0_iter1_reg == 1'd1)) begin
            iBuff_d0 = arr4_V_0_2_reg_3251;
        end else if ((cmp144_reg_3181_pp0_iter1_reg == 1'd0)) begin
            iBuff_d0 = tmp_1_reg_3321;
        end else begin
            iBuff_d0 = 'bx;
        end
    end else begin
        iBuff_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (cmp144_reg_3181_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (cmp144_reg_3181_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        iBuff_we0 = 1'b1;
    end else begin
        iBuff_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln175_fu_847_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln190_fu_1021_p2 = (el_reg_566 + 17'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_120 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_122 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_124 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_126 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_128 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_130 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_132 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_134 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_136 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_138 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_140 = (icmp_ln189_fu_1007_p2 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_173 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_178 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_183 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_187 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_191 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_195 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_199 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_203 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_207 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_211 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_216 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_349 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_351 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_353 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_355 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_357 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_359 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_361 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_363 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_365 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_367 = (icmp_ln189_reg_3122 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_369 = (cmp144_reg_3181_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_372 = (cmp144_reg_3181_pp0_iter1_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state7_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state8_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign arr3_V_0_1_fu_1050_p1 = iBuff_q1[3:0];

assign arr3_V_0_3_fu_1684_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_0_4_fu_1667_p4 : arr3_V_0_1_fu_1050_p1);

assign arr3_V_0_4_fu_1667_p4 = {{call_ret_PixelProcessNew_1_s_fu_775_ap_return_0[67:64]}};

assign arr3_V_0_fu_853_p1 = iBuff_q0[3:0];

assign arr3_V_10_1_fu_1292_p1 = iBuff10_q1[3:0];

assign arr3_V_10_3_fu_2615_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr3_V_10_1_fu_1292_p1 : arr3_V_8_5_fu_2605_p4);

assign arr3_V_10_4_fu_2622_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_10_1_fu_1292_p1 : arr3_V_10_3_fu_2615_p3);

assign arr3_V_10_fu_893_p1 = iBuff10_q0[3:0];

assign arr3_V_1_1_fu_1077_p1 = iBuff1_q1[3:0];

assign arr3_V_1_3_fu_1677_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr3_V_0_4_fu_1667_p4 : arr3_V_1_1_fu_1077_p1);

assign arr3_V_1_5_fu_1701_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_1_6_fu_1691_p4 : arr3_V_1_3_fu_1677_p3);

assign arr3_V_1_6_fu_1691_p4 = {{call_ret_PixelProcessNew_1_s_fu_775_ap_return_1[67:64]}};

assign arr3_V_1_fu_857_p1 = iBuff1_q0[3:0];

assign arr3_V_2_4_fu_1725_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln239_fu_1718_p3 : arr3_V_0_4_fu_1667_p4);

assign arr3_V_2_5_fu_1708_p4 = {{call_ret_PixelProcessNew_1_s_fu_775_ap_return_2[67:64]}};

assign arr3_V_2_fu_861_p1 = iBuff2_q0[3:0];

assign arr3_V_3_4_fu_2121_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln237_fu_2114_p3 : arr3_V_1_6_fu_1691_p4);

assign arr3_V_3_5_fu_2104_p4 = {{call_ret1_PixelProcessNew_1_s_fu_782_ap_return_0[67:64]}};

assign arr3_V_3_fu_865_p1 = iBuff3_q0[3:0];

assign arr3_V_4_4_fu_2145_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln238_fu_2138_p3 : arr3_V_2_5_fu_1708_p4);

assign arr3_V_4_5_fu_2128_p4 = {{call_ret1_PixelProcessNew_1_s_fu_782_ap_return_1[67:64]}};

assign arr3_V_4_fu_869_p1 = iBuff4_q0[3:0];

assign arr3_V_5_4_fu_2169_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln239_2_fu_2162_p3 : arr3_V_3_5_fu_2104_p4);

assign arr3_V_5_5_fu_2152_p4 = {{call_ret1_PixelProcessNew_1_s_fu_782_ap_return_2[67:64]}};

assign arr3_V_5_fu_873_p1 = iBuff5_q0[3:0];

assign arr3_V_6_4_fu_2574_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln237_3_fu_2567_p3 : arr3_V_4_5_fu_2128_p4);

assign arr3_V_6_5_fu_2557_p4 = {{call_ret2_PixelProcessNew_1_s_fu_789_ap_return_0[67:64]}};

assign arr3_V_6_fu_877_p1 = iBuff6_q0[3:0];

assign arr3_V_7_4_fu_2598_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln238_3_fu_2591_p3 : arr3_V_5_5_fu_2152_p4);

assign arr3_V_7_5_fu_2581_p4 = {{call_ret2_PixelProcessNew_1_s_fu_789_ap_return_1[67:64]}};

assign arr3_V_7_fu_881_p1 = iBuff7_q0[3:0];

assign arr3_V_8_4_fu_2650_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln239_8_fu_2643_p3 : arr3_V_6_5_fu_2557_p4);

assign arr3_V_8_5_fu_2605_p4 = {{call_ret2_PixelProcessNew_1_s_fu_789_ap_return_2[67:64]}};

assign arr3_V_8_fu_885_p1 = iBuff8_q0[3:0];

assign arr3_V_9_1_fu_1265_p1 = iBuff9_q1[3:0];

assign arr3_V_9_4_fu_2636_p3 = ((or_ln239_reg_3110[0:0] == 1'b1) ? select_ln239_6_fu_2629_p3 : arr3_V_7_5_fu_2581_p4);

assign arr3_V_9_fu_889_p1 = iBuff9_q0[3:0];

assign arr4_V_0_2_fu_1594_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_2_11_fu_1569_p1 : p_Result_s_504_fu_1037_p3);

assign arr4_V_10_4_fu_2526_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_26_fu_1279_p3 : arr4_V_10_fu_2519_p3);

assign arr4_V_10_5_fu_2515_p1 = call_ret2_PixelProcessNew_1_s_fu_789_ap_return_2[63:0];

assign arr4_V_10_fu_2519_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_26_fu_1279_p3 : arr4_V_10_5_fu_2515_p1);

assign arr4_V_1_2_fu_1587_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_2_11_fu_1569_p1 : p_Result_17_fu_1064_p3);

assign arr4_V_1_4_fu_1626_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_3_11_fu_1601_p1 : arr4_V_1_2_fu_1587_p3);

assign arr4_V_2_10_fu_1659_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_4_11_fu_1634_p1 : arr4_V_2_8_fu_1619_p3);

assign arr4_V_2_11_fu_1569_p1 = call_ret_PixelProcessNew_1_s_fu_775_ap_return_0[63:0];

assign arr4_V_2_5_fu_1580_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_18_fu_1091_p3 : arr4_V_2_fu_1573_p3);

assign arr4_V_2_8_fu_1619_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_3_11_fu_1601_p1 : arr4_V_2_5_fu_1580_p3);

assign arr4_V_2_fu_1573_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_18_fu_1091_p3 : arr4_V_2_11_fu_1569_p1);

assign arr4_V_3_10_fu_2030_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_5_11_fu_2005_p1 : arr4_V_3_8_fu_1652_p3);

assign arr4_V_3_11_fu_1601_p1 = call_ret_PixelProcessNew_1_s_fu_775_ap_return_1[63:0];

assign arr4_V_3_5_fu_1612_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_19_fu_1114_p3 : arr4_V_3_fu_1605_p3);

assign arr4_V_3_8_fu_1652_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_4_11_fu_1634_p1 : arr4_V_3_5_fu_1612_p3);

assign arr4_V_3_fu_1605_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_19_fu_1114_p3 : arr4_V_3_11_fu_1601_p1);

assign arr4_V_4_10_fu_2063_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_6_11_fu_2038_p1 : arr4_V_4_8_fu_2023_p3);

assign arr4_V_4_11_fu_1634_p1 = call_ret_PixelProcessNew_1_s_fu_775_ap_return_2[63:0];

assign arr4_V_4_5_fu_1645_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_20_fu_1137_p3 : arr4_V_4_fu_1638_p3);

assign arr4_V_4_8_fu_2023_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_5_11_fu_2005_p1 : arr4_V_4_5_fu_1645_p3);

assign arr4_V_4_fu_1638_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_20_fu_1137_p3 : arr4_V_4_11_fu_1634_p1);

assign arr4_V_5_10_fu_2096_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_7_11_fu_2071_p1 : arr4_V_5_8_fu_2056_p3);

assign arr4_V_5_11_fu_2005_p1 = call_ret1_PixelProcessNew_1_s_fu_782_ap_return_0[63:0];

assign arr4_V_5_5_fu_2016_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_21_fu_1160_p3 : arr4_V_5_fu_2009_p3);

assign arr4_V_5_8_fu_2056_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_6_11_fu_2038_p1 : arr4_V_5_5_fu_2016_p3);

assign arr4_V_5_fu_2009_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_21_fu_1160_p3 : arr4_V_5_11_fu_2005_p1);

assign arr4_V_6_10_fu_2474_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_8_11_fu_2449_p1 : arr4_V_6_8_fu_2089_p3);

assign arr4_V_6_11_fu_2038_p1 = call_ret1_PixelProcessNew_1_s_fu_782_ap_return_1[63:0];

assign arr4_V_6_5_fu_2049_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_22_fu_1183_p3 : arr4_V_6_fu_2042_p3);

assign arr4_V_6_8_fu_2089_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_7_11_fu_2071_p1 : arr4_V_6_5_fu_2049_p3);

assign arr4_V_6_fu_2042_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_22_fu_1183_p3 : arr4_V_6_11_fu_2038_p1);

assign arr4_V_7_10_fu_2507_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_9_10_fu_2482_p1 : arr4_V_7_8_fu_2467_p3);

assign arr4_V_7_11_fu_2071_p1 = call_ret1_PixelProcessNew_1_s_fu_782_ap_return_2[63:0];

assign arr4_V_7_5_fu_2082_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_23_fu_1206_p3 : arr4_V_7_fu_2075_p3);

assign arr4_V_7_8_fu_2467_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_8_11_fu_2449_p1 : arr4_V_7_5_fu_2082_p3);

assign arr4_V_7_fu_2075_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_23_fu_1206_p3 : arr4_V_7_11_fu_2071_p1);

assign arr4_V_8_10_fu_2549_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_10_5_fu_2515_p1 : arr4_V_8_8_fu_2500_p3);

assign arr4_V_8_11_fu_2449_p1 = call_ret2_PixelProcessNew_1_s_fu_789_ap_return_0[63:0];

assign arr4_V_8_5_fu_2460_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_24_fu_1229_p3 : arr4_V_8_fu_2453_p3);

assign arr4_V_8_8_fu_2500_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_9_10_fu_2482_p1 : arr4_V_8_5_fu_2460_p3);

assign arr4_V_8_fu_2453_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_24_fu_1229_p3 : arr4_V_8_11_fu_2449_p1);

assign arr4_V_9_10_fu_2482_p1 = call_ret2_PixelProcessNew_1_s_fu_789_ap_return_1[63:0];

assign arr4_V_9_6_fu_2493_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_25_fu_1252_p3 : arr4_V_9_fu_2486_p3);

assign arr4_V_9_8_fu_2534_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? arr4_V_10_5_fu_2515_p1 : arr4_V_9_6_fu_2493_p3);

assign arr4_V_9_9_fu_2541_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? p_Result_25_fu_1252_p3 : arr4_V_9_8_fu_2534_p3);

assign arr4_V_9_fu_2486_p3 = ((icmp_ln233_reg_3052[0:0] == 1'b1) ? p_Result_25_fu_1252_p3 : arr4_V_9_10_fu_2482_p1);

assign bdrows_cast8_fu_800_p1 = bdrows;

assign call_ret1_PixelProcessNew_1_s_fu_782_k1 = {{trunc_ln674_14_fu_1880_p1}, {phi_ln215_3_fu_1732_p18}};

assign call_ret1_PixelProcessNew_1_s_fu_782_k2 = {{trunc_ln674_15_fu_1930_p1}, {phi_ln215_4_fu_1769_p18}};

assign call_ret1_PixelProcessNew_1_s_fu_782_k3 = {{trunc_ln674_16_fu_1980_p1}, {phi_ln215_5_fu_1806_p18}};

assign call_ret2_PixelProcessNew_1_s_fu_789_k1 = {{trunc_ln674_20_fu_2324_p1}, {phi_ln215_6_fu_2176_p18}};

assign call_ret2_PixelProcessNew_1_s_fu_789_k2 = {{trunc_ln674_21_fu_2374_p1}, {phi_ln215_7_fu_2213_p18}};

assign call_ret2_PixelProcessNew_1_s_fu_789_k3 = {{trunc_ln674_22_fu_2424_p1}, {phi_ln215_8_fu_2250_p18}};

assign call_ret_PixelProcessNew_1_s_fu_775_k1 = {{trunc_ln674_fu_1444_p1}, {phi_ln_fu_1296_p18}};

assign call_ret_PixelProcessNew_1_s_fu_775_k2 = {{trunc_ln674_9_fu_1494_p1}, {phi_ln215_1_fu_1333_p18}};

assign call_ret_PixelProcessNew_1_s_fu_775_k3 = {{trunc_ln674_10_fu_1544_p1}, {phi_ln215_2_fu_1370_p18}};

assign cmp144_fu_1012_p2 = (($signed(zext_ln189_1_fu_1003_p1) > $signed(mul143_reg_2809)) ? 1'b1 : 1'b0);

assign empty_505_fu_2657_p2 = ($signed(trunc_ln189_reg_3185) + $signed(10'd1023));

assign empty_506_fu_2676_p2 = ($signed(tmp_cast_reg_2874) + $signed(trunc_ln189_reg_3185));

assign empty_fu_841_p2 = (j_reg_554 + 2'd1);

assign grp_fu_2712_p0 = grp_fu_2712_p00;

assign grp_fu_2712_p00 = ram_row_depth;

assign grp_fu_2712_p1 = grp_fu_2712_p10;

assign grp_fu_2712_p10 = bdrows;

assign grp_fu_2718_p1 = grp_fu_2718_p10;

assign grp_fu_2718_p10 = ram_row_depth;

assign iBuff10_address1 = zext_ln189_fu_988_p1;

assign iBuff10_d0 = arr4_V_10_4_fu_2526_p3;

assign iBuff1_address1 = zext_ln189_fu_988_p1;

assign iBuff1_d0 = arr4_V_1_4_fu_1626_p3;

assign iBuff2_address1 = zext_ln189_fu_988_p1;

assign iBuff2_d0 = arr4_V_2_10_fu_1659_p3;

assign iBuff3_address1 = zext_ln189_fu_988_p1;

assign iBuff3_d0 = arr4_V_3_10_fu_2030_p3;

assign iBuff4_address1 = zext_ln189_fu_988_p1;

assign iBuff4_d0 = arr4_V_4_10_fu_2063_p3;

assign iBuff5_address1 = zext_ln189_fu_988_p1;

assign iBuff5_d0 = arr4_V_5_10_fu_2096_p3;

assign iBuff6_address1 = zext_ln189_fu_988_p1;

assign iBuff6_d0 = arr4_V_6_10_fu_2474_p3;

assign iBuff7_address1 = zext_ln189_fu_988_p1;

assign iBuff7_d0 = arr4_V_7_10_fu_2507_p3;

assign iBuff8_address1 = zext_ln189_fu_988_p1;

assign iBuff8_d0 = arr4_V_8_10_fu_2549_p3;

assign iBuff9_address1 = zext_ln189_fu_988_p1;

assign iBuff9_d0 = arr4_V_9_9_fu_2541_p3;

assign iBuff_address1 = zext_ln189_fu_988_p1;

assign icmp_ln175_fu_847_p2 = ((j_reg_554 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_1007_p2 = ((el_reg_566 < mul_reg_2804) ? 1'b1 : 1'b0);

assign icmp_ln233_1_fu_976_p2 = ((j_reg_554 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_970_p2 = ((j_reg_554 == 2'd1) ? 1'b1 : 1'b0);

assign j_t617_cast5_fu_897_p1 = j_reg_554;

assign j_t617_cast_fu_901_p1 = j_reg_554;

assign or_ln239_fu_982_p2 = (icmp_ln233_fu_970_p2 | icmp_ln233_1_fu_976_p2);

assign p_Result_10_fu_1219_p4 = {{ap_phi_mux_p_Val2_27_phi_fu_598_p4[63:4]}};

assign p_Result_12_fu_1242_p4 = {{ap_phi_mux_p_Val2_29_phi_fu_589_p4[63:4]}};

assign p_Result_14_fu_1269_p4 = {{ap_phi_mux_p_Val2_31_phi_fu_580_p4[63:4]}};

assign p_Result_17_fu_1064_p3 = {{p_Result_2_fu_1054_p4}, {arr3_V_1_0_reg_757}};

assign p_Result_18_fu_1091_p3 = {{p_Result_4_fu_1081_p4}, {arr3_V_2_0_reg_748}};

assign p_Result_19_fu_1114_p3 = {{p_Result_6_fu_1104_p4}, {arr3_V_3_0_reg_739}};

assign p_Result_1_fu_1150_p4 = {{ap_phi_mux_p_Val2_21_phi_fu_625_p4[63:4]}};

assign p_Result_20_fu_1137_p3 = {{p_Result_9_fu_1127_p4}, {arr3_V_4_0_reg_730}};

assign p_Result_21_fu_1160_p3 = {{p_Result_1_fu_1150_p4}, {arr3_V_5_0_reg_721}};

assign p_Result_22_fu_1183_p3 = {{p_Result_3_fu_1173_p4}, {arr3_V_6_0_reg_712}};

assign p_Result_23_fu_1206_p3 = {{p_Result_7_fu_1196_p4}, {arr3_V_7_0_reg_703}};

assign p_Result_24_fu_1229_p3 = {{p_Result_10_fu_1219_p4}, {arr3_V_8_0_reg_694}};

assign p_Result_25_fu_1252_p3 = {{p_Result_12_fu_1242_p4}, {arr3_V_9_0_reg_685}};

assign p_Result_26_fu_1279_p3 = {{p_Result_14_fu_1269_p4}, {arr3_V_10_0_reg_676}};

assign p_Result_2_fu_1054_p4 = {{ap_phi_mux_p_Val2_13_phi_fu_661_p4[63:4]}};

assign p_Result_3_fu_1173_p4 = {{ap_phi_mux_p_Val2_23_phi_fu_616_p4[63:4]}};

assign p_Result_4_fu_1081_p4 = {{ap_phi_mux_p_Val2_15_phi_fu_652_p4[63:4]}};

assign p_Result_6_fu_1104_p4 = {{ap_phi_mux_p_Val2_17_phi_fu_643_p4[63:4]}};

assign p_Result_7_fu_1196_p4 = {{ap_phi_mux_p_Val2_25_phi_fu_607_p4[63:4]}};

assign p_Result_9_fu_1127_p4 = {{ap_phi_mux_p_Val2_19_phi_fu_634_p4[63:4]}};

assign p_Result_s_504_fu_1037_p3 = {{p_Result_s_fu_1027_p4}, {arr3_V_0_0_reg_766}};

assign p_Result_s_fu_1027_p4 = {{ap_phi_mux_p_Val2_11_phi_fu_670_p4[63:4]}};

assign p_cast7_fu_2680_p1 = empty_506_fu_2676_p2;

assign p_cast_fu_2662_p1 = empty_505_fu_2657_p2;

assign p_t1_fu_962_p3 = {{2'd2}, {j_reg_554}};

assign p_t449_fu_956_p2 = (j_t617_cast5_fu_897_p1 + 4'd7);

assign p_t473_fu_950_p2 = (j_t617_cast5_fu_897_p1 + 4'd6);

assign p_t497_cast_fu_946_p1 = p_t497_fu_940_p2;

assign p_t497_fu_940_p2 = ($signed(j_t617_cast_fu_901_p1) + $signed(3'd5));

assign p_t521_cast_fu_936_p1 = p_t_fu_928_p3;

assign p_t545_cast_fu_924_p1 = p_t545_fu_918_p2;

assign p_t545_fu_918_p2 = (j_t617_cast_fu_901_p1 + 3'd3);

assign p_t569_cast_fu_914_p1 = p_t569_fu_908_p2;

assign p_t569_fu_908_p2 = (j_t617_cast_fu_901_p1 + 3'd2);

assign p_t593_cast_fu_905_p1 = empty_reg_2879;

assign p_t_fu_928_p3 = {{1'd1}, {j_reg_554}};

assign select_ln237_3_fu_2567_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_6_5_fu_2557_p4 : arr3_V_5_5_fu_2152_p4);

assign select_ln237_fu_2114_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_3_5_fu_2104_p4 : arr3_V_2_5_fu_1708_p4);

assign select_ln238_3_fu_2591_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_7_5_fu_2581_p4 : arr3_V_6_5_fu_2557_p4);

assign select_ln238_fu_2138_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_4_5_fu_2128_p4 : arr3_V_3_5_fu_2104_p4);

assign select_ln239_2_fu_2162_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_5_5_fu_2152_p4 : arr3_V_4_5_fu_2128_p4);

assign select_ln239_6_fu_2629_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_9_1_fu_1265_p1 : arr3_V_8_5_fu_2605_p4);

assign select_ln239_8_fu_2643_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_8_5_fu_2605_p4 : arr3_V_7_5_fu_2581_p4);

assign select_ln239_fu_1718_p3 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr3_V_2_5_fu_1708_p4 : arr3_V_1_6_fu_1691_p4);

assign sub142_fu_812_p2 = ($signed(bdrows_cast8_fu_800_p1) + $signed(12'd4095));

assign sub145_t_fu_822_p2 = ($signed(bramtotal) + $signed(4'd15));

assign tmp_1_fu_2685_p1 = ((icmp_ln233_1_reg_3076[0:0] == 1'b1) ? arr4_V_2_11_fu_1569_p1 : p_Result_s_504_fu_1037_p3);

assign tmp_cast_fu_837_p1 = $signed(tmp_fu_831_p2);

assign tmp_fu_831_p2 = ($signed(zext_ln175_fu_828_p1) + $signed(7'd127));

assign trunc_ln189_fu_1017_p1 = el_reg_566[9:0];

assign trunc_ln674_10_fu_1544_p1 = p_Val2_35_fu_1507_p18[3:0];

assign trunc_ln674_14_fu_1880_p1 = p_Val2_42_fu_1843_p18[3:0];

assign trunc_ln674_15_fu_1930_p1 = p_Val2_43_fu_1893_p18[3:0];

assign trunc_ln674_16_fu_1980_p1 = p_Val2_44_fu_1943_p18[3:0];

assign trunc_ln674_20_fu_2324_p1 = p_Val2_51_fu_2287_p18[3:0];

assign trunc_ln674_21_fu_2374_p1 = p_Val2_52_fu_2337_p18[3:0];

assign trunc_ln674_22_fu_2424_p1 = p_Val2_53_fu_2387_p18[3:0];

assign trunc_ln674_9_fu_1494_p1 = p_Val2_34_fu_1457_p18[3:0];

assign trunc_ln674_fu_1444_p1 = p_Val2_33_fu_1407_p18[3:0];

assign zext_ln175_fu_828_p1 = ram_row_depth;

assign zext_ln189_1_fu_1003_p1 = el_reg_566;

assign zext_ln189_fu_988_p1 = el_reg_566;

always @ (posedge ap_clk) begin
    j_t617_cast5_reg_2998[3:2] <= 2'b00;
    p_t593_cast_reg_3004[3:2] <= 2'b00;
    p_t569_cast_reg_3010[3] <= 1'b0;
    p_t545_cast_reg_3016[3] <= 1'b0;
    p_t521_cast_reg_3022[3:2] <= 2'b01;
    p_t497_cast_reg_3028[3] <= 1'b0;
    p_t1_reg_3046[3:2] <= 2'b10;
    p_cast_reg_3311[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //edgetracing_accel_TopDown_11_3_1024_s
