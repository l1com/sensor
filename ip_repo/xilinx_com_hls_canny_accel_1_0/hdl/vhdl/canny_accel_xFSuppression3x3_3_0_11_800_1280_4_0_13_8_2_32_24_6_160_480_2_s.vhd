-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    magnitude_mat_48_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    magnitude_mat_48_empty_n : IN STD_LOGIC;
    magnitude_mat_48_read : OUT STD_LOGIC;
    phase_mat_49_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    phase_mat_49_empty_n : IN STD_LOGIC;
    phase_mat_49_read : OUT STD_LOGIC;
    nms_mat_410_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    nms_mat_410_full_n : IN STD_LOGIC;
    nms_mat_410_write : OUT STD_LOGIC;
    low_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    low_threshold_empty_n : IN STD_LOGIC;
    low_threshold_read : OUT STD_LOGIC;
    high_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    high_threshold_empty_n : IN STD_LOGIC;
    high_threshold_read : OUT STD_LOGIC;
    imgheight_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    imgheight_empty_n : IN STD_LOGIC;
    imgheight_read : OUT STD_LOGIC;
    imgwidth_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    imgwidth_empty_n : IN STD_LOGIC;
    imgwidth_read : OUT STD_LOGIC;
    imgheight_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    imgheight_out_full_n : IN STD_LOGIC;
    imgheight_out_write : OUT STD_LOGIC;
    imgwidth_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    imgwidth_out_full_n : IN STD_LOGIC;
    imgwidth_out_write : OUT STD_LOGIC );
end;


architecture behav of canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal magnitude_mat_48_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln345_reg_1648 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln207_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i156_i_i_reg_1798 : STD_LOGIC_VECTOR (0 downto 0);
    signal phase_mat_49_blk_n : STD_LOGIC;
    signal nms_mat_410_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln207_reg_1820_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_4_reg_1849 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal low_threshold_blk_n : STD_LOGIC;
    signal high_threshold_blk_n : STD_LOGIC;
    signal imgheight_blk_n : STD_LOGIC;
    signal imgwidth_blk_n : STD_LOGIC;
    signal imgheight_out_blk_n : STD_LOGIC;
    signal imgwidth_out_blk_n : STD_LOGIC;
    signal col_V_reg_464 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_V_2_reg_523 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_V_2_reg_523_pp1_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op150_read_state7 : BOOLEAN;
    signal ap_predicate_op161_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op262_write_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal agg_tmp31_i_i_0_i_reg_535 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_tmp20_i_i_assign_1_i_reg_547 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp20_i_i_0_i_reg_559 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp9_i_i_assign_1_i_reg_571 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp9_i_i_0_i_reg_583 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp2_i_i_0_i_reg_595 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_tmp_i_i_0_i_reg_607 : STD_LOGIC_VECTOR (15 downto 0);
    signal P0_V_6_reg_619 : STD_LOGIC_VECTOR (15 downto 0);
    signal low_threshold_read_reg_1608 : STD_LOGIC_VECTOR (7 downto 0);
    signal high_threshold_read_reg_1620 : STD_LOGIC_VECTOR (7 downto 0);
    signal imgheight_read_reg_1632 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgwidth_assign_cast_reg_1637 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_V_1_fu_830_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln345_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln534_fu_841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_reg_1652 : STD_LOGIC_VECTOR (63 downto 0);
    signal imgheight_cast3_i_fu_846_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal imgheight_cast3_i_reg_1658 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal op2_assign_2_fu_849_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal op2_assign_2_reg_1663 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln878_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_1668 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln362_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal cmp_i_i156_i_i_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_fu_996_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln214_reg_1802 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln215_fu_1000_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln215_reg_1806 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln231_fu_1004_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln231_reg_1810 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_3_fu_1008_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_V_3_reg_1815 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln207_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln207_reg_1820_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_4_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_V_1_fu_1501_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_ind_V_2_fu_1572_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal read_ind_V_2_fu_1586_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal write_ind_V_2_fu_1600_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter2_state8 : STD_LOGIC;
    signal angle_V_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_V_0_ce0 : STD_LOGIC;
    signal angle_V_0_we0 : STD_LOGIC;
    signal angle_V_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal angle_V_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_V_0_ce1 : STD_LOGIC;
    signal angle_V_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal angle_V_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_V_1_ce0 : STD_LOGIC;
    signal angle_V_1_we0 : STD_LOGIC;
    signal angle_V_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal angle_V_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_V_1_ce1 : STD_LOGIC;
    signal angle_V_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_V_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_0_ce0 : STD_LOGIC;
    signal buf_V_0_we0 : STD_LOGIC;
    signal buf_V_0_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal buf_V_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_0_ce1 : STD_LOGIC;
    signal buf_V_0_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal buf_V_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_1_ce0 : STD_LOGIC;
    signal buf_V_1_we0 : STD_LOGIC;
    signal buf_V_1_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal buf_V_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_1_ce1 : STD_LOGIC;
    signal buf_V_1_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal buf_V_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_2_ce0 : STD_LOGIC;
    signal buf_V_2_we0 : STD_LOGIC;
    signal buf_V_2_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal buf_V_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_V_2_ce1 : STD_LOGIC;
    signal buf_V_2_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_ap_ready : STD_LOGIC;
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_angle : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_ready : STD_LOGIC;
    signal ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_ready : STD_LOGIC;
    signal ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_ready : STD_LOGIC;
    signal ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_ready : STD_LOGIC;
    signal ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_ready : STD_LOGIC;
    signal ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_ready : STD_LOGIC;
    signal ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_ready : STD_LOGIC;
    signal ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_ready : STD_LOGIC;
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_ready : STD_LOGIC;
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_ready : STD_LOGIC;
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_ready : STD_LOGIC;
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_p_read10 : STD_LOGIC_VECTOR (63 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_reg_475 : STD_LOGIC_VECTOR (10 downto 0);
    signal write_ind_V_reg_487 : STD_LOGIC_VECTOR (12 downto 0);
    signal read_ind_V_reg_499 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_row_ind_V_phi_fu_515_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_V_reg_511 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_col_V_2_phi_fu_527_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_P0_V_5_phi_fu_635_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_1413_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp1_iter3_P0_V_5_reg_631 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_fu_1374_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf0_V_fu_1084_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal buf1_V_fu_1097_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal buf2_V_fu_1110_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln534_2_fu_1019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_1_fu_1028_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln222_fu_1037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bottom_fu_152 : STD_LOGIC_VECTOR (1 downto 0);
    signal bottom_1_fu_952_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_fu_156 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_1_fu_960_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_fu_160 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_1_fu_968_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal l00_buf_V_0_1_fu_164 : STD_LOGIC_VECTOR (15 downto 0);
    signal l00_buf_V_1_1_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal l00_buf_V_8_1_fu_172 : STD_LOGIC_VECTOR (15 downto 0);
    signal l00_buf_V_9_1_fu_176 : STD_LOGIC_VECTOR (15 downto 0);
    signal l10_buf_V_0_1_fu_180 : STD_LOGIC_VECTOR (15 downto 0);
    signal l10_buf_V_1_1_fu_184 : STD_LOGIC_VECTOR (15 downto 0);
    signal l10_buf_V_8_1_fu_188 : STD_LOGIC_VECTOR (15 downto 0);
    signal l10_buf_V_9_1_fu_192 : STD_LOGIC_VECTOR (15 downto 0);
    signal l20_buf_V_0_1_fu_196 : STD_LOGIC_VECTOR (15 downto 0);
    signal l20_buf_V_1_1_fu_200 : STD_LOGIC_VECTOR (15 downto 0);
    signal l20_buf_V_8_1_fu_204 : STD_LOGIC_VECTOR (15 downto 0);
    signal l20_buf_V_9_1_fu_208 : STD_LOGIC_VECTOR (15 downto 0);
    signal angle_buf_V_0_1_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_buf_V_1_1_fu_216 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_buf_V_9_1_fu_220 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_1361_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal p_Result_4_fu_1535_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_855_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln870_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_1395_p8 : STD_LOGIC_VECTOR (13 downto 0);
    signal row_ind_V_1_fu_1548_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln870_1_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_ind_V_1_fu_1554_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln870_2_fu_1580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_ind_V_1_fu_1560_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln870_3_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_1525 : BOOLEAN;
    signal ap_condition_242 : BOOLEAN;
    signal ap_condition_1532 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component canny_accel_xFFindmax3x3_4_0_13_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_i00 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i01 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i02 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i20 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i21 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_i22 : IN STD_LOGIC_VECTOR (15 downto 0);
        angle : IN STD_LOGIC_VECTOR (7 downto 0);
        p_low_threshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_high_threshold : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component canny_accel_xfExtractPixels_8_32_4_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component canny_accel_xfExtractPixels_8_24_0_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component canny_accel_mux_32_128_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (127 downto 0);
        din1 : IN STD_LOGIC_VECTOR (127 downto 0);
        din2 : IN STD_LOGIC_VECTOR (127 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_angle_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_buf_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    angle_V_0_U : component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_angle_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => angle_V_0_address0,
        ce0 => angle_V_0_ce0,
        we0 => angle_V_0_we0,
        d0 => angle_V_0_d0,
        address1 => angle_V_0_address1,
        ce1 => angle_V_0_ce1,
        q1 => angle_V_0_q1);

    angle_V_1_U : component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_angle_V_0
    generic map (
        DataWidth => 64,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => angle_V_1_address0,
        ce0 => angle_V_1_ce0,
        we0 => angle_V_1_we0,
        d0 => angle_V_1_d0,
        address1 => angle_V_1_address1,
        ce1 => angle_V_1_ce1,
        q1 => angle_V_1_q1);

    buf_V_0_U : component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_buf_V_0
    generic map (
        DataWidth => 128,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_0_address0,
        ce0 => buf_V_0_ce0,
        we0 => buf_V_0_we0,
        d0 => buf_V_0_d0,
        address1 => buf_V_0_address1,
        ce1 => buf_V_0_ce1,
        q1 => buf_V_0_q1);

    buf_V_1_U : component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_buf_V_0
    generic map (
        DataWidth => 128,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_1_address0,
        ce0 => buf_V_1_ce0,
        we0 => buf_V_1_we0,
        d0 => buf_V_1_d0,
        address1 => buf_V_1_address1,
        ce1 => buf_V_1_ce1,
        q1 => buf_V_1_q1);

    buf_V_2_U : component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_buf_V_0
    generic map (
        DataWidth => 128,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_V_2_address0,
        ce0 => buf_V_2_ce0,
        we0 => buf_V_2_we0,
        d0 => buf_V_2_d0,
        address1 => buf_V_2_address1,
        ce1 => buf_V_2_ce1,
        q1 => buf_V_2_q1);

    grp_xFFindmax3x3_4_0_13_s_fu_642 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => grp_xFFindmax3x3_4_0_13_s_fu_642_ap_ready,
        p_i00 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00,
        p_i01 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01,
        p_i02 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02,
        p_i10 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10,
        p_i11 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11,
        p_i12 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12,
        p_i20 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20,
        p_i21 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21,
        p_i22 => grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22,
        angle => grp_xFFindmax3x3_4_0_13_s_fu_642_angle,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return);

    ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_ready,
        p_i00 => agg_tmp2_i_i_0_i_reg_595,
        p_i01 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2,
        p_i02 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3,
        p_i10 => agg_tmp9_i_i_assign_1_i_reg_571,
        p_i11 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2,
        p_i12 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3,
        p_i20 => agg_tmp20_i_i_assign_1_i_reg_547,
        p_i21 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2,
        p_i22 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3,
        angle => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_2,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return);

    ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_ready,
        p_i00 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2,
        p_i01 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3,
        p_i02 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4,
        p_i10 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2,
        p_i11 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3,
        p_i12 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4,
        p_i20 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2,
        p_i21 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3,
        p_i22 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4,
        angle => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_3,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return);

    ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_ready,
        p_i00 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3,
        p_i01 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4,
        p_i02 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5,
        p_i10 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3,
        p_i11 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4,
        p_i12 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5,
        p_i20 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3,
        p_i21 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4,
        p_i22 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5,
        angle => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_4,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return);

    ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_ready,
        p_i00 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4,
        p_i01 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5,
        p_i02 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6,
        p_i10 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4,
        p_i11 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5,
        p_i12 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6,
        p_i20 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4,
        p_i21 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5,
        p_i22 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6,
        angle => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_5,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return);

    ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_ready,
        p_i00 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5,
        p_i01 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6,
        p_i02 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7,
        p_i10 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5,
        p_i11 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6,
        p_i12 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7,
        p_i20 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5,
        p_i21 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6,
        p_i22 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7,
        angle => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_6,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return);

    ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_ready,
        p_i00 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6,
        p_i01 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7,
        p_i02 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8,
        p_i10 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6,
        p_i11 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7,
        p_i12 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8,
        p_i20 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6,
        p_i21 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7,
        p_i22 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8,
        angle => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_7,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return);

    ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764 : component canny_accel_xFFindmax3x3_4_0_13_s
    port map (
        ap_ready => ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_ready,
        p_i00 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7,
        p_i01 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8,
        p_i02 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9,
        p_i10 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7,
        p_i11 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8,
        p_i12 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9,
        p_i20 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7,
        p_i21 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8,
        p_i22 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9,
        angle => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_8,
        p_low_threshold => low_threshold_read_reg_1608,
        p_high_threshold => high_threshold_read_reg_1620,
        ap_return => ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return);

    call_ret1_i_xfExtractPixels_8_32_4_s_fu_783 : component canny_accel_xfExtractPixels_8_32_4_s
    port map (
        ap_ready => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_ready,
        p_read => l00_buf_V_0_1_fu_164,
        p_read1 => l00_buf_V_1_1_fu_168,
        p_read10 => buf0_V_fu_1084_p5,
        ap_return_0 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_0,
        ap_return_1 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_1,
        ap_return_2 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2,
        ap_return_3 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3,
        ap_return_4 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4,
        ap_return_5 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5,
        ap_return_6 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6,
        ap_return_7 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7,
        ap_return_8 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8,
        ap_return_9 => call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9);

    call_ret2_i_xfExtractPixels_8_32_4_s_fu_790 : component canny_accel_xfExtractPixels_8_32_4_s
    port map (
        ap_ready => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_ready,
        p_read => l10_buf_V_0_1_fu_180,
        p_read1 => l10_buf_V_1_1_fu_184,
        p_read10 => buf1_V_fu_1097_p5,
        ap_return_0 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_0,
        ap_return_1 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_1,
        ap_return_2 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2,
        ap_return_3 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3,
        ap_return_4 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4,
        ap_return_5 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5,
        ap_return_6 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6,
        ap_return_7 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7,
        ap_return_8 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8,
        ap_return_9 => call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9);

    call_ret_i_xfExtractPixels_8_32_4_s_fu_797 : component canny_accel_xfExtractPixels_8_32_4_s
    port map (
        ap_ready => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_ready,
        p_read => l20_buf_V_0_1_fu_196,
        p_read1 => l20_buf_V_1_1_fu_200,
        p_read10 => buf2_V_fu_1110_p5,
        ap_return_0 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_0,
        ap_return_1 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_1,
        ap_return_2 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2,
        ap_return_3 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3,
        ap_return_4 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4,
        ap_return_5 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5,
        ap_return_6 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6,
        ap_return_7 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7,
        ap_return_8 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8,
        ap_return_9 => call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9);

    call_ret3_i_xfExtractPixels_8_24_0_1_fu_804 : component canny_accel_xfExtractPixels_8_24_0_1
    port map (
        ap_ready => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_ready,
        p_read => angle_buf_V_0_1_fu_212,
        p_read1 => angle_buf_V_1_1_fu_216,
        p_read10 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_p_read10,
        ap_return_0 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_0,
        ap_return_1 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_1,
        ap_return_2 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_2,
        ap_return_3 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_3,
        ap_return_4 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_4,
        ap_return_5 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_5,
        ap_return_6 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_6,
        ap_return_7 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_7,
        ap_return_8 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_8,
        ap_return_9 => call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9);

    mux_32_128_1_1_U161 : component canny_accel_mux_32_128_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 128,
        din1_WIDTH => 128,
        din2_WIDTH => 128,
        din3_WIDTH => 2,
        dout_WIDTH => 128)
    port map (
        din0 => buf_V_0_q1,
        din1 => buf_V_1_q1,
        din2 => buf_V_2_q1,
        din3 => top_fu_160,
        dout => buf0_V_fu_1084_p5);

    mux_32_128_1_1_U162 : component canny_accel_mux_32_128_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 128,
        din1_WIDTH => 128,
        din2_WIDTH => 128,
        din3_WIDTH => 2,
        dout_WIDTH => 128)
    port map (
        din0 => buf_V_0_q1,
        din1 => buf_V_1_q1,
        din2 => buf_V_2_q1,
        din3 => mid_fu_156,
        dout => buf1_V_fu_1097_p5);

    mux_32_128_1_1_U163 : component canny_accel_mux_32_128_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 128,
        din1_WIDTH => 128,
        din2_WIDTH => 128,
        din3_WIDTH => 2,
        dout_WIDTH => 128)
    port map (
        din0 => buf_V_0_q1,
        din1 => buf_V_1_q1,
        din2 => buf_V_2_q1,
        din3 => bottom_fu_152,
        dout => buf2_V_fu_1110_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln362_fu_911_p2 = ap_const_lv1_1) or (icmp_ln878_reg_1668 = ap_const_lv1_1)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter2_state8) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)) or ((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter2_state8))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    P0_V_6_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                P0_V_6_reg_619 <= ap_phi_mux_P0_V_5_phi_fu_635_p4;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                P0_V_6_reg_619 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp20_i_i_0_i_reg_559_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                agg_tmp20_i_i_0_i_reg_559 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                agg_tmp20_i_i_0_i_reg_559 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp20_i_i_assign_1_i_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                agg_tmp20_i_i_assign_1_i_reg_547 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                agg_tmp20_i_i_assign_1_i_reg_547 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp2_i_i_0_i_reg_595_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                agg_tmp2_i_i_0_i_reg_595 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                agg_tmp2_i_i_0_i_reg_595 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp31_i_i_0_i_reg_535_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                agg_tmp31_i_i_0_i_reg_535 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                agg_tmp31_i_i_0_i_reg_535 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    agg_tmp9_i_i_0_i_reg_583_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                agg_tmp9_i_i_0_i_reg_583 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                agg_tmp9_i_i_0_i_reg_583 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp9_i_i_assign_1_i_reg_571_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                agg_tmp9_i_i_assign_1_i_reg_571 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                agg_tmp9_i_i_assign_1_i_reg_571 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    agg_tmp_i_i_0_i_reg_607_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                agg_tmp_i_i_0_i_reg_607 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                agg_tmp_i_i_0_i_reg_607 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    angle_buf_V_0_1_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                angle_buf_V_0_1_fu_212 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                angle_buf_V_0_1_fu_212 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_0;
            end if; 
        end if;
    end process;

    angle_buf_V_1_1_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                angle_buf_V_1_1_fu_216 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                angle_buf_V_1_1_fu_216 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_1;
            end if; 
        end if;
    end process;

    bottom_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_242)) then
                if ((not((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_2)) and not((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_0)))) then 
                    bottom_fu_152 <= bottom_1_fu_952_p3;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_2)) then 
                    bottom_fu_152 <= ap_const_lv2_2;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_0)) then 
                    bottom_fu_152 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    col_V_2_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
                col_V_2_reg_523 <= col_V_3_reg_1815;
            elsif (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                col_V_2_reg_523 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    col_V_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln345_fu_836_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                col_V_reg_464 <= col_V_1_fu_830_p2;
            elsif ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_V_reg_464 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    l00_buf_V_0_1_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                l00_buf_V_0_1_fu_164 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                l00_buf_V_0_1_fu_164 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_0;
            end if; 
        end if;
    end process;

    l00_buf_V_1_1_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                l00_buf_V_1_1_fu_168 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                l00_buf_V_1_1_fu_168 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_1;
            end if; 
        end if;
    end process;

    l10_buf_V_0_1_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                l10_buf_V_0_1_fu_180 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                l10_buf_V_0_1_fu_180 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_0;
            end if; 
        end if;
    end process;

    l10_buf_V_1_1_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                l10_buf_V_1_1_fu_184 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                l10_buf_V_1_1_fu_184 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_1;
            end if; 
        end if;
    end process;

    l20_buf_V_0_1_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                l20_buf_V_0_1_fu_196 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                l20_buf_V_0_1_fu_196 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_0;
            end if; 
        end if;
    end process;

    l20_buf_V_1_1_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                l20_buf_V_1_1_fu_200 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                l20_buf_V_1_1_fu_200 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_1;
            end if; 
        end if;
    end process;

    mid_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_242)) then
                if ((not((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_2)) and not((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_0)))) then 
                    mid_fu_156 <= mid_1_fu_960_p3;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_2)) then 
                    mid_fu_156 <= ap_const_lv2_1;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_0)) then 
                    mid_fu_156 <= ap_const_lv2_2;
                end if;
            end if; 
        end if;
    end process;

    read_ind_V_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                read_ind_V_reg_499 <= ap_const_lv13_1;
            elsif (((nms_mat_410_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                read_ind_V_reg_499 <= read_ind_V_2_fu_1586_p3;
            end if; 
        end if;
    end process;

    row_V_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                row_V_reg_475 <= ap_const_lv11_1;
            elsif (((nms_mat_410_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                row_V_reg_475 <= row_V_1_fu_1501_p2;
            end if; 
        end if;
    end process;

    row_ind_V_reg_511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                row_ind_V_reg_511 <= ap_const_lv13_2;
            elsif (((nms_mat_410_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                row_ind_V_reg_511 <= row_ind_V_2_fu_1572_p3;
            end if; 
        end if;
    end process;

    top_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_242)) then
                if ((not((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_2)) and not((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_0)))) then 
                    top_fu_160 <= top_1_fu_968_p3;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_2)) then 
                    top_fu_160 <= ap_const_lv2_0;
                elsif ((ap_phi_mux_row_ind_V_phi_fu_515_p4 = ap_const_lv13_0)) then 
                    top_fu_160 <= ap_const_lv2_1;
                end if;
            end if; 
        end if;
    end process;

    write_ind_V_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln878_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                write_ind_V_reg_487 <= ap_const_lv13_0;
            elsif (((nms_mat_410_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                write_ind_V_reg_487 <= write_ind_V_2_fu_1600_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                angle_buf_V_9_1_fu_220 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9;
                l00_buf_V_8_1_fu_172 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8;
                l00_buf_V_9_1_fu_176 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9;
                l10_buf_V_8_1_fu_188 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8;
                l10_buf_V_9_1_fu_192 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9;
                l20_buf_V_8_1_fu_204 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8;
                l20_buf_V_9_1_fu_208 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                cmp_i_i156_i_i_reg_1798 <= cmp_i_i156_i_i_fu_991_p2;
                trunc_ln214_reg_1802 <= trunc_ln214_fu_996_p1;
                trunc_ln215_reg_1806 <= trunc_ln215_fu_1000_p1;
                trunc_ln231_reg_1810 <= trunc_ln231_fu_1004_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                col_V_2_reg_523_pp1_iter1_reg <= col_V_2_reg_523;
                icmp_ln207_reg_1820 <= icmp_ln207_fu_1014_p2;
                icmp_ln207_reg_1820_pp1_iter1_reg <= icmp_ln207_reg_1820;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                col_V_3_reg_1815 <= col_V_3_fu_1008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                high_threshold_read_reg_1620 <= high_threshold_dout;
                imgheight_read_reg_1632 <= imgheight_dout;
                imgwidth_assign_cast_reg_1637 <= imgwidth_dout(10 downto 3);
                low_threshold_read_reg_1608 <= low_threshold_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln207_reg_1820_pp1_iter2_reg <= icmp_ln207_reg_1820_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln345_reg_1648 <= icmp_ln345_fu_836_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln207_reg_1820_pp1_iter1_reg = ap_const_lv1_0))) then
                icmp_ln870_4_reg_1849 <= icmp_ln870_4_fu_1046_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln878_reg_1668 <= icmp_ln878_fu_865_p2;
                    imgheight_cast3_i_reg_1658(9 downto 0) <= imgheight_cast3_i_fu_846_p1(9 downto 0);
                op2_assign_2_reg_1663 <= op2_assign_2_fu_849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln345_fu_836_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln534_reg_1652(7 downto 0) <= zext_ln534_fu_841_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln534_reg_1652(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    imgheight_cast3_i_reg_1658(10) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, nms_mat_410_full_n, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n, ap_enable_reg_pp1_iter1, ap_CS_fsm_state10, ap_enable_reg_pp0_iter0, icmp_ln345_fu_836_p2, icmp_ln878_reg_1668, icmp_ln362_fu_911_p2, ap_CS_fsm_state5, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln345_fu_836_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln345_fu_836_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln362_fu_911_p2 = ap_const_lv1_1) or (icmp_ln878_reg_1668 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                if (((nms_mat_410_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    angle_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, zext_ln534_reg_1652, trunc_ln215_reg_1806, zext_ln534_2_fu_1019_p1, zext_ln534_1_fu_1028_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            angle_V_0_address0 <= zext_ln534_1_fu_1028_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            angle_V_0_address0 <= zext_ln534_2_fu_1019_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            angle_V_0_address0 <= zext_ln534_reg_1652(8 - 1 downto 0);
        else 
            angle_V_0_address0 <= "XXXXXXXX";
        end if; 
    end process;

    angle_V_0_address1 <= zext_ln222_fu_1037_p1(8 - 1 downto 0);

    angle_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln215_reg_1806)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            angle_V_0_ce0 <= ap_const_logic_1;
        else 
            angle_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    angle_V_0_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            angle_V_0_ce1 <= ap_const_logic_1;
        else 
            angle_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    angle_V_0_d0_assign_proc : process(phase_mat_49_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, trunc_ln215_reg_1806)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            angle_V_0_d0 <= ap_const_lv64_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            angle_V_0_d0 <= phase_mat_49_dout;
        else 
            angle_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    angle_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln345_reg_1648, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln215_reg_1806)
    begin
        if ((((icmp_ln345_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            angle_V_0_we0 <= ap_const_logic_1;
        else 
            angle_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    angle_V_1_address0_assign_proc : process(cmp_i_i156_i_i_reg_1798, zext_ln534_2_fu_1019_p1, zext_ln534_1_fu_1028_p1, ap_condition_1525)
    begin
        if ((ap_const_boolean_1 = ap_condition_1525)) then
            if ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1)) then 
                angle_V_1_address0 <= zext_ln534_1_fu_1028_p1(8 - 1 downto 0);
            elsif ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0)) then 
                angle_V_1_address0 <= zext_ln534_2_fu_1019_p1(8 - 1 downto 0);
            else 
                angle_V_1_address0 <= "XXXXXXXX";
            end if;
        else 
            angle_V_1_address0 <= "XXXXXXXX";
        end if; 
    end process;

    angle_V_1_address1 <= zext_ln222_fu_1037_p1(8 - 1 downto 0);

    angle_V_1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, trunc_ln215_reg_1806)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            angle_V_1_ce0 <= ap_const_logic_1;
        else 
            angle_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    angle_V_1_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            angle_V_1_ce1 <= ap_const_logic_1;
        else 
            angle_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    angle_V_1_d0_assign_proc : process(phase_mat_49_dout, cmp_i_i156_i_i_reg_1798, ap_condition_1525)
    begin
        if ((ap_const_boolean_1 = ap_condition_1525)) then
            if ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1)) then 
                angle_V_1_d0 <= phase_mat_49_dout;
            elsif ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0)) then 
                angle_V_1_d0 <= ap_const_lv64_0;
            else 
                angle_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            angle_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    angle_V_1_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, trunc_ln215_reg_1806)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln215_reg_1806 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            angle_V_1_we0 <= ap_const_logic_1;
        else 
            angle_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(magnitude_mat_48_empty_n, phase_mat_49_empty_n, ap_enable_reg_pp0_iter1, icmp_ln345_reg_1648)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln345_reg_1648 = ap_const_lv1_0) and (phase_mat_49_empty_n = ap_const_logic_0)) or ((icmp_ln345_reg_1648 = ap_const_lv1_0) and (magnitude_mat_48_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(magnitude_mat_48_empty_n, phase_mat_49_empty_n, ap_enable_reg_pp0_iter1, icmp_ln345_reg_1648)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln345_reg_1648 = ap_const_lv1_0) and (phase_mat_49_empty_n = ap_const_logic_0)) or ((icmp_ln345_reg_1648 = ap_const_lv1_0) and (magnitude_mat_48_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(magnitude_mat_48_empty_n, phase_mat_49_empty_n, nms_mat_410_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op150_read_state7, ap_predicate_op161_read_state7, ap_predicate_op262_write_state9)
    begin
                ap_block_pp1_stage0_01001 <= (((nms_mat_410_full_n = ap_const_logic_0) and (ap_predicate_op262_write_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((phase_mat_49_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state7 = ap_const_boolean_1)) or ((magnitude_mat_48_empty_n = ap_const_logic_0) and (ap_predicate_op150_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(magnitude_mat_48_empty_n, phase_mat_49_empty_n, nms_mat_410_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op150_read_state7, ap_predicate_op161_read_state7, ap_predicate_op262_write_state9)
    begin
                ap_block_pp1_stage0_11001 <= (((nms_mat_410_full_n = ap_const_logic_0) and (ap_predicate_op262_write_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((phase_mat_49_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state7 = ap_const_boolean_1)) or ((magnitude_mat_48_empty_n = ap_const_logic_0) and (ap_predicate_op150_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(magnitude_mat_48_empty_n, phase_mat_49_empty_n, nms_mat_410_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op150_read_state7, ap_predicate_op161_read_state7, ap_predicate_op262_write_state9)
    begin
                ap_block_pp1_stage0_subdone <= (((nms_mat_410_full_n = ap_const_logic_0) and (ap_predicate_op262_write_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((phase_mat_49_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state7 = ap_const_boolean_1)) or ((magnitude_mat_48_empty_n = ap_const_logic_0) and (ap_predicate_op150_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
                ap_block_state1 <= ((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(magnitude_mat_48_empty_n, phase_mat_49_empty_n, icmp_ln345_reg_1648)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((icmp_ln345_reg_1648 = ap_const_lv1_0) and (phase_mat_49_empty_n = ap_const_logic_0)) or ((icmp_ln345_reg_1648 = ap_const_lv1_0) and (magnitude_mat_48_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(magnitude_mat_48_empty_n, phase_mat_49_empty_n, ap_predicate_op150_read_state7, ap_predicate_op161_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= (((phase_mat_49_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state7 = ap_const_boolean_1)) or ((magnitude_mat_48_empty_n = ap_const_logic_0) and (ap_predicate_op150_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter3_assign_proc : process(nms_mat_410_full_n, ap_predicate_op262_write_state9)
    begin
                ap_block_state9_pp1_stage0_iter3 <= ((nms_mat_410_full_n = ap_const_logic_0) and (ap_predicate_op262_write_state9 = ap_const_boolean_1));
    end process;


    ap_condition_1525_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, trunc_ln215_reg_1806)
    begin
                ap_condition_1525 <= ((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln215_reg_1806 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_condition_1532_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, trunc_ln214_reg_1802)
    begin
                ap_condition_1532 <= (not((trunc_ln214_reg_1802 = ap_const_lv2_1)) and not((trunc_ln214_reg_1802 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_condition_242_assign_proc : process(icmp_ln878_reg_1668, icmp_ln362_fu_911_p2, ap_CS_fsm_state5)
    begin
                ap_condition_242 <= ((icmp_ln362_fu_911_p2 = ap_const_lv1_0) and (icmp_ln878_reg_1668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln345_fu_836_p2)
    begin
        if ((icmp_ln345_fu_836_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter2_state8_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_condition_pp1_exit_iter2_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter2_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln207_fu_1014_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln207_fu_1014_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln878_reg_1668, icmp_ln362_fu_911_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln362_fu_911_p2 = ap_const_lv1_1) or (icmp_ln878_reg_1668 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_P0_V_5_phi_fu_635_p4_assign_proc : process(icmp_ln207_reg_1820_pp1_iter2_reg, icmp_ln870_4_reg_1849, p_Result_s_fu_1413_p5, ap_phi_reg_pp1_iter3_P0_V_5_reg_631, p_Result_3_fu_1374_p9)
    begin
        if ((icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0)) then
            if ((icmp_ln870_4_reg_1849 = ap_const_lv1_0)) then 
                ap_phi_mux_P0_V_5_phi_fu_635_p4 <= p_Result_3_fu_1374_p9;
            elsif ((icmp_ln870_4_reg_1849 = ap_const_lv1_1)) then 
                ap_phi_mux_P0_V_5_phi_fu_635_p4 <= p_Result_s_fu_1413_p5;
            else 
                ap_phi_mux_P0_V_5_phi_fu_635_p4 <= ap_phi_reg_pp1_iter3_P0_V_5_reg_631;
            end if;
        else 
            ap_phi_mux_P0_V_5_phi_fu_635_p4 <= ap_phi_reg_pp1_iter3_P0_V_5_reg_631;
        end if; 
    end process;


    ap_phi_mux_col_V_2_phi_fu_527_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, col_V_2_reg_523, col_V_3_reg_1815)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_col_V_2_phi_fu_527_p4 <= col_V_3_reg_1815;
        else 
            ap_phi_mux_col_V_2_phi_fu_527_p4 <= col_V_2_reg_523;
        end if; 
    end process;

    ap_phi_mux_row_ind_V_phi_fu_515_p4 <= row_ind_V_reg_511;
    ap_phi_reg_pp1_iter3_P0_V_5_reg_631 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op150_read_state7_assign_proc : process(icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798)
    begin
                ap_predicate_op150_read_state7 <= ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0));
    end process;


    ap_predicate_op161_read_state7_assign_proc : process(icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798)
    begin
                ap_predicate_op161_read_state7 <= ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0));
    end process;


    ap_predicate_op262_write_state9_assign_proc : process(icmp_ln207_reg_1820_pp1_iter2_reg, icmp_ln870_4_reg_1849)
    begin
                ap_predicate_op262_write_state9 <= ((icmp_ln870_4_reg_1849 = ap_const_lv1_0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    bottom_1_fu_952_p3 <= 
        ap_const_lv2_1 when (icmp_ln870_fu_946_p2(0) = '1') else 
        bottom_fu_152;

    buf_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_enable_reg_pp0_iter0, zext_ln534_fu_841_p1, trunc_ln214_reg_1802, zext_ln534_2_fu_1019_p1, zext_ln534_1_fu_1028_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            buf_V_0_address0 <= zext_ln534_1_fu_1028_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            buf_V_0_address0 <= zext_ln534_2_fu_1019_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_V_0_address0 <= zext_ln534_fu_841_p1(8 - 1 downto 0);
        else 
            buf_V_0_address0 <= "XXXXXXXX";
        end if; 
    end process;

    buf_V_0_address1 <= zext_ln222_fu_1037_p1(8 - 1 downto 0);

    buf_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, trunc_ln214_reg_1802)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_0_ce0 <= ap_const_logic_1;
        else 
            buf_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_0_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_V_0_ce1 <= ap_const_logic_1;
        else 
            buf_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_0_d0_assign_proc : process(magnitude_mat_48_dout, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_enable_reg_pp0_iter0, trunc_ln214_reg_1802)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            buf_V_0_d0 <= magnitude_mat_48_dout;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_0_d0 <= ap_const_lv128_lc_1;
        else 
            buf_V_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln345_fu_836_p2, trunc_ln214_reg_1802)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln345_fu_836_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_0_we0 <= ap_const_logic_1;
        else 
            buf_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, zext_ln534_reg_1652, trunc_ln214_reg_1802, zext_ln534_2_fu_1019_p1, zext_ln534_1_fu_1028_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            buf_V_1_address0 <= zext_ln534_1_fu_1028_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            buf_V_1_address0 <= zext_ln534_2_fu_1019_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_V_1_address0 <= zext_ln534_reg_1652(8 - 1 downto 0);
        else 
            buf_V_1_address0 <= "XXXXXXXX";
        end if; 
    end process;

    buf_V_1_address1 <= zext_ln222_fu_1037_p1(8 - 1 downto 0);

    buf_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln214_reg_1802)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_1_d0_assign_proc : process(magnitude_mat_48_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, trunc_ln214_reg_1802)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            buf_V_1_d0 <= ap_const_lv128_lc_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_1_d0 <= magnitude_mat_48_dout;
        else 
            buf_V_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln345_reg_1648, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln214_reg_1802)
    begin
        if ((((icmp_ln345_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln214_reg_1802 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_1_we0 <= ap_const_logic_1;
        else 
            buf_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_address0_assign_proc : process(cmp_i_i156_i_i_reg_1798, zext_ln534_2_fu_1019_p1, zext_ln534_1_fu_1028_p1, ap_condition_1532)
    begin
        if ((ap_const_boolean_1 = ap_condition_1532)) then
            if ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1)) then 
                buf_V_2_address0 <= zext_ln534_1_fu_1028_p1(8 - 1 downto 0);
            elsif ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0)) then 
                buf_V_2_address0 <= zext_ln534_2_fu_1019_p1(8 - 1 downto 0);
            else 
                buf_V_2_address0 <= "XXXXXXXX";
            end if;
        else 
            buf_V_2_address0 <= "XXXXXXXX";
        end if; 
    end process;

    buf_V_2_address1 <= zext_ln222_fu_1037_p1(8 - 1 downto 0);

    buf_V_2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, trunc_ln214_reg_1802)
    begin
        if (((not((trunc_ln214_reg_1802 = ap_const_lv2_1)) and not((trunc_ln214_reg_1802 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or (not((trunc_ln214_reg_1802 = ap_const_lv2_1)) and not((trunc_ln214_reg_1802 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_2_d0_assign_proc : process(magnitude_mat_48_dout, cmp_i_i156_i_i_reg_1798, ap_condition_1532)
    begin
        if ((ap_const_boolean_1 = ap_condition_1532)) then
            if ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1)) then 
                buf_V_2_d0 <= magnitude_mat_48_dout;
            elsif ((cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0)) then 
                buf_V_2_d0 <= ap_const_lv128_lc_1;
            else 
                buf_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_V_2_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798, ap_block_pp1_stage0_11001, trunc_ln214_reg_1802)
    begin
        if (((not((trunc_ln214_reg_1802 = ap_const_lv2_1)) and not((trunc_ln214_reg_1802 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_0) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or (not((trunc_ln214_reg_1802 = ap_const_lv2_1)) and not((trunc_ln214_reg_1802 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            buf_V_2_we0 <= ap_const_logic_1;
        else 
            buf_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_p_read10 <= 
        angle_V_1_q1 when (trunc_ln231_reg_1810(0) = '1') else 
        angle_V_0_q1;
    cmp_i_i156_i_i_fu_991_p2 <= "1" when (unsigned(row_V_reg_475) < unsigned(imgheight_cast3_i_reg_1658)) else "0";
    col_V_1_fu_830_p2 <= std_logic_vector(unsigned(col_V_reg_464) + unsigned(ap_const_lv8_1));
    col_V_3_fu_1008_p2 <= std_logic_vector(unsigned(ap_phi_mux_col_V_2_phi_fu_527_p4) + unsigned(ap_const_lv8_1));

    grp_xFFindmax3x3_4_0_13_s_fu_642_angle_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, agg_tmp31_i_i_0_i_reg_535, angle_buf_V_9_1_fu_220)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_angle <= angle_buf_V_9_1_fu_220;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_angle <= agg_tmp31_i_i_0_i_reg_535;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_angle <= "XXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, agg_tmp_i_i_0_i_reg_607, l00_buf_V_8_1_fu_172)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00 <= l00_buf_V_8_1_fu_172;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00 <= agg_tmp_i_i_0_i_reg_607;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, agg_tmp2_i_i_0_i_reg_595, l00_buf_V_9_1_fu_176)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01 <= l00_buf_V_9_1_fu_176;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01 <= agg_tmp2_i_i_0_i_reg_595;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02 <= ap_const_lv16_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, agg_tmp9_i_i_0_i_reg_583, l10_buf_V_8_1_fu_188)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10 <= l10_buf_V_8_1_fu_188;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10 <= agg_tmp9_i_i_0_i_reg_583;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, agg_tmp9_i_i_assign_1_i_reg_571, l10_buf_V_9_1_fu_192)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11 <= l10_buf_V_9_1_fu_192;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11 <= agg_tmp9_i_i_assign_1_i_reg_571;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12 <= ap_const_lv16_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, agg_tmp20_i_i_0_i_reg_559, l20_buf_V_8_1_fu_204)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20 <= l20_buf_V_8_1_fu_204;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20 <= agg_tmp20_i_i_0_i_reg_559;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, agg_tmp20_i_i_assign_1_i_reg_547, l20_buf_V_9_1_fu_208)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21 <= l20_buf_V_9_1_fu_208;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21 <= agg_tmp20_i_i_assign_1_i_reg_547;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, ap_CS_fsm_state10, call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22 <= ap_const_lv16_0;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2;
        else 
            grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    high_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, high_threshold_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_blk_n <= high_threshold_empty_n;
        else 
            high_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    high_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_read <= ap_const_logic_1;
        else 
            high_threshold_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln207_fu_1014_p2 <= "1" when (ap_phi_mux_col_V_2_phi_fu_527_p4 = imgwidth_assign_cast_reg_1637) else "0";
    icmp_ln345_fu_836_p2 <= "1" when (col_V_reg_464 = imgwidth_assign_cast_reg_1637) else "0";
    icmp_ln362_fu_911_p2 <= "1" when (row_V_reg_475 = op2_assign_2_reg_1663) else "0";
    icmp_ln870_1_fu_1566_p2 <= "1" when (row_ind_V_1_fu_1548_p2 = ap_const_lv13_3) else "0";
    icmp_ln870_2_fu_1580_p2 <= "1" when (read_ind_V_1_fu_1554_p2 = ap_const_lv13_2) else "0";
    icmp_ln870_3_fu_1594_p2 <= "1" when (write_ind_V_1_fu_1560_p2 = ap_const_lv13_2) else "0";
    icmp_ln870_4_fu_1046_p2 <= "1" when (col_V_2_reg_523_pp1_iter1_reg = ap_const_lv8_0) else "0";
    icmp_ln870_fu_946_p2 <= "1" when (row_ind_V_reg_511 = ap_const_lv13_1) else "0";
    icmp_ln878_fu_865_p2 <= "1" when (tmp_fu_855_p4 = ap_const_lv10_0) else "0";

    imgheight_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgheight_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_blk_n <= imgheight_empty_n;
        else 
            imgheight_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgheight_cast3_i_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imgheight_read_reg_1632),11));

    imgheight_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgheight_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_out_blk_n <= imgheight_out_full_n;
        else 
            imgheight_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgheight_out_din <= imgheight_dout;

    imgheight_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_out_write <= ap_const_logic_1;
        else 
            imgheight_out_write <= ap_const_logic_0;
        end if; 
    end process;


    imgheight_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_read <= ap_const_logic_1;
        else 
            imgheight_read <= ap_const_logic_0;
        end if; 
    end process;


    imgwidth_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgwidth_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_blk_n <= imgwidth_empty_n;
        else 
            imgwidth_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgwidth_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgwidth_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_out_blk_n <= imgwidth_out_full_n;
        else 
            imgwidth_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgwidth_out_din <= imgwidth_dout;

    imgwidth_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_out_write <= ap_const_logic_1;
        else 
            imgwidth_out_write <= ap_const_logic_0;
        end if; 
    end process;


    imgwidth_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_read <= ap_const_logic_1;
        else 
            imgwidth_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(icmp_ln878_reg_1668, icmp_ln362_fu_911_p2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((icmp_ln362_fu_911_p2 = ap_const_lv1_1) or (icmp_ln878_reg_1668 = ap_const_lv1_1)))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    low_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_blk_n <= low_threshold_empty_n;
        else 
            low_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    low_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_read <= ap_const_logic_1;
        else 
            low_threshold_read <= ap_const_logic_0;
        end if; 
    end process;


    magnitude_mat_48_blk_n_assign_proc : process(magnitude_mat_48_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln345_reg_1648, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798)
    begin
        if ((((icmp_ln345_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            magnitude_mat_48_blk_n <= magnitude_mat_48_empty_n;
        else 
            magnitude_mat_48_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    magnitude_mat_48_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln345_reg_1648, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op150_read_state7, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln345_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op150_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            magnitude_mat_48_read <= ap_const_logic_1;
        else 
            magnitude_mat_48_read <= ap_const_logic_0;
        end if; 
    end process;

    mid_1_fu_960_p3 <= 
        ap_const_lv2_0 when (icmp_ln870_fu_946_p2(0) = '1') else 
        mid_fu_156;

    nms_mat_410_blk_n_assign_proc : process(nms_mat_410_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln207_reg_1820_pp1_iter2_reg, icmp_ln870_4_reg_1849, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln870_4_reg_1849 = ap_const_lv1_0) and (icmp_ln207_reg_1820_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then 
            nms_mat_410_blk_n <= nms_mat_410_full_n;
        else 
            nms_mat_410_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    nms_mat_410_din_assign_proc : process(nms_mat_410_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op262_write_state9, p_Result_2_fu_1361_p5, ap_block_pp1_stage0_01001, p_Result_4_fu_1535_p5)
    begin
        if (((nms_mat_410_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            nms_mat_410_din <= p_Result_4_fu_1535_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_predicate_op262_write_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            nms_mat_410_din <= p_Result_2_fu_1361_p5;
        else 
            nms_mat_410_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    nms_mat_410_write_assign_proc : process(nms_mat_410_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op262_write_state9, ap_block_pp1_stage0_11001)
    begin
        if ((((nms_mat_410_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op262_write_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then 
            nms_mat_410_write <= ap_const_logic_1;
        else 
            nms_mat_410_write <= ap_const_logic_0;
        end if; 
    end process;

    op2_assign_2_fu_849_p2 <= std_logic_vector(unsigned(imgheight_cast3_i_fu_846_p1) + unsigned(ap_const_lv11_1));
    p_Result_2_fu_1361_p5 <= (grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return & P0_V_6_reg_619(13 downto 0));
    p_Result_3_fu_1374_p9 <= (((((((grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return & ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return) & ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return) & ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return) & ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return) & ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return) & ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return) & ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return);
    p_Result_4_fu_1535_p5 <= (grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return & P0_V_6_reg_619(13 downto 0));
    p_Result_s_fu_1413_p5 <= (P0_V_6_reg_619(15 downto 14) & tmp_i_fu_1395_p8);

    phase_mat_49_blk_n_assign_proc : process(phase_mat_49_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln345_reg_1648, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln207_reg_1820, cmp_i_i156_i_i_reg_1798)
    begin
        if ((((icmp_ln345_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (cmp_i_i156_i_i_reg_1798 = ap_const_lv1_1) and (icmp_ln207_reg_1820 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            phase_mat_49_blk_n <= phase_mat_49_empty_n;
        else 
            phase_mat_49_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    phase_mat_49_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln345_reg_1648, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op161_read_state7, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln345_reg_1648 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op161_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            phase_mat_49_read <= ap_const_logic_1;
        else 
            phase_mat_49_read <= ap_const_logic_0;
        end if; 
    end process;

    read_ind_V_1_fu_1554_p2 <= std_logic_vector(unsigned(read_ind_V_reg_499) + unsigned(ap_const_lv13_1));
    read_ind_V_2_fu_1586_p3 <= 
        ap_const_lv13_0 when (icmp_ln870_2_fu_1580_p2(0) = '1') else 
        read_ind_V_1_fu_1554_p2;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_V_1_fu_1501_p2 <= std_logic_vector(unsigned(row_V_reg_475) + unsigned(ap_const_lv11_1));
    row_ind_V_1_fu_1548_p2 <= std_logic_vector(unsigned(row_ind_V_reg_511) + unsigned(ap_const_lv13_1));
    row_ind_V_2_fu_1572_p3 <= 
        ap_const_lv13_0 when (icmp_ln870_1_fu_1566_p2(0) = '1') else 
        row_ind_V_1_fu_1548_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_855_p4 <= op2_assign_2_fu_849_p2(10 downto 1);
    tmp_i_fu_1395_p8 <= ((((((ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return & ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return) & ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return) & ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return) & ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return) & ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return) & ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return);
    top_1_fu_968_p3 <= 
        ap_const_lv2_2 when (icmp_ln870_fu_946_p2(0) = '1') else 
        top_fu_160;
    trunc_ln214_fu_996_p1 <= row_ind_V_reg_511(2 - 1 downto 0);
    trunc_ln215_fu_1000_p1 <= read_ind_V_reg_499(1 - 1 downto 0);
    trunc_ln231_fu_1004_p1 <= write_ind_V_reg_487(1 - 1 downto 0);
    write_ind_V_1_fu_1560_p2 <= std_logic_vector(unsigned(write_ind_V_reg_487) + unsigned(ap_const_lv13_1));
    write_ind_V_2_fu_1600_p3 <= 
        ap_const_lv13_0 when (icmp_ln870_3_fu_1594_p2(0) = '1') else 
        write_ind_V_1_fu_1560_p2;
    zext_ln222_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_2_reg_523_pp1_iter1_reg),64));
    zext_ln534_1_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_2_reg_523),64));
    zext_ln534_2_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_2_reg_523),64));
    zext_ln534_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_reg_464),64));
end behav;
