-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_s is
port (
    in_mat_421_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    in_mat_421_empty_n : IN STD_LOGIC;
    in_mat_421_read : OUT STD_LOGIC;
    dst_mat_422_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    dst_mat_422_full_n : IN STD_LOGIC;
    dst_mat_422_write : OUT STD_LOGIC;
    p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
    img_height : IN STD_LOGIC_VECTOR (9 downto 0);
    img_width : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    p_lowthreshold_ap_vld : IN STD_LOGIC;
    p_highthreshold_ap_vld : IN STD_LOGIC;
    img_height_ap_vld : IN STD_LOGIC;
    img_width_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of canny_accel_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_s is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

attribute shreg_extract : string;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_start : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_full_n : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_done : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_continue : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_idle : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_ready : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_out : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_lowthreshold_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_lowthreshold_out_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_highthreshold_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_highthreshold_out_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out1_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out1_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out2_din : STD_LOGIC_VECTOR (10 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out2_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_start : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_done : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_continue : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_idle : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_ready : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_start_out : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_start_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_in_mat_421_read : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_gaussian_mat_41_din : STD_LOGIC_VECTOR (63 downto 0);
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_gaussian_mat_41_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_read : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_read : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_out_write : STD_LOGIC;
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_out_write : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_start : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_done : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_continue : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_idle : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_ready : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_start_out : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_start_write : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gaussian_mat_41_read : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gradx_mat_42_din : STD_LOGIC_VECTOR (127 downto 0);
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gradx_mat_42_write : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_grady_mat_45_din : STD_LOGIC_VECTOR (127 downto 0);
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_grady_mat_45_write : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_read : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_read : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_out_write : STD_LOGIC;
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_out_write : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_start : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_done : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_continue : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_idle : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_ready : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx_mat_42_read : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady_mat_45_read : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx1_mat_43_din : STD_LOGIC_VECTOR (127 downto 0);
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx1_mat_43_write : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx2_mat_44_din : STD_LOGIC_VECTOR (127 downto 0);
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx2_mat_44_write : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady1_mat_46_din : STD_LOGIC_VECTOR (127 downto 0);
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady1_mat_46_write : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady2_mat_47_din : STD_LOGIC_VECTOR (127 downto 0);
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady2_mat_47_write : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_read : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_read : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out_write : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out1_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out1_write : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_out_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_start : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_full_n : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_done : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_continue : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_idle : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_ready : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_out : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_img_width_read : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_img_height_read : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_out_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_height_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_height_out_write : STD_LOGIC;
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_2_cast_out_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_2_cast_out_out_write : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_start : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_done : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_continue : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_idle : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_ready : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_gradx1_mat_43_read : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_grady1_mat_46_read : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_magnitude_mat_48_din : STD_LOGIC_VECTOR (127 downto 0);
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_magnitude_mat_48_write : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_imgheight_read : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_imgwidth_read : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_start : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_done : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_continue : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_idle : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_ready : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_src1_data_read : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_src2_data_read : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_dst_data_din : STD_LOGIC_VECTOR (63 downto 0);
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_dst_data_write : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_img_height_read : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_imgwidth_2_cast_loc_read : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_start : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_done : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_continue : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_idle : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_ready : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_start_out : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_start_write : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_magnitude_mat_48_read : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_phase_mat_49_read : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_nms_mat_410_din : STD_LOGIC_VECTOR (15 downto 0);
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_nms_mat_410_write : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_low_threshold_read : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_high_threshold_read : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_read : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_read : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_out_write : STD_LOGIC;
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_out_write : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_start : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_done : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_continue : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_idle : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_ready : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_nms_mat_410_read : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dst_mat_422_din : STD_LOGIC_VECTOR (63 downto 0);
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dst_mat_422_write : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_imgheight_read : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_imgwidth_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal p_lowthreshold_c_full_n : STD_LOGIC;
    signal p_lowthreshold_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_lowthreshold_c_empty_n : STD_LOGIC;
    signal p_highthreshold_c_full_n : STD_LOGIC;
    signal p_highthreshold_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_highthreshold_c_empty_n : STD_LOGIC;
    signal img_height_c_full_n : STD_LOGIC;
    signal img_height_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_height_c_empty_n : STD_LOGIC;
    signal img_height_c20_full_n : STD_LOGIC;
    signal img_height_c20_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_height_c20_empty_n : STD_LOGIC;
    signal img_width_c_full_n : STD_LOGIC;
    signal img_width_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_width_c_empty_n : STD_LOGIC;
    signal img_width_c21_full_n : STD_LOGIC;
    signal img_width_c21_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_width_c21_empty_n : STD_LOGIC;
    signal gaussian_mat_data_full_n : STD_LOGIC;
    signal gaussian_mat_data_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal gaussian_mat_data_empty_n : STD_LOGIC;
    signal img_height_c22_full_n : STD_LOGIC;
    signal img_height_c22_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_height_c22_empty_n : STD_LOGIC;
    signal img_width_c23_full_n : STD_LOGIC;
    signal img_width_c23_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_width_c23_empty_n : STD_LOGIC;
    signal gradx_mat_data_full_n : STD_LOGIC;
    signal gradx_mat_data_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal gradx_mat_data_empty_n : STD_LOGIC;
    signal grady_mat_data_full_n : STD_LOGIC;
    signal grady_mat_data_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal grady_mat_data_empty_n : STD_LOGIC;
    signal img_height_c24_full_n : STD_LOGIC;
    signal img_height_c24_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_height_c24_empty_n : STD_LOGIC;
    signal img_width_c25_full_n : STD_LOGIC;
    signal img_width_c25_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_width_c25_empty_n : STD_LOGIC;
    signal p_src_matx_data_full_n : STD_LOGIC;
    signal p_src_matx_data_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal p_src_matx_data_empty_n : STD_LOGIC;
    signal p_src1_data_full_n : STD_LOGIC;
    signal p_src1_data_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal p_src1_data_empty_n : STD_LOGIC;
    signal p_src_maty_data_full_n : STD_LOGIC;
    signal p_src_maty_data_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal p_src_maty_data_empty_n : STD_LOGIC;
    signal p_src2_data_full_n : STD_LOGIC;
    signal p_src2_data_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal p_src2_data_empty_n : STD_LOGIC;
    signal img_height_c26_full_n : STD_LOGIC;
    signal img_height_c26_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_height_c26_empty_n : STD_LOGIC;
    signal img_height_c27_full_n : STD_LOGIC;
    signal img_height_c27_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_height_c27_empty_n : STD_LOGIC;
    signal img_width_c28_full_n : STD_LOGIC;
    signal img_width_c28_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_width_c28_empty_n : STD_LOGIC;
    signal imgwidth_c_full_n : STD_LOGIC;
    signal imgwidth_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgwidth_c_empty_n : STD_LOGIC;
    signal height_c_full_n : STD_LOGIC;
    signal height_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal height_c_empty_n : STD_LOGIC;
    signal imgwidth_2_cast_loc_c_full_n : STD_LOGIC;
    signal imgwidth_2_cast_loc_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgwidth_2_cast_loc_c_empty_n : STD_LOGIC;
    signal p_dst_mat_data_full_n : STD_LOGIC;
    signal p_dst_mat_data_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal p_dst_mat_data_empty_n : STD_LOGIC;
    signal p_dst_data_full_n : STD_LOGIC;
    signal p_dst_data_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal p_dst_data_empty_n : STD_LOGIC;
    signal nms_mat_data_full_n : STD_LOGIC;
    signal nms_mat_data_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal nms_mat_data_empty_n : STD_LOGIC;
    signal img_height_c29_full_n : STD_LOGIC;
    signal img_height_c29_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_height_c29_empty_n : STD_LOGIC;
    signal img_width_c30_full_n : STD_LOGIC;
    signal img_width_c30_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_width_c30_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_full_n : STD_LOGIC;
    signal start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_empty_n : STD_LOGIC;
    signal start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_full_n : STD_LOGIC;
    signal start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_empty_n : STD_LOGIC;
    signal start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_full_n : STD_LOGIC;
    signal start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_empty_n : STD_LOGIC;
    signal start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_full_n : STD_LOGIC;
    signal start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_empty_n : STD_LOGIC;
    signal start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_full_n : STD_LOGIC;
    signal start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_empty_n : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_start_full_n : STD_LOGIC;
    signal xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_start_write : STD_LOGIC;
    signal start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_full_n : STD_LOGIC;
    signal start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_empty_n : STD_LOGIC;
    signal start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_full_n : STD_LOGIC;
    signal start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_empty_n : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_start_full_n : STD_LOGIC;
    signal xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_start_write : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_start_full_n : STD_LOGIC;
    signal xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_start_write : STD_LOGIC;
    signal start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_full_n : STD_LOGIC;
    signal start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_empty_n : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_start_full_n : STD_LOGIC;
    signal xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_start_write : STD_LOGIC;

    component canny_accel_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        img_height : IN STD_LOGIC_VECTOR (9 downto 0);
        img_width : IN STD_LOGIC_VECTOR (10 downto 0);
        p_lowthreshold_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_lowthreshold_out_full_n : IN STD_LOGIC;
        p_lowthreshold_out_write : OUT STD_LOGIC;
        p_highthreshold_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold_out_full_n : IN STD_LOGIC;
        p_highthreshold_out_write : OUT STD_LOGIC;
        img_height_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_height_out_full_n : IN STD_LOGIC;
        img_height_out_write : OUT STD_LOGIC;
        img_height_out1_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_height_out1_full_n : IN STD_LOGIC;
        img_height_out1_write : OUT STD_LOGIC;
        img_width_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_width_out_full_n : IN STD_LOGIC;
        img_width_out_write : OUT STD_LOGIC;
        img_width_out2_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_width_out2_full_n : IN STD_LOGIC;
        img_width_out2_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_mat_421_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        in_mat_421_empty_n : IN STD_LOGIC;
        in_mat_421_read : OUT STD_LOGIC;
        gaussian_mat_41_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        gaussian_mat_41_full_n : IN STD_LOGIC;
        gaussian_mat_41_write : OUT STD_LOGIC;
        img_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_height_empty_n : IN STD_LOGIC;
        img_height_read : OUT STD_LOGIC;
        img_width_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        img_width_empty_n : IN STD_LOGIC;
        img_width_read : OUT STD_LOGIC;
        img_height_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_height_out_full_n : IN STD_LOGIC;
        img_height_out_write : OUT STD_LOGIC;
        img_width_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_width_out_full_n : IN STD_LOGIC;
        img_width_out_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        gaussian_mat_41_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        gaussian_mat_41_empty_n : IN STD_LOGIC;
        gaussian_mat_41_read : OUT STD_LOGIC;
        gradx_mat_42_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        gradx_mat_42_full_n : IN STD_LOGIC;
        gradx_mat_42_write : OUT STD_LOGIC;
        grady_mat_45_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        grady_mat_45_full_n : IN STD_LOGIC;
        grady_mat_45_write : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC;
        imgheight_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        imgheight_out_full_n : IN STD_LOGIC;
        imgheight_out_write : OUT STD_LOGIC;
        imgwidth_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        imgwidth_out_full_n : IN STD_LOGIC;
        imgwidth_out_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gradx_mat_42_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        gradx_mat_42_empty_n : IN STD_LOGIC;
        gradx_mat_42_read : OUT STD_LOGIC;
        grady_mat_45_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        grady_mat_45_empty_n : IN STD_LOGIC;
        grady_mat_45_read : OUT STD_LOGIC;
        gradx1_mat_43_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        gradx1_mat_43_full_n : IN STD_LOGIC;
        gradx1_mat_43_write : OUT STD_LOGIC;
        gradx2_mat_44_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        gradx2_mat_44_full_n : IN STD_LOGIC;
        gradx2_mat_44_write : OUT STD_LOGIC;
        grady1_mat_46_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        grady1_mat_46_full_n : IN STD_LOGIC;
        grady1_mat_46_write : OUT STD_LOGIC;
        grady2_mat_47_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        grady2_mat_47_full_n : IN STD_LOGIC;
        grady2_mat_47_write : OUT STD_LOGIC;
        img_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_height_empty_n : IN STD_LOGIC;
        img_height_read : OUT STD_LOGIC;
        img_width_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        img_width_empty_n : IN STD_LOGIC;
        img_width_read : OUT STD_LOGIC;
        img_height_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_height_out_full_n : IN STD_LOGIC;
        img_height_out_write : OUT STD_LOGIC;
        img_height_out1_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_height_out1_full_n : IN STD_LOGIC;
        img_height_out1_write : OUT STD_LOGIC;
        img_width_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_width_out_full_n : IN STD_LOGIC;
        img_width_out_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_width_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        img_width_empty_n : IN STD_LOGIC;
        img_width_read : OUT STD_LOGIC;
        img_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_height_empty_n : IN STD_LOGIC;
        img_height_read : OUT STD_LOGIC;
        imgwidth_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgwidth_out_full_n : IN STD_LOGIC;
        imgwidth_out_write : OUT STD_LOGIC;
        height_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        height_out_full_n : IN STD_LOGIC;
        height_out_write : OUT STD_LOGIC;
        imgwidth_2_cast_out_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgwidth_2_cast_out_out_full_n : IN STD_LOGIC;
        imgwidth_2_cast_out_out_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gradx1_mat_43_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        gradx1_mat_43_empty_n : IN STD_LOGIC;
        gradx1_mat_43_read : OUT STD_LOGIC;
        grady1_mat_46_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        grady1_mat_46_empty_n : IN STD_LOGIC;
        grady1_mat_46_read : OUT STD_LOGIC;
        magnitude_mat_48_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        magnitude_mat_48_full_n : IN STD_LOGIC;
        magnitude_mat_48_write : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC );
    end component;


    component canny_accel_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src1_data_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        p_src1_data_empty_n : IN STD_LOGIC;
        p_src1_data_read : OUT STD_LOGIC;
        p_src2_data_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        p_src2_data_empty_n : IN STD_LOGIC;
        p_src2_data_read : OUT STD_LOGIC;
        p_dst_data_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_dst_data_full_n : IN STD_LOGIC;
        p_dst_data_write : OUT STD_LOGIC;
        img_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_height_empty_n : IN STD_LOGIC;
        img_height_read : OUT STD_LOGIC;
        imgwidth_2_cast_loc_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgwidth_2_cast_loc_empty_n : IN STD_LOGIC;
        imgwidth_2_cast_loc_read : OUT STD_LOGIC );
    end component;


    component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        magnitude_mat_48_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        magnitude_mat_48_empty_n : IN STD_LOGIC;
        magnitude_mat_48_read : OUT STD_LOGIC;
        phase_mat_49_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        phase_mat_49_empty_n : IN STD_LOGIC;
        phase_mat_49_read : OUT STD_LOGIC;
        nms_mat_410_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        nms_mat_410_full_n : IN STD_LOGIC;
        nms_mat_410_write : OUT STD_LOGIC;
        low_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        low_threshold_empty_n : IN STD_LOGIC;
        low_threshold_read : OUT STD_LOGIC;
        high_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        high_threshold_empty_n : IN STD_LOGIC;
        high_threshold_read : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC;
        imgheight_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        imgheight_out_full_n : IN STD_LOGIC;
        imgheight_out_write : OUT STD_LOGIC;
        imgwidth_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        imgwidth_out_full_n : IN STD_LOGIC;
        imgwidth_out_write : OUT STD_LOGIC );
    end component;


    component canny_accel_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        nms_mat_410_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        nms_mat_410_empty_n : IN STD_LOGIC;
        nms_mat_410_read : OUT STD_LOGIC;
        dst_mat_422_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dst_mat_422_full_n : IN STD_LOGIC;
        dst_mat_422_write : OUT STD_LOGIC;
        imgheight_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        imgheight_empty_n : IN STD_LOGIC;
        imgheight_read : OUT STD_LOGIC;
        imgwidth_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        imgwidth_empty_n : IN STD_LOGIC;
        imgwidth_read : OUT STD_LOGIC );
    end component;


    component canny_accel_fifo_w8_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w10_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w11_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w64_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w128_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w10_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w11_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w8_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w10_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w64_d480_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_falsebkb IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component canny_accel_start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0 : component canny_accel_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_start,
        start_full_n => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_full_n,
        ap_done => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_done,
        ap_continue => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_continue,
        ap_idle => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_idle,
        ap_ready => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_ready,
        start_out => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_out,
        start_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_write,
        p_lowthreshold => p_lowthreshold,
        p_highthreshold => p_highthreshold,
        img_height => img_height,
        img_width => img_width,
        p_lowthreshold_out_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_lowthreshold_out_din,
        p_lowthreshold_out_full_n => p_lowthreshold_c_full_n,
        p_lowthreshold_out_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_lowthreshold_out_write,
        p_highthreshold_out_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_highthreshold_out_din,
        p_highthreshold_out_full_n => p_highthreshold_c_full_n,
        p_highthreshold_out_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_highthreshold_out_write,
        img_height_out_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out_din,
        img_height_out_full_n => img_height_c_full_n,
        img_height_out_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out_write,
        img_height_out1_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out1_din,
        img_height_out1_full_n => img_height_c20_full_n,
        img_height_out1_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out1_write,
        img_width_out_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out_din,
        img_width_out_full_n => img_width_c_full_n,
        img_width_out_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out_write,
        img_width_out2_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out2_din,
        img_width_out2_full_n => img_width_c21_full_n,
        img_width_out2_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out2_write);

    xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0 : component canny_accel_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_start,
        start_full_n => start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_full_n,
        ap_done => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_done,
        ap_continue => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_continue,
        ap_idle => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_idle,
        ap_ready => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_ready,
        start_out => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_start_out,
        start_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_start_write,
        in_mat_421_dout => in_mat_421_dout,
        in_mat_421_empty_n => in_mat_421_empty_n,
        in_mat_421_read => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_in_mat_421_read,
        gaussian_mat_41_din => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_gaussian_mat_41_din,
        gaussian_mat_41_full_n => gaussian_mat_data_full_n,
        gaussian_mat_41_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_gaussian_mat_41_write,
        img_height_dout => img_height_c_dout,
        img_height_empty_n => img_height_c_empty_n,
        img_height_read => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_read,
        img_width_dout => img_width_c_dout,
        img_width_empty_n => img_width_c_empty_n,
        img_width_read => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_read,
        img_height_out_din => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_out_din,
        img_height_out_full_n => img_height_c22_full_n,
        img_height_out_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_out_write,
        img_width_out_din => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_out_din,
        img_width_out_full_n => img_width_c23_full_n,
        img_width_out_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_out_write);

    xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0 : component canny_accel_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_start,
        start_full_n => start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_full_n,
        ap_done => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_done,
        ap_continue => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_continue,
        ap_idle => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_idle,
        ap_ready => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_ready,
        start_out => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_start_out,
        start_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_start_write,
        gaussian_mat_41_dout => gaussian_mat_data_dout,
        gaussian_mat_41_empty_n => gaussian_mat_data_empty_n,
        gaussian_mat_41_read => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gaussian_mat_41_read,
        gradx_mat_42_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gradx_mat_42_din,
        gradx_mat_42_full_n => gradx_mat_data_full_n,
        gradx_mat_42_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gradx_mat_42_write,
        grady_mat_45_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_grady_mat_45_din,
        grady_mat_45_full_n => grady_mat_data_full_n,
        grady_mat_45_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_grady_mat_45_write,
        imgheight_dout => img_height_c22_dout,
        imgheight_empty_n => img_height_c22_empty_n,
        imgheight_read => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_read,
        imgwidth_dout => img_width_c23_dout,
        imgwidth_empty_n => img_width_c23_empty_n,
        imgwidth_read => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_read,
        imgheight_out_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_out_din,
        imgheight_out_full_n => img_height_c24_full_n,
        imgheight_out_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_out_write,
        imgwidth_out_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_out_din,
        imgwidth_out_full_n => img_width_c25_full_n,
        imgwidth_out_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_out_write);

    xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0 : component canny_accel_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_start,
        ap_done => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_done,
        ap_continue => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_continue,
        ap_idle => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_idle,
        ap_ready => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_ready,
        gradx_mat_42_dout => gradx_mat_data_dout,
        gradx_mat_42_empty_n => gradx_mat_data_empty_n,
        gradx_mat_42_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx_mat_42_read,
        grady_mat_45_dout => grady_mat_data_dout,
        grady_mat_45_empty_n => grady_mat_data_empty_n,
        grady_mat_45_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady_mat_45_read,
        gradx1_mat_43_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx1_mat_43_din,
        gradx1_mat_43_full_n => p_src_matx_data_full_n,
        gradx1_mat_43_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx1_mat_43_write,
        gradx2_mat_44_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx2_mat_44_din,
        gradx2_mat_44_full_n => p_src1_data_full_n,
        gradx2_mat_44_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx2_mat_44_write,
        grady1_mat_46_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady1_mat_46_din,
        grady1_mat_46_full_n => p_src_maty_data_full_n,
        grady1_mat_46_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady1_mat_46_write,
        grady2_mat_47_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady2_mat_47_din,
        grady2_mat_47_full_n => p_src2_data_full_n,
        grady2_mat_47_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady2_mat_47_write,
        img_height_dout => img_height_c24_dout,
        img_height_empty_n => img_height_c24_empty_n,
        img_height_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_read,
        img_width_dout => img_width_c25_dout,
        img_width_empty_n => img_width_c25_empty_n,
        img_width_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_read,
        img_height_out_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out_din,
        img_height_out_full_n => img_height_c26_full_n,
        img_height_out_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out_write,
        img_height_out1_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out1_din,
        img_height_out1_full_n => img_height_c27_full_n,
        img_height_out1_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out1_write,
        img_width_out_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_out_din,
        img_width_out_full_n => img_width_c28_full_n,
        img_width_out_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_out_write);

    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0 : component canny_accel_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_start,
        start_full_n => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_full_n,
        ap_done => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_done,
        ap_continue => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_continue,
        ap_idle => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_idle,
        ap_ready => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_ready,
        start_out => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_out,
        start_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_write,
        img_width_dout => img_width_c21_dout,
        img_width_empty_n => img_width_c21_empty_n,
        img_width_read => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_img_width_read,
        img_height_dout => img_height_c20_dout,
        img_height_empty_n => img_height_c20_empty_n,
        img_height_read => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_img_height_read,
        imgwidth_out_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_out_din,
        imgwidth_out_full_n => imgwidth_c_full_n,
        imgwidth_out_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_out_write,
        height_out_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_height_out_din,
        height_out_full_n => height_c_full_n,
        height_out_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_height_out_write,
        imgwidth_2_cast_out_out_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_2_cast_out_out_din,
        imgwidth_2_cast_out_out_full_n => imgwidth_2_cast_loc_c_full_n,
        imgwidth_2_cast_out_out_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_2_cast_out_out_write);

    xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0 : component canny_accel_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_start,
        ap_done => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_done,
        ap_continue => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_continue,
        ap_idle => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_idle,
        ap_ready => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_ready,
        gradx1_mat_43_dout => p_src_matx_data_dout,
        gradx1_mat_43_empty_n => p_src_matx_data_empty_n,
        gradx1_mat_43_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_gradx1_mat_43_read,
        grady1_mat_46_dout => p_src_maty_data_dout,
        grady1_mat_46_empty_n => p_src_maty_data_empty_n,
        grady1_mat_46_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_grady1_mat_46_read,
        magnitude_mat_48_din => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_magnitude_mat_48_din,
        magnitude_mat_48_full_n => p_dst_mat_data_full_n,
        magnitude_mat_48_write => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_magnitude_mat_48_write,
        imgheight_dout => height_c_dout,
        imgheight_empty_n => height_c_empty_n,
        imgheight_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_imgheight_read,
        imgwidth_dout => imgwidth_c_dout,
        imgwidth_empty_n => imgwidth_c_empty_n,
        imgwidth_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_imgwidth_read);

    xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0 : component canny_accel_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_start,
        ap_done => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_done,
        ap_continue => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_continue,
        ap_idle => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_idle,
        ap_ready => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_ready,
        p_src1_data_dout => p_src1_data_dout,
        p_src1_data_empty_n => p_src1_data_empty_n,
        p_src1_data_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_src1_data_read,
        p_src2_data_dout => p_src2_data_dout,
        p_src2_data_empty_n => p_src2_data_empty_n,
        p_src2_data_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_src2_data_read,
        p_dst_data_din => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_dst_data_din,
        p_dst_data_full_n => p_dst_data_full_n,
        p_dst_data_write => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_dst_data_write,
        img_height_dout => img_height_c26_dout,
        img_height_empty_n => img_height_c26_empty_n,
        img_height_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_img_height_read,
        imgwidth_2_cast_loc_dout => imgwidth_2_cast_loc_c_dout,
        imgwidth_2_cast_loc_empty_n => imgwidth_2_cast_loc_c_empty_n,
        imgwidth_2_cast_loc_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_imgwidth_2_cast_loc_read);

    xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0 : component canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_start,
        start_full_n => start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_full_n,
        ap_done => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_done,
        ap_continue => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_continue,
        ap_idle => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_idle,
        ap_ready => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_ready,
        start_out => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_start_out,
        start_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_start_write,
        magnitude_mat_48_dout => p_dst_mat_data_dout,
        magnitude_mat_48_empty_n => p_dst_mat_data_empty_n,
        magnitude_mat_48_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_magnitude_mat_48_read,
        phase_mat_49_dout => p_dst_data_dout,
        phase_mat_49_empty_n => p_dst_data_empty_n,
        phase_mat_49_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_phase_mat_49_read,
        nms_mat_410_din => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_nms_mat_410_din,
        nms_mat_410_full_n => nms_mat_data_full_n,
        nms_mat_410_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_nms_mat_410_write,
        low_threshold_dout => p_lowthreshold_c_dout,
        low_threshold_empty_n => p_lowthreshold_c_empty_n,
        low_threshold_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_low_threshold_read,
        high_threshold_dout => p_highthreshold_c_dout,
        high_threshold_empty_n => p_highthreshold_c_empty_n,
        high_threshold_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_high_threshold_read,
        imgheight_dout => img_height_c27_dout,
        imgheight_empty_n => img_height_c27_empty_n,
        imgheight_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_read,
        imgwidth_dout => img_width_c28_dout,
        imgwidth_empty_n => img_width_c28_empty_n,
        imgwidth_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_read,
        imgheight_out_din => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_out_din,
        imgheight_out_full_n => img_height_c29_full_n,
        imgheight_out_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_out_write,
        imgwidth_out_din => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_out_din,
        imgwidth_out_full_n => img_width_c30_full_n,
        imgwidth_out_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_out_write);

    xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0 : component canny_accel_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_start,
        ap_done => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_done,
        ap_continue => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_continue,
        ap_idle => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_idle,
        ap_ready => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_ready,
        nms_mat_410_dout => nms_mat_data_dout,
        nms_mat_410_empty_n => nms_mat_data_empty_n,
        nms_mat_410_read => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_nms_mat_410_read,
        dst_mat_422_din => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dst_mat_422_din,
        dst_mat_422_full_n => dst_mat_422_full_n,
        dst_mat_422_write => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dst_mat_422_write,
        imgheight_dout => img_height_c29_dout,
        imgheight_empty_n => img_height_c29_empty_n,
        imgheight_read => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_imgheight_read,
        imgwidth_dout => img_width_c30_dout,
        imgwidth_empty_n => img_width_c30_empty_n,
        imgwidth_read => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_imgwidth_read);

    p_lowthreshold_c_U : component canny_accel_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_lowthreshold_out_din,
        if_full_n => p_lowthreshold_c_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_lowthreshold_out_write,
        if_dout => p_lowthreshold_c_dout,
        if_empty_n => p_lowthreshold_c_empty_n,
        if_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_low_threshold_read);

    p_highthreshold_c_U : component canny_accel_fifo_w8_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_highthreshold_out_din,
        if_full_n => p_highthreshold_c_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_p_highthreshold_out_write,
        if_dout => p_highthreshold_c_dout,
        if_empty_n => p_highthreshold_c_empty_n,
        if_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_high_threshold_read);

    img_height_c_U : component canny_accel_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out_din,
        if_full_n => img_height_c_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out_write,
        if_dout => img_height_c_dout,
        if_empty_n => img_height_c_empty_n,
        if_read => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_read);

    img_height_c20_U : component canny_accel_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out1_din,
        if_full_n => img_height_c20_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_height_out1_write,
        if_dout => img_height_c20_dout,
        if_empty_n => img_height_c20_empty_n,
        if_read => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_img_height_read);

    img_width_c_U : component canny_accel_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out_din,
        if_full_n => img_width_c_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out_write,
        if_dout => img_width_c_dout,
        if_empty_n => img_width_c_empty_n,
        if_read => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_read);

    img_width_c21_U : component canny_accel_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out2_din,
        if_full_n => img_width_c21_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_img_width_out2_write,
        if_dout => img_width_c21_dout,
        if_empty_n => img_width_c21_empty_n,
        if_read => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_img_width_read);

    gaussian_mat_data_U : component canny_accel_fifo_w64_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_gaussian_mat_41_din,
        if_full_n => gaussian_mat_data_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_gaussian_mat_41_write,
        if_dout => gaussian_mat_data_dout,
        if_empty_n => gaussian_mat_data_empty_n,
        if_read => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gaussian_mat_41_read);

    img_height_c22_U : component canny_accel_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_out_din,
        if_full_n => img_height_c22_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_height_out_write,
        if_dout => img_height_c22_dout,
        if_empty_n => img_height_c22_empty_n,
        if_read => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_read);

    img_width_c23_U : component canny_accel_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_out_din,
        if_full_n => img_width_c23_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_img_width_out_write,
        if_dout => img_width_c23_dout,
        if_empty_n => img_width_c23_empty_n,
        if_read => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_read);

    gradx_mat_data_U : component canny_accel_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gradx_mat_42_din,
        if_full_n => gradx_mat_data_full_n,
        if_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_gradx_mat_42_write,
        if_dout => gradx_mat_data_dout,
        if_empty_n => gradx_mat_data_empty_n,
        if_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx_mat_42_read);

    grady_mat_data_U : component canny_accel_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_grady_mat_45_din,
        if_full_n => grady_mat_data_full_n,
        if_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_grady_mat_45_write,
        if_dout => grady_mat_data_dout,
        if_empty_n => grady_mat_data_empty_n,
        if_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady_mat_45_read);

    img_height_c24_U : component canny_accel_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_out_din,
        if_full_n => img_height_c24_full_n,
        if_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgheight_out_write,
        if_dout => img_height_c24_dout,
        if_empty_n => img_height_c24_empty_n,
        if_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_read);

    img_width_c25_U : component canny_accel_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_out_din,
        if_full_n => img_width_c25_full_n,
        if_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_imgwidth_out_write,
        if_dout => img_width_c25_dout,
        if_empty_n => img_width_c25_empty_n,
        if_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_read);

    p_src_matx_data_U : component canny_accel_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx1_mat_43_din,
        if_full_n => p_src_matx_data_full_n,
        if_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx1_mat_43_write,
        if_dout => p_src_matx_data_dout,
        if_empty_n => p_src_matx_data_empty_n,
        if_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_gradx1_mat_43_read);

    p_src1_data_U : component canny_accel_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx2_mat_44_din,
        if_full_n => p_src1_data_full_n,
        if_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_gradx2_mat_44_write,
        if_dout => p_src1_data_dout,
        if_empty_n => p_src1_data_empty_n,
        if_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_src1_data_read);

    p_src_maty_data_U : component canny_accel_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady1_mat_46_din,
        if_full_n => p_src_maty_data_full_n,
        if_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady1_mat_46_write,
        if_dout => p_src_maty_data_dout,
        if_empty_n => p_src_maty_data_empty_n,
        if_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_grady1_mat_46_read);

    p_src2_data_U : component canny_accel_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady2_mat_47_din,
        if_full_n => p_src2_data_full_n,
        if_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_grady2_mat_47_write,
        if_dout => p_src2_data_dout,
        if_empty_n => p_src2_data_empty_n,
        if_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_src2_data_read);

    img_height_c26_U : component canny_accel_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out_din,
        if_full_n => img_height_c26_full_n,
        if_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out_write,
        if_dout => img_height_c26_dout,
        if_empty_n => img_height_c26_empty_n,
        if_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_img_height_read);

    img_height_c27_U : component canny_accel_fifo_w10_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out1_din,
        if_full_n => img_height_c27_full_n,
        if_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_height_out1_write,
        if_dout => img_height_c27_dout,
        if_empty_n => img_height_c27_empty_n,
        if_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_read);

    img_width_c28_U : component canny_accel_fifo_w11_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_out_din,
        if_full_n => img_width_c28_full_n,
        if_write => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_img_width_out_write,
        if_dout => img_width_c28_dout,
        if_empty_n => img_width_c28_empty_n,
        if_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_read);

    imgwidth_c_U : component canny_accel_fifo_w8_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_out_din,
        if_full_n => imgwidth_c_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_out_write,
        if_dout => imgwidth_c_dout,
        if_empty_n => imgwidth_c_empty_n,
        if_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_imgwidth_read);

    height_c_U : component canny_accel_fifo_w10_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_height_out_din,
        if_full_n => height_c_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_height_out_write,
        if_dout => height_c_dout,
        if_empty_n => height_c_empty_n,
        if_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_imgheight_read);

    imgwidth_2_cast_loc_c_U : component canny_accel_fifo_w8_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_2_cast_out_out_din,
        if_full_n => imgwidth_2_cast_loc_c_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_imgwidth_2_cast_out_out_write,
        if_dout => imgwidth_2_cast_loc_c_dout,
        if_empty_n => imgwidth_2_cast_loc_c_empty_n,
        if_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_imgwidth_2_cast_loc_read);

    p_dst_mat_data_U : component canny_accel_fifo_w128_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_magnitude_mat_48_din,
        if_full_n => p_dst_mat_data_full_n,
        if_write => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_magnitude_mat_48_write,
        if_dout => p_dst_mat_data_dout,
        if_empty_n => p_dst_mat_data_empty_n,
        if_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_magnitude_mat_48_read);

    p_dst_data_U : component canny_accel_fifo_w64_d480_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_dst_data_din,
        if_full_n => p_dst_data_full_n,
        if_write => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_p_dst_data_write,
        if_dout => p_dst_data_dout,
        if_empty_n => p_dst_data_empty_n,
        if_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_phase_mat_49_read);

    nms_mat_data_U : component canny_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_nms_mat_410_din,
        if_full_n => nms_mat_data_full_n,
        if_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_nms_mat_410_write,
        if_dout => nms_mat_data_dout,
        if_empty_n => nms_mat_data_empty_n,
        if_read => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_nms_mat_410_read);

    img_height_c29_U : component canny_accel_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_out_din,
        if_full_n => img_height_c29_full_n,
        if_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgheight_out_write,
        if_dout => img_height_c29_dout,
        if_empty_n => img_height_c29_empty_n,
        if_read => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_imgheight_read);

    img_width_c30_U : component canny_accel_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_out_din,
        if_full_n => img_width_c30_full_n,
        if_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_imgwidth_out_write,
        if_dout => img_width_c30_dout,
        if_empty_n => img_width_c30_empty_n,
        if_read => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_imgwidth_read);

    start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_U : component canny_accel_start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_din,
        if_full_n => start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_write,
        if_dout => start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_dout,
        if_empty_n => start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_empty_n,
        if_read => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_ready);

    start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_falsebkb_U : component canny_accel_start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_falsebkb
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_din,
        if_full_n => start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_write,
        if_dout => start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_dout,
        if_empty_n => start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_empty_n,
        if_read => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_ready);

    start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_U : component canny_accel_start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_din,
        if_full_n => start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_write,
        if_dout => start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_dout,
        if_empty_n => start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_empty_n,
        if_read => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_ready);

    start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_U : component canny_accel_start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_din,
        if_full_n => start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_full_n,
        if_write => xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_start_write,
        if_dout => start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_dout,
        if_empty_n => start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_empty_n,
        if_read => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_ready);

    start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_U : component canny_accel_start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_din,
        if_full_n => start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_full_n,
        if_write => xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_start_write,
        if_dout => start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_dout,
        if_empty_n => start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_empty_n,
        if_read => xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_ready);

    start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_U : component canny_accel_start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_din,
        if_full_n => start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_write,
        if_dout => start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_dout,
        if_empty_n => start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_empty_n,
        if_read => xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_ready);

    start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_U : component canny_accel_start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_din,
        if_full_n => start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_full_n,
        if_write => xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_write,
        if_dout => start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_dout,
        if_empty_n => start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_empty_n,
        if_read => xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_ready);

    start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_U : component canny_accel_start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_din,
        if_full_n => start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_full_n,
        if_write => xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_start_write,
        if_dout => start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dout,
        if_empty_n => start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_empty_n,
        if_read => xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_ready);




    ap_done <= xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_done;
    ap_idle <= (xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_idle and xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_idle and xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_idle and xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_idle and xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_idle and xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_idle and xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_idle and xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_idle and xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_idle);
    ap_ready <= xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_done;
    ap_sync_ready <= xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_ready;
    dst_mat_422_din <= xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dst_mat_422_din;
    dst_mat_422_write <= xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_dst_mat_422_write;
    in_mat_421_read <= xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_in_mat_421_read;
    start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_continue <= ap_const_logic_1;
    xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_ap_start <= start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_empty_n;
    xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_start_full_n <= ap_const_logic_1;
    xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_start_write <= ap_const_logic_0;
    xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_continue <= ap_const_logic_1;
    xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_ap_start <= start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_empty_n;
    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_continue <= ap_const_logic_1;
    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_ap_start <= start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_empty_n;
    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_start_full_n <= (start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_full_n and start_for_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_U0_full_n);
    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_continue <= ap_const_logic_1;
    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_ap_start <= ap_start;
    xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_entry53_U0_start_full_n <= (start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_full_n and start_for_xFCannyKernel_0_11_0_800_1280_0_13_8_32_2_2_24_24_160_2_480_3_false_Block_split26_proc_U0_full_n and start_for_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_U0_full_n);
    xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_continue <= ap_const_logic_1;
    xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_ap_start <= start_for_xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_empty_n;
    xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_start_full_n <= ap_const_logic_1;
    xFDuplicate_rows_3_800_1280_4_8_2_2_2_2_2_2_32_160_U0_start_write <= ap_const_logic_0;
    xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_continue <= ap_const_logic_1;
    xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_ap_start <= start_for_xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_empty_n;
    xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_start_full_n <= ap_const_logic_1;
    xFMagnitudeKernel_3_3_800_1280_4_4_8_2_2_2_32_32_160_U0_start_write <= ap_const_logic_0;
    xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_continue <= ap_continue;
    xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_ap_start <= start_for_xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_empty_n;
    xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_start_full_n <= ap_const_logic_1;
    xFPackNMS_11_11_800_1280_13_13_8_32_2_2_6_24_U0_start_write <= ap_const_logic_0;
    xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_continue <= ap_const_logic_1;
    xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_ap_start <= start_for_xFSobel_0_3_800_1280_0_4_8_2_2_2_24_32_3_false_U0_empty_n;
    xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_continue <= ap_const_logic_1;
    xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_ap_start <= start_for_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_U0_empty_n;
end behav;
