-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_AxiStream2MatStream_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ldata1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    ldata1_empty_n : IN STD_LOGIC;
    ldata1_read : OUT STD_LOGIC;
    in_mat_421_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    in_mat_421_full_n : IN STD_LOGIC;
    in_mat_421_write : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_bound_per_npc_dout : IN STD_LOGIC_VECTOR (28 downto 0);
    cols_bound_per_npc_empty_n : IN STD_LOGIC;
    cols_bound_per_npc_read : OUT STD_LOGIC;
    last_blk_width : IN STD_LOGIC_VECTOR (6 downto 0) );
end;


architecture behav of canny_accel_AxiStream2MatStream_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv30_3FFFFFFF : STD_LOGIC_VECTOR (29 downto 0) := "111111111111111111111111111111";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ldata1_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1054_reg_807 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_reg_816 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_mat_421_blk_n : STD_LOGIC;
    signal icmp_ln1084_reg_892 : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_blk_n : STD_LOGIC;
    signal cols_bound_per_npc_blk_n : STD_LOGIC;
    signal j_reg_135 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_146 : STD_LOGIC_VECTOR (30 downto 0);
    signal last_blk_width_read_reg_771 : STD_LOGIC_VECTOR (6 downto 0);
    signal cols_bound_per_npc_cast2_i_fu_176_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_bound_per_npc_cast2_i_reg_777 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_reg_782 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_cast_i_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_cast_i_reg_787 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub2_i_fu_204_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub2_i_reg_792 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1074_fu_210_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1074_reg_797 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1054_fu_226_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op109_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1054_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_reg_811 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_1_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_1_reg_820 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_1_fu_305_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_1_reg_827 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_2_fu_309_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_2_reg_835 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1066_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1066_reg_841 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1067_fu_330_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1067_reg_846 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln674_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_fu_350_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_reg_858 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln674_1_fu_378_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln674_1_reg_865 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln414_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_870 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln414_fu_390_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln414_reg_878 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln414_1_fu_394_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln414_1_reg_886 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln1084_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_420_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_15_fu_715_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_16_fu_500_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal rem_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_2_fu_313_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_fu_398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_100 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal cols_bound_per_npc_cast2_i_fu_176_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal cols_bound_per_npc_cast_i_fu_184_p0 : STD_LOGIC_VECTOR (28 downto 0);
    signal cols_bound_per_npc_cast_i_fu_184_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_i_fu_194_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal last_blk_width_cast4_i_fu_180_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1036_fu_232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xf_bits_per_clock_fu_250_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ptr_width_minus_fu_265_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1060_fu_257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1074_fu_282_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1074_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1074_fu_293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_334_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1060_1_fu_261_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1071_fu_354_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1071_1_fu_368_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1071_fu_364_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_3_fu_372_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln1071_fu_360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1061_fu_272_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1086_fu_414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln674_4_fu_441_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_6_fu_450_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_85_fu_431_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln674_5_fu_445_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_3_fu_454_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_5_fu_468_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_7_fu_474_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_4_fu_461_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_3_fu_480_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_4_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_3_fu_488_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_4_fu_494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln674_fu_517_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_171_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_82_fu_507_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln674_fu_522_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_2_fu_536_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_2_fu_542_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_1_fu_529_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_fu_548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_1_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_fu_556_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_1_fu_562_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln414_fu_574_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln414_fu_579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_568_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln414_fu_583_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_13_fu_589_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_2_fu_602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_2_fu_605_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln414_1_fu_617_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln414_fu_622_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln414_2_fu_632_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln414_1_fu_627_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln414_2_fu_638_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_14_fu_611_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln414_1_fu_644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln414_fu_656_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_fu_662_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln414_2_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln414_3_fu_652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln414_1_fu_679_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln414_1_fu_685_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln414_fu_691_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal localbuffer_V_fu_595_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln414_fu_697_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln414_3_fu_672_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln414_1_fu_703_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln414_2_fu_709_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln674_8_fu_727_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln674_5_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_5_fu_736_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1059_fu_742_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component canny_accel_mul_32s_29s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mul_32s_29s_32_1_1_U33 : component canny_accel_mul_32s_29s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 29,
        dout_WIDTH => 32)
    port map (
        din0 => rows_dout,
        din1 => cols_bound_per_npc_dout,
        dout => bound_fu_188_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_1))) then 
                i_reg_146 <= add_ln1054_fu_226_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_146 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_1))) then 
                j_reg_135 <= j_3_fu_420_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_135 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Val2_s_fu_100 <= ap_const_lv64_0;
            elsif (((icmp_ln1065_reg_816 = ap_const_lv1_1) and (icmp_ln1054_reg_807 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_Val2_s_fu_100 <= ldata1_dout;
            end if; 
        end if;
    end process;

    rem_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                rem_fu_96 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1065_fu_276_p2 = ap_const_lv1_1) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_1))) then 
                rem_fu_96 <= rem_1_fu_398_p2;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1065_fu_276_p2 = ap_const_lv1_0) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_1))) then 
                rem_fu_96 <= rem_2_fu_313_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln1074_reg_797 <= add_ln1074_fu_210_p2;
                bound_reg_782 <= bound_fu_188_p2;
                cols_bound_per_npc_cast2_i_reg_777 <= cols_bound_per_npc_cast2_i_fu_176_p1;
                last_blk_width_read_reg_771 <= last_blk_width;
                sub2_i_reg_792 <= sub2_i_fu_204_p2;
                sub_cast_i_reg_787 <= sub_cast_i_fu_200_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1065_fu_276_p2 = ap_const_lv1_1) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_1))) then
                add_ln674_1_reg_865 <= add_ln674_1_fu_378_p2;
                icmp_ln1066_reg_841 <= icmp_ln1066_fu_324_p2;
                icmp_ln414_reg_870 <= icmp_ln414_fu_384_p2;
                icmp_ln674_reg_851 <= icmp_ln674_fu_344_p2;
                trunc_ln1067_reg_846 <= trunc_ln1067_fu_330_p1;
                trunc_ln414_1_reg_886 <= trunc_ln414_1_fu_394_p1;
                trunc_ln414_reg_878 <= trunc_ln414_fu_390_p1;
                trunc_ln674_reg_858 <= trunc_ln674_fu_350_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_1))) then
                bLast_reg_811 <= bLast_fu_245_p2;
                icmp_ln1065_reg_816 <= icmp_ln1065_fu_276_p2;
                icmp_ln1084_reg_892 <= icmp_ln1084_fu_409_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1054_reg_807 <= icmp_ln1054_fu_236_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1065_fu_276_p2 = ap_const_lv1_0) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_1))) then
                icmp_ln674_1_reg_820 <= icmp_ln674_1_fu_299_p2;
                trunc_ln674_1_reg_827 <= trunc_ln674_1_fu_305_p1;
                trunc_ln674_2_reg_835 <= trunc_ln674_2_fu_309_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, ap_enable_reg_pp0_iter0, icmp_ln1054_fu_236_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1054_fu_236_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln1054_fu_226_p2 <= std_logic_vector(unsigned(i_reg_146) + unsigned(ap_const_lv31_1));
    add_ln1071_fu_354_p2 <= std_logic_vector(unsigned(zext_ln1060_1_fu_261_p1) + unsigned(ap_const_lv8_FF));
    add_ln1074_fu_210_p2 <= std_logic_vector(unsigned(last_blk_width_cast4_i_fu_180_p1) + unsigned(ap_const_lv8_3F));
    add_ln1086_fu_414_p2 <= std_logic_vector(unsigned(j_reg_135) + unsigned(ap_const_lv32_1));
    add_ln674_1_fu_378_p2 <= std_logic_vector(unsigned(sub_ln674_3_fu_372_p2) + unsigned(ap_const_lv7_3F));
    add_ln674_fu_517_p2 <= std_logic_vector(unsigned(trunc_ln674_reg_858) + unsigned(ap_const_lv7_41));
    and_ln414_1_fu_703_p2 <= (xor_ln414_fu_697_p2 and localbuffer_V_fu_595_p3);
    and_ln414_2_fu_709_p2 <= (select_ln414_3_fu_672_p3 and and_ln414_fu_691_p2);
    and_ln414_fu_691_p2 <= (shl_ln414_1_fu_679_p2 and lshr_ln414_1_fu_685_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ldata1_empty_n, in_mat_421_full_n, ap_enable_reg_pp0_iter1, icmp_ln1084_reg_892, ap_predicate_op109_read_state3)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op109_read_state3 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0)) or ((icmp_ln1084_reg_892 = ap_const_lv1_1) and (in_mat_421_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ldata1_empty_n, in_mat_421_full_n, ap_enable_reg_pp0_iter1, icmp_ln1084_reg_892, ap_predicate_op109_read_state3)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op109_read_state3 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0)) or ((icmp_ln1084_reg_892 = ap_const_lv1_1) and (in_mat_421_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ldata1_empty_n, in_mat_421_full_n, ap_enable_reg_pp0_iter1, icmp_ln1084_reg_892, ap_predicate_op109_read_state3)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op109_read_state3 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0)) or ((icmp_ln1084_reg_892 = ap_const_lv1_1) and (in_mat_421_full_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, rows_empty_n, cols_bound_per_npc_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(ldata1_empty_n, in_mat_421_full_n, icmp_ln1084_reg_892, ap_predicate_op109_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((ap_predicate_op109_read_state3 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0)) or ((icmp_ln1084_reg_892 = ap_const_lv1_1) and (in_mat_421_full_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln1054_fu_236_p2)
    begin
        if ((icmp_ln1054_fu_236_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_localbuffer_V_8_phi_fu_160_p4_assign_proc : process(icmp_ln1054_reg_807, icmp_ln1065_reg_816, p_Result_15_fu_715_p2, ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157, p_Result_16_fu_500_p2)
    begin
        if ((icmp_ln1054_reg_807 = ap_const_lv1_1)) then
            if ((icmp_ln1065_reg_816 = ap_const_lv1_0)) then 
                ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 <= p_Result_16_fu_500_p2;
            elsif ((icmp_ln1065_reg_816 = ap_const_lv1_1)) then 
                ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 <= p_Result_15_fu_715_p2;
            else 
                ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 <= ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157;
            end if;
        else 
            ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 <= ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op109_read_state3_assign_proc : process(icmp_ln1054_reg_807, icmp_ln1065_reg_816)
    begin
                ap_predicate_op109_read_state3 <= ((icmp_ln1065_reg_816 = ap_const_lv1_1) and (icmp_ln1054_reg_807 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bLast_fu_245_p2 <= "1" when (j_reg_135 = sub_cast_i_reg_787) else "0";

    cols_bound_per_npc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_bound_per_npc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_blk_n <= cols_bound_per_npc_empty_n;
        else 
            cols_bound_per_npc_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_bound_per_npc_cast2_i_fu_176_p0 <= cols_bound_per_npc_dout;
        cols_bound_per_npc_cast2_i_fu_176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_bound_per_npc_cast2_i_fu_176_p0),32));

    cols_bound_per_npc_cast_i_fu_184_p0 <= cols_bound_per_npc_dout;
        cols_bound_per_npc_cast_i_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_bound_per_npc_cast_i_fu_184_p0),30));


    cols_bound_per_npc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_read <= ap_const_logic_1;
        else 
            cols_bound_per_npc_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_166_p2 <= std_logic_vector(unsigned(ap_const_lv32_40) - unsigned(rem_fu_96));
    grp_fu_171_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln674_reg_858));
    icmp_ln1054_fu_236_p2 <= "1" when (signed(zext_ln1036_fu_232_p1) < signed(bound_reg_782)) else "0";
    icmp_ln1065_fu_276_p2 <= "1" when (signed(rem_fu_96) < signed(zext_ln1060_fu_257_p1)) else "0";
    icmp_ln1066_fu_324_p2 <= "1" when (rem_fu_96 = ap_const_lv32_0) else "0";
    icmp_ln1084_fu_409_p2 <= "1" when (signed(j_reg_135) < signed(cols_bound_per_npc_cast2_i_reg_777)) else "0";
    icmp_ln414_fu_384_p2 <= "1" when (unsigned(rem_fu_96) > unsigned(sext_ln1071_fu_360_p1)) else "0";
    icmp_ln674_1_fu_299_p2 <= "1" when (unsigned(grp_fu_166_p2) > unsigned(sub_ln1074_fu_293_p2)) else "0";
    icmp_ln674_fu_344_p2 <= "0" when (tmp_fu_334_p4 = ap_const_lv26_0) else "1";

    in_mat_421_blk_n_assign_proc : process(in_mat_421_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1084_reg_892)
    begin
        if (((icmp_ln1084_reg_892 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_mat_421_blk_n <= in_mat_421_full_n;
        else 
            in_mat_421_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_mat_421_din <= (select_ln1059_fu_742_p3 and ap_phi_mux_localbuffer_V_8_phi_fu_160_p4);

    in_mat_421_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1084_reg_892, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1084_reg_892 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_mat_421_write <= ap_const_logic_1;
        else 
            in_mat_421_write <= ap_const_logic_0;
        end if; 
    end process;

    j_3_fu_420_p3 <= 
        ap_const_lv32_0 when (bLast_fu_245_p2(0) = '1') else 
        add_ln1086_fu_414_p2;
    last_blk_width_cast4_i_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(last_blk_width),8));

    ldata1_blk_n_assign_proc : process(ldata1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1054_reg_807, icmp_ln1065_reg_816)
    begin
        if (((icmp_ln1065_reg_816 = ap_const_lv1_1) and (icmp_ln1054_reg_807 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ldata1_blk_n <= ldata1_empty_n;
        else 
            ldata1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ldata1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op109_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op109_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ldata1_read <= ap_const_logic_1;
        else 
            ldata1_read <= ap_const_logic_0;
        end if; 
    end process;

    localbuffer_V_fu_595_p3 <= 
        ap_const_lv64_0 when (icmp_ln1066_reg_841(0) = '1') else 
        p_Result_13_fu_589_p2;
    lshr_ln414_1_fu_685_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln414_3_fu_652_p1(31-1 downto 0)))));
    lshr_ln414_fu_583_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln414_fu_579_p1(31-1 downto 0)))));
    lshr_ln674_1_fu_562_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_1_fu_552_p1(31-1 downto 0)))));
    lshr_ln674_2_fu_605_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_2_fu_602_p1(31-1 downto 0)))));
    lshr_ln674_3_fu_488_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_4_fu_461_p3),to_integer(unsigned('0' & zext_ln674_3_fu_480_p1(31-1 downto 0)))));
    lshr_ln674_4_fu_494_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_4_fu_484_p1(31-1 downto 0)))));
    lshr_ln674_5_fu_736_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_5_fu_732_p1(31-1 downto 0)))));
    lshr_ln674_fu_556_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_1_fu_529_p3),to_integer(unsigned('0' & zext_ln674_fu_548_p1(31-1 downto 0)))));
    p_Result_13_fu_589_p2 <= (p_Result_s_fu_568_p2 and lshr_ln414_fu_583_p2);
    p_Result_14_fu_611_p2 <= (lshr_ln674_2_fu_605_p2 and ldata1_dout);
    p_Result_15_fu_715_p2 <= (and_ln414_2_fu_709_p2 or and_ln414_1_fu_703_p2);
    p_Result_16_fu_500_p2 <= (lshr_ln674_4_fu_494_p2 and lshr_ln674_3_fu_488_p2);
    p_Result_s_fu_568_p2 <= (lshr_ln674_fu_556_p2 and lshr_ln674_1_fu_562_p2);
    ptr_width_minus_fu_265_p3 <= 
        sub2_i_reg_792 when (bLast_fu_245_p2(0) = '1') else 
        ap_const_lv8_0;
    rem_1_fu_398_p2 <= std_logic_vector(unsigned(rem_fu_96) + unsigned(sext_ln1061_fu_272_p1));
    rem_2_fu_313_p2 <= std_logic_vector(unsigned(rem_fu_96) - unsigned(zext_ln1060_fu_257_p1));

    rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1059_fu_742_p3 <= 
        lshr_ln674_5_fu_736_p2 when (bLast_reg_811(0) = '1') else 
        ap_const_lv64_FFFFFFFFFFFFFFFF;
    select_ln1074_fu_282_p3 <= 
        add_ln1074_reg_797 when (bLast_fu_245_p2(0) = '1') else 
        ap_const_lv8_7F;
    select_ln414_1_fu_627_p3 <= 
        trunc_ln414_1_reg_886 when (icmp_ln414_reg_870(0) = '1') else 
        trunc_ln414_reg_878;
    select_ln414_2_fu_632_p3 <= 
        sub_ln414_1_fu_617_p2 when (icmp_ln414_reg_870(0) = '1') else 
        trunc_ln414_reg_878;
    select_ln414_3_fu_672_p3 <= 
        tmp_84_fu_662_p4 when (icmp_ln414_reg_870(0) = '1') else 
        shl_ln414_fu_656_p2;
    select_ln414_fu_622_p3 <= 
        trunc_ln414_reg_878 when (icmp_ln414_reg_870(0) = '1') else 
        trunc_ln414_1_reg_886;
    select_ln674_1_fu_529_p3 <= 
        tmp_82_fu_507_p4 when (icmp_ln674_reg_851(0) = '1') else 
        p_Val2_s_fu_100;
    select_ln674_2_fu_536_p3 <= 
        grp_fu_171_p2 when (icmp_ln674_reg_851(0) = '1') else 
        trunc_ln674_reg_858;
    select_ln674_3_fu_454_p3 <= 
        sub_ln674_4_fu_441_p2 when (icmp_ln674_1_reg_820(0) = '1') else 
        sub_ln674_6_fu_450_p2;
    select_ln674_4_fu_461_p3 <= 
        tmp_85_fu_431_p4 when (icmp_ln674_1_reg_820(0) = '1') else 
        p_Val2_s_fu_100;
    select_ln674_5_fu_468_p3 <= 
        sub_ln674_5_fu_445_p2 when (icmp_ln674_1_reg_820(0) = '1') else 
        trunc_ln674_1_reg_827;
    select_ln674_fu_522_p3 <= 
        add_ln674_fu_517_p2 when (icmp_ln674_reg_851(0) = '1') else 
        grp_fu_171_p2;
        sext_ln1061_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ptr_width_minus_fu_265_p3),32));

        sext_ln1071_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1071_fu_354_p2),32));

    shl_ln414_1_fu_679_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln414_2_fu_648_p1(31-1 downto 0)))));
    shl_ln414_fu_656_p2 <= std_logic_vector(shift_left(unsigned(p_Result_14_fu_611_p2),to_integer(unsigned('0' & zext_ln414_1_fu_644_p1(31-1 downto 0)))));
    sub2_i_fu_204_p2 <= std_logic_vector(unsigned(ap_const_lv8_40) - unsigned(last_blk_width_cast4_i_fu_180_p1));
        sub_cast_i_fu_200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_i_fu_194_p2),32));

    sub_i_fu_194_p2 <= std_logic_vector(signed(cols_bound_per_npc_cast_i_fu_184_p1) + signed(ap_const_lv30_3FFFFFFF));
    sub_ln1074_fu_293_p2 <= std_logic_vector(unsigned(zext_ln1074_fu_289_p1) - unsigned(rem_fu_96));
    sub_ln414_1_fu_617_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln414_reg_878));
    sub_ln414_2_fu_638_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln414_fu_622_p3));
    sub_ln414_fu_574_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(trunc_ln1067_reg_846));
    sub_ln674_2_fu_542_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln674_fu_522_p3));
    sub_ln674_3_fu_372_p2 <= std_logic_vector(unsigned(trunc_ln1071_1_fu_368_p1) - unsigned(trunc_ln1071_fu_364_p1));
    sub_ln674_4_fu_441_p2 <= std_logic_vector(unsigned(trunc_ln674_1_reg_827) - unsigned(trunc_ln674_2_reg_835));
    sub_ln674_5_fu_445_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln674_1_reg_827));
    sub_ln674_6_fu_450_p2 <= std_logic_vector(unsigned(trunc_ln674_2_reg_835) - unsigned(trunc_ln674_1_reg_827));
    sub_ln674_7_fu_474_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln674_3_fu_454_p3));
    sub_ln674_8_fu_727_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(last_blk_width_read_reg_771));
    
    tmp_82_fu_507_p4_proc : process(p_Val2_s_fu_100)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_82_fu_507_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_100;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_82_fu_507_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_82_fu_507_p4_i) := p_Val2_s_fu_100(64-1-tmp_82_fu_507_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_82_fu_507_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_84_fu_662_p4_proc : process(shl_ln414_fu_656_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_84_fu_662_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := shl_ln414_fu_656_p2;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_84_fu_662_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_84_fu_662_p4_i) := shl_ln414_fu_656_p2(64-1-tmp_84_fu_662_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_84_fu_662_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_85_fu_431_p4_proc : process(p_Val2_s_fu_100)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_85_fu_431_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_100;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_85_fu_431_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_85_fu_431_p4_i) := p_Val2_s_fu_100(64-1-tmp_85_fu_431_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_85_fu_431_p4 <= resvalue(64-1 downto 0);
    end process;

    tmp_fu_334_p4 <= grp_fu_166_p2(31 downto 6);
    trunc_ln1067_fu_330_p1 <= rem_fu_96(7 - 1 downto 0);
    trunc_ln1071_1_fu_368_p1 <= rem_fu_96(7 - 1 downto 0);
    trunc_ln1071_fu_364_p1 <= add_ln1071_fu_354_p2(7 - 1 downto 0);
    trunc_ln414_1_fu_394_p1 <= add_ln1071_fu_354_p2(7 - 1 downto 0);
    trunc_ln414_fu_390_p1 <= rem_fu_96(7 - 1 downto 0);
    trunc_ln674_1_fu_305_p1 <= grp_fu_166_p2(7 - 1 downto 0);
    trunc_ln674_2_fu_309_p1 <= sub_ln1074_fu_293_p2(7 - 1 downto 0);
    trunc_ln674_fu_350_p1 <= grp_fu_166_p2(7 - 1 downto 0);
    xf_bits_per_clock_fu_250_p3 <= 
        last_blk_width_read_reg_771 when (bLast_fu_245_p2(0) = '1') else 
        ap_const_lv7_40;
    xor_ln414_fu_697_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor and_ln414_fu_691_p2);
    zext_ln1036_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_146),32));
    zext_ln1060_1_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_bits_per_clock_fu_250_p3),8));
    zext_ln1060_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_bits_per_clock_fu_250_p3),32));
    zext_ln1074_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1074_fu_282_p3),32));
    zext_ln414_1_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_2_fu_632_p3),64));
    zext_ln414_2_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_1_fu_627_p3),64));
    zext_ln414_3_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_2_fu_638_p2),64));
    zext_ln414_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_fu_574_p2),64));
    zext_ln674_1_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_2_fu_542_p2),64));
    zext_ln674_2_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln674_1_reg_865),64));
    zext_ln674_3_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_5_fu_468_p3),64));
    zext_ln674_4_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_7_fu_474_p2),64));
    zext_ln674_5_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_8_fu_727_p2),64));
    zext_ln674_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_2_fu_536_p3),64));
end behav;
