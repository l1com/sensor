-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_Block_split11_proc72 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    img_inp : IN STD_LOGIC_VECTOR (63 downto 0);
    img_out : IN STD_LOGIC_VECTOR (63 downto 0);
    low_threshold : IN STD_LOGIC_VECTOR (31 downto 0);
    high_threshold : IN STD_LOGIC_VECTOR (31 downto 0);
    in_mat_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_mat_rows_out_full_n : IN STD_LOGIC;
    in_mat_rows_out_write : OUT STD_LOGIC;
    in_mat_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    in_mat_cols_out_full_n : IN STD_LOGIC;
    in_mat_cols_out_write : OUT STD_LOGIC;
    dst_mat_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_mat_rows_out_full_n : IN STD_LOGIC;
    dst_mat_rows_out_write : OUT STD_LOGIC;
    dst_mat_cols_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    dst_mat_cols_out_full_n : IN STD_LOGIC;
    dst_mat_cols_out_write : OUT STD_LOGIC;
    img_inp_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    img_inp_out_full_n : IN STD_LOGIC;
    img_inp_out_write : OUT STD_LOGIC;
    img_out_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    img_out_out_full_n : IN STD_LOGIC;
    img_out_out_write : OUT STD_LOGIC;
    low_threshold_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    low_threshold_out_full_n : IN STD_LOGIC;
    low_threshold_out_write : OUT STD_LOGIC;
    high_threshold_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    high_threshold_out_full_n : IN STD_LOGIC;
    high_threshold_out_write : OUT STD_LOGIC );
end;


architecture behav of canny_accel_Block_split11_proc72 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv11_20 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_mat_rows_out_blk_n : STD_LOGIC;
    signal in_mat_cols_out_blk_n : STD_LOGIC;
    signal dst_mat_rows_out_blk_n : STD_LOGIC;
    signal dst_mat_cols_out_blk_n : STD_LOGIC;
    signal img_inp_out_blk_n : STD_LOGIC;
    signal img_out_out_blk_n : STD_LOGIC;
    signal low_threshold_out_blk_n : STD_LOGIC;
    signal high_threshold_out_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal empty_fu_163_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln31_fu_167_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_173_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_331_fu_191_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln32_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal npcColsNxt_fu_183_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln31_fu_167_p2 <= std_logic_vector(unsigned(empty_fu_163_p1) + unsigned(ap_const_lv11_20));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    dst_mat_cols_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_mat_cols_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_mat_cols_out_blk_n <= dst_mat_cols_out_full_n;
        else 
            dst_mat_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_mat_cols_out_din <= 
        npcColsNxt_fu_183_p3 when (icmp_ln32_fu_195_p2(0) = '1') else 
        empty_fu_163_p1;

    dst_mat_cols_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_mat_cols_out_write <= ap_const_logic_1;
        else 
            dst_mat_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_mat_rows_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, dst_mat_rows_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_mat_rows_out_blk_n <= dst_mat_rows_out_full_n;
        else 
            dst_mat_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_mat_rows_out_din <= rows;

    dst_mat_rows_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dst_mat_rows_out_write <= ap_const_logic_1;
        else 
            dst_mat_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;

    empty_331_fu_191_p1 <= cols(5 - 1 downto 0);
    empty_fu_163_p1 <= cols(11 - 1 downto 0);

    high_threshold_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_out_blk_n <= high_threshold_out_full_n;
        else 
            high_threshold_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    high_threshold_out_din <= high_threshold;

    high_threshold_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_out_write <= ap_const_logic_1;
        else 
            high_threshold_out_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln32_fu_195_p2 <= "0" when (empty_331_fu_191_p1 = ap_const_lv5_0) else "1";

    img_inp_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_inp_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_inp_out_blk_n <= img_inp_out_full_n;
        else 
            img_inp_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_inp_out_din <= img_inp;

    img_inp_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_inp_out_write <= ap_const_logic_1;
        else 
            img_inp_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_out_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_out_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_out_out_blk_n <= img_out_out_full_n;
        else 
            img_out_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_out_out_din <= img_out;

    img_out_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_out_out_write <= ap_const_logic_1;
        else 
            img_out_out_write <= ap_const_logic_0;
        end if; 
    end process;


    in_mat_cols_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_cols_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_mat_cols_out_blk_n <= in_mat_cols_out_full_n;
        else 
            in_mat_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_mat_cols_out_din <= cols;

    in_mat_cols_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_mat_cols_out_write <= ap_const_logic_1;
        else 
            in_mat_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    in_mat_rows_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_mat_rows_out_blk_n <= in_mat_rows_out_full_n;
        else 
            in_mat_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_mat_rows_out_din <= rows;

    in_mat_rows_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_mat_rows_out_write <= ap_const_logic_1;
        else 
            in_mat_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    low_threshold_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_out_blk_n <= low_threshold_out_full_n;
        else 
            low_threshold_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    low_threshold_out_din <= low_threshold;

    low_threshold_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, in_mat_rows_out_full_n, in_mat_cols_out_full_n, dst_mat_rows_out_full_n, dst_mat_cols_out_full_n, img_inp_out_full_n, img_out_out_full_n, low_threshold_out_full_n, high_threshold_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (high_threshold_out_full_n = ap_const_logic_0) or (low_threshold_out_full_n = ap_const_logic_0) or (img_out_out_full_n = ap_const_logic_0) or (img_inp_out_full_n = ap_const_logic_0) or (dst_mat_cols_out_full_n = ap_const_logic_0) or (dst_mat_rows_out_full_n = ap_const_logic_0) or (in_mat_cols_out_full_n = ap_const_logic_0) or (in_mat_rows_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_out_write <= ap_const_logic_1;
        else 
            low_threshold_out_write <= ap_const_logic_0;
        end if; 
    end process;

    npcColsNxt_fu_183_p3 <= (tmp_fu_173_p4 & ap_const_lv5_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_173_p4 <= add_ln31_fu_167_p2(10 downto 5);
end behav;
