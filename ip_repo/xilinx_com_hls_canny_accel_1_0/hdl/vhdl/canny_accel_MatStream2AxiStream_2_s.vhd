-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_MatStream2AxiStream_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dst_mat_422_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    dst_mat_422_empty_n : IN STD_LOGIC;
    dst_mat_422_read : OUT STD_LOGIC;
    ldata1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    ldata1_full_n : IN STD_LOGIC;
    ldata1_write : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_bound_per_npc_dout : IN STD_LOGIC_VECTOR (6 downto 0);
    cols_bound_per_npc_empty_n : IN STD_LOGIC;
    cols_bound_per_npc_read : OUT STD_LOGIC;
    last_blk_width : IN STD_LOGIC_VECTOR (6 downto 0) );
end;


architecture behav of canny_accel_MatStream2AxiStream_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dst_mat_422_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1301_reg_420 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_424 : STD_LOGIC_VECTOR (0 downto 0);
    signal ldata1_blk_n : STD_LOGIC;
    signal icmp_ln878_1_reg_433 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln874_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_blk_n : STD_LOGIC;
    signal cols_bound_per_npc_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_115 : STD_LOGIC_VECTOR (22 downto 0);
    signal j_V_reg_126 : STD_LOGIC_VECTOR (6 downto 0);
    signal filled_V_reg_137 : STD_LOGIC_VECTOR (6 downto 0);
    signal cols_bound_per_npc_read_reg_383 : STD_LOGIC_VECTOR (6 downto 0);
    signal last_blk_width_read_reg_400 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal op2_assign_fu_190_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal op2_assign_reg_405 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_369_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln1286_reg_410 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1301_fu_196_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op57_read_state6 : BOOLEAN;
    signal ap_predicate_op64_write_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1301_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln781_fu_246_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln781_reg_428 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln878_1_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal filled_V_1_fu_269_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal filled_V_1_reg_437 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_V_2_fu_275_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_phi_mux_filled_V_phi_fu_141_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_conv_i9_i_i673_pn_i_phi_fu_152_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln213_fu_262_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter0_conv_i9_i_i673_pn_i_reg_149 : STD_LOGIC_VECTOR (6 downto 0);
    signal xf_bits_per_clock_fu_229_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_val_V_16_phi_fu_162_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_val_V_16_reg_158 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_val_V_16_reg_158 : STD_LOGIC_VECTOR (63 downto 0);
    signal localbuffer_V_fu_80 : STD_LOGIC_VECTOR (63 downto 0);
    signal localbuffer_V_3_fu_345_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_fu_291_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal cols_bound_per_npc_cast6_i_fu_187_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1306_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1295_fu_212_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1306_fu_220_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal bLast_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1313_fu_237_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1324_fu_250_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln781_1_fu_281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_30_fu_285_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_43_fu_298_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln789_fu_315_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln546_fu_319_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln781_2_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln455_fu_311_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln799_fu_335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_329_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_29_fu_339_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_369_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_369_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_369_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_369_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_369_p10 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_condition_134 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component canny_accel_mul_mul_16ns_7ns_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;



begin
    mul_mul_16ns_7ns_23_4_1_U251 : component canny_accel_mul_mul_16ns_7ns_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_369_p0,
        din1 => grp_fu_369_p1,
        ce => grp_fu_369_ce,
        dout => grp_fu_369_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ldata1_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_val_V_16_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_134)) then
                if (((icmp_ln878_fu_241_p2 = ap_const_lv1_0) and (icmp_ln1301_fu_202_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_val_V_16_reg_158 <= ap_const_lv64_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_val_V_16_reg_158 <= ap_phi_reg_pp0_iter0_val_V_16_reg_158;
                end if;
            end if; 
        end if;
    end process;

    filled_V_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1301_reg_420 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                filled_V_reg_137 <= filled_V_1_reg_437;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                filled_V_reg_137 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1301_fu_202_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_115 <= add_ln1301_fu_196_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten_reg_115 <= ap_const_lv23_0;
            end if; 
        end if;
    end process;

    j_V_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1301_fu_202_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_V_reg_126 <= j_V_2_fu_275_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_V_reg_126 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    localbuffer_V_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                localbuffer_V_fu_80 <= ap_const_lv64_0;
            elsif (((icmp_ln878_1_reg_433 = ap_const_lv1_1) and (icmp_ln1301_reg_420 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                localbuffer_V_fu_80 <= ret_fu_291_p2;
            elsif (((icmp_ln878_1_reg_433 = ap_const_lv1_0) and (icmp_ln1301_reg_420 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                localbuffer_V_fu_80 <= localbuffer_V_3_fu_345_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cols_bound_per_npc_read_reg_383 <= cols_bound_per_npc_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1301_fu_202_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                filled_V_1_reg_437 <= filled_V_1_fu_269_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1301_reg_420 <= icmp_ln1301_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1301_fu_202_p2 = ap_const_lv1_0))) then
                icmp_ln878_1_reg_433 <= icmp_ln878_1_fu_256_p2;
                icmp_ln878_reg_424 <= icmp_ln878_fu_241_p2;
                    zext_ln781_reg_428(6 downto 0) <= zext_ln781_fu_246_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                last_blk_width_read_reg_400 <= last_blk_width;
                mul_ln1286_reg_410 <= grp_fu_369_p2;
                op2_assign_reg_405 <= op2_assign_fu_190_p2;
            end if;
        end if;
    end process;
    zext_ln781_reg_428(7) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ldata1_full_n, rows_empty_n, cols_bound_per_npc_empty_n, ap_CS_fsm_state7, icmp_ln874_fu_363_p2, ap_enable_reg_pp0_iter0, icmp_ln1301_fu_202_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1301_fu_202_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1301_fu_202_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ldata1_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln1301_fu_196_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_115) + unsigned(ap_const_lv23_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(dst_mat_422_empty_n, ldata1_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op57_read_state6, ap_predicate_op64_write_state6)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ldata1_full_n = ap_const_logic_0) and (ap_predicate_op64_write_state6 = ap_const_boolean_1)) or ((dst_mat_422_empty_n = ap_const_logic_0) and (ap_predicate_op57_read_state6 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(dst_mat_422_empty_n, ldata1_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op57_read_state6, ap_predicate_op64_write_state6)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ldata1_full_n = ap_const_logic_0) and (ap_predicate_op64_write_state6 = ap_const_boolean_1)) or ((dst_mat_422_empty_n = ap_const_logic_0) and (ap_predicate_op57_read_state6 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(dst_mat_422_empty_n, ldata1_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op57_read_state6, ap_predicate_op64_write_state6)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ldata1_full_n = ap_const_logic_0) and (ap_predicate_op64_write_state6 = ap_const_boolean_1)) or ((dst_mat_422_empty_n = ap_const_logic_0) and (ap_predicate_op57_read_state6 = ap_const_boolean_1))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, rows_empty_n, cols_bound_per_npc_empty_n)
    begin
                ap_block_state1 <= ((cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter1_assign_proc : process(dst_mat_422_empty_n, ldata1_full_n, ap_predicate_op57_read_state6, ap_predicate_op64_write_state6)
    begin
                ap_block_state6_pp0_stage0_iter1 <= (((ldata1_full_n = ap_const_logic_0) and (ap_predicate_op64_write_state6 = ap_const_boolean_1)) or ((dst_mat_422_empty_n = ap_const_logic_0) and (ap_predicate_op57_read_state6 = ap_const_boolean_1)));
    end process;


    ap_block_state7_assign_proc : process(ldata1_full_n, icmp_ln874_fu_363_p2)
    begin
                ap_block_state7 <= ((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ldata1_full_n = ap_const_logic_0));
    end process;


    ap_condition_134_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_134 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln1301_fu_202_p2)
    begin
        if ((icmp_ln1301_fu_202_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ldata1_full_n, ap_CS_fsm_state7, icmp_ln874_fu_363_p2)
    begin
        if ((not(((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ldata1_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_conv_i9_i_i673_pn_i_phi_fu_152_p4_assign_proc : process(icmp_ln1301_fu_202_p2, icmp_ln878_1_fu_256_p2, xor_ln213_fu_262_p2, ap_phi_reg_pp0_iter0_conv_i9_i_i673_pn_i_reg_149, xf_bits_per_clock_fu_229_p3)
    begin
        if ((icmp_ln1301_fu_202_p2 = ap_const_lv1_0)) then
            if ((icmp_ln878_1_fu_256_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_conv_i9_i_i673_pn_i_phi_fu_152_p4 <= xf_bits_per_clock_fu_229_p3;
            elsif ((icmp_ln878_1_fu_256_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_conv_i9_i_i673_pn_i_phi_fu_152_p4 <= xor_ln213_fu_262_p2;
            else 
                ap_phi_mux_conv_i9_i_i673_pn_i_phi_fu_152_p4 <= ap_phi_reg_pp0_iter0_conv_i9_i_i673_pn_i_reg_149;
            end if;
        else 
            ap_phi_mux_conv_i9_i_i673_pn_i_phi_fu_152_p4 <= ap_phi_reg_pp0_iter0_conv_i9_i_i673_pn_i_reg_149;
        end if; 
    end process;


    ap_phi_mux_filled_V_phi_fu_141_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1301_reg_420, filled_V_reg_137, filled_V_1_reg_437)
    begin
        if (((icmp_ln1301_reg_420 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_filled_V_phi_fu_141_p4 <= filled_V_1_reg_437;
        else 
            ap_phi_mux_filled_V_phi_fu_141_p4 <= filled_V_reg_137;
        end if; 
    end process;


    ap_phi_mux_val_V_16_phi_fu_162_p4_assign_proc : process(dst_mat_422_dout, icmp_ln1301_reg_420, icmp_ln878_reg_424, ap_phi_reg_pp0_iter1_val_V_16_reg_158)
    begin
        if (((icmp_ln878_reg_424 = ap_const_lv1_1) and (icmp_ln1301_reg_420 = ap_const_lv1_0))) then 
            ap_phi_mux_val_V_16_phi_fu_162_p4 <= dst_mat_422_dout;
        else 
            ap_phi_mux_val_V_16_phi_fu_162_p4 <= ap_phi_reg_pp0_iter1_val_V_16_reg_158;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_conv_i9_i_i673_pn_i_reg_149 <= "XXXXXXX";
    ap_phi_reg_pp0_iter0_val_V_16_reg_158 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op57_read_state6_assign_proc : process(icmp_ln1301_reg_420, icmp_ln878_reg_424)
    begin
                ap_predicate_op57_read_state6 <= ((icmp_ln878_reg_424 = ap_const_lv1_1) and (icmp_ln1301_reg_420 = ap_const_lv1_0));
    end process;


    ap_predicate_op64_write_state6_assign_proc : process(icmp_ln1301_reg_420, icmp_ln878_1_reg_433)
    begin
                ap_predicate_op64_write_state6 <= ((icmp_ln878_1_reg_433 = ap_const_lv1_0) and (icmp_ln1301_reg_420 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ldata1_full_n, ap_CS_fsm_state7, icmp_ln874_fu_363_p2)
    begin
        if ((not(((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ldata1_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bLast_fu_224_p2 <= "1" when (zext_ln1306_fu_220_p1 = op2_assign_reg_405) else "0";

    cols_bound_per_npc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_bound_per_npc_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_blk_n <= cols_bound_per_npc_empty_n;
        else 
            cols_bound_per_npc_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_bound_per_npc_cast6_i_fu_187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cols_bound_per_npc_read_reg_383),8));

    cols_bound_per_npc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n)
    begin
        if ((not(((cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_bound_per_npc_read <= ap_const_logic_1;
        else 
            cols_bound_per_npc_read <= ap_const_logic_0;
        end if; 
    end process;


    dst_mat_422_blk_n_assign_proc : process(dst_mat_422_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1301_reg_420, icmp_ln878_reg_424)
    begin
        if (((icmp_ln878_reg_424 = ap_const_lv1_1) and (icmp_ln1301_reg_420 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_mat_422_blk_n <= dst_mat_422_empty_n;
        else 
            dst_mat_422_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dst_mat_422_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op57_read_state6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op57_read_state6 = ap_const_boolean_1))) then 
            dst_mat_422_read <= ap_const_logic_1;
        else 
            dst_mat_422_read <= ap_const_logic_0;
        end if; 
    end process;

    filled_V_1_fu_269_p2 <= std_logic_vector(unsigned(ap_phi_mux_conv_i9_i_i673_pn_i_phi_fu_152_p4) + unsigned(ap_phi_mux_filled_V_phi_fu_141_p4));

    grp_fu_369_ce_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) or ((ap_const_logic_1 = ap_CS_fsm_state1) and ((cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))))) then 
            grp_fu_369_ce <= ap_const_logic_0;
        else 
            grp_fu_369_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_369_p0 <= grp_fu_369_p00(16 - 1 downto 0);
    grp_fu_369_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rows_dout),23));
    grp_fu_369_p1 <= grp_fu_369_p10(7 - 1 downto 0);
    grp_fu_369_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cols_bound_per_npc_dout),23));
    icmp_ln1301_fu_202_p2 <= "1" when (indvar_flatten_reg_115 = mul_ln1286_reg_410) else "0";
    icmp_ln1306_fu_207_p2 <= "1" when (j_V_reg_126 = cols_bound_per_npc_read_reg_383) else "0";
    icmp_ln874_fu_363_p2 <= "1" when (filled_V_reg_137 = ap_const_lv7_0) else "0";
    icmp_ln878_1_fu_256_p2 <= "1" when (signed(zext_ln781_fu_246_p1) < signed(sub_ln1324_fu_250_p2)) else "0";
    icmp_ln878_fu_241_p2 <= "1" when (unsigned(select_ln1295_fu_212_p3) < unsigned(cols_bound_per_npc_read_reg_383)) else "0";
    j_V_2_fu_275_p2 <= std_logic_vector(unsigned(select_ln1295_fu_212_p3) + unsigned(ap_const_lv7_1));

    ldata1_blk_n_assign_proc : process(ldata1_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1301_reg_420, icmp_ln878_1_reg_433, ap_CS_fsm_state7, icmp_ln874_fu_363_p2)
    begin
        if ((((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln878_1_reg_433 = ap_const_lv1_0) and (icmp_ln1301_reg_420 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ldata1_blk_n <= ldata1_full_n;
        else 
            ldata1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ldata1_din_assign_proc : process(ldata1_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, icmp_ln874_fu_363_p2, ap_predicate_op64_write_state6, localbuffer_V_fu_80, ret_fu_291_p2, ap_block_pp0_stage0_01001)
    begin
        if ((not(((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ldata1_full_n = ap_const_logic_0))) and (icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ldata1_din <= localbuffer_V_fu_80;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op64_write_state6 = ap_const_boolean_1))) then 
            ldata1_din <= ret_fu_291_p2;
        else 
            ldata1_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ldata1_write_assign_proc : process(ldata1_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, icmp_ln874_fu_363_p2, ap_predicate_op64_write_state6, ap_block_pp0_stage0_11001)
    begin
        if (((not(((icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ldata1_full_n = ap_const_logic_0))) and (icmp_ln874_fu_363_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op64_write_state6 = ap_const_boolean_1)))) then 
            ldata1_write <= ap_const_logic_1;
        else 
            ldata1_write <= ap_const_logic_0;
        end if; 
    end process;

    localbuffer_V_3_fu_345_p3 <= 
        r_fu_329_p2 when (p_Result_s_fu_303_p3(0) = '1') else 
        r_29_fu_339_p2;
    op2_assign_fu_190_p2 <= std_logic_vector(unsigned(cols_bound_per_npc_cast6_i_fu_187_p1) + unsigned(ap_const_lv8_FF));
    p_Result_s_fu_303_p3 <= ret_43_fu_298_p2(7 downto 7);
    r_29_fu_339_p2 <= std_logic_vector(shift_right(unsigned(ap_phi_mux_val_V_16_phi_fu_162_p4),to_integer(unsigned('0' & zext_ln799_fu_335_p1(31-1 downto 0)))));
    r_30_fu_285_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_val_V_16_phi_fu_162_p4),to_integer(unsigned('0' & zext_ln781_1_fu_281_p1(31-1 downto 0)))));
    r_fu_329_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_val_V_16_phi_fu_162_p4),to_integer(unsigned('0' & zext_ln781_2_fu_325_p1(31-1 downto 0)))));
    ret_43_fu_298_p2 <= std_logic_vector(unsigned(ap_const_lv8_40) - unsigned(zext_ln781_reg_428));
    ret_fu_291_p2 <= (r_30_fu_285_p2 or localbuffer_V_fu_80);

    rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_bound_per_npc_empty_n)
    begin
        if ((not(((cols_bound_per_npc_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1295_fu_212_p3 <= 
        ap_const_lv7_0 when (icmp_ln1306_fu_207_p2(0) = '1') else 
        j_V_reg_126;
    sub_ln1324_fu_250_p2 <= std_logic_vector(unsigned(ap_const_lv8_40) - unsigned(zext_ln1313_fu_237_p1));
    sub_ln546_fu_319_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(trunc_ln789_fu_315_p1));
    trunc_ln455_fu_311_p1 <= ret_43_fu_298_p2(7 - 1 downto 0);
    trunc_ln789_fu_315_p1 <= ret_43_fu_298_p2(6 - 1 downto 0);
    xf_bits_per_clock_fu_229_p3 <= 
        last_blk_width_read_reg_400 when (bLast_fu_224_p2(0) = '1') else 
        ap_const_lv7_40;
    xor_ln213_fu_262_p2 <= (xf_bits_per_clock_fu_229_p3 xor ap_const_lv7_40);
    zext_ln1306_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1295_fu_212_p3),8));
    zext_ln1313_fu_237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xf_bits_per_clock_fu_229_p3),8));
    zext_ln781_1_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filled_V_reg_137),64));
    zext_ln781_2_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln546_fu_319_p2),64));
    zext_ln781_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_filled_V_phi_fu_141_p4),8));
    zext_ln799_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln455_fu_311_p1),64));
end behav;
