-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src1_data_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    p_src1_data_empty_n : IN STD_LOGIC;
    p_src1_data_read : OUT STD_LOGIC;
    p_src2_data_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    p_src2_data_empty_n : IN STD_LOGIC;
    p_src2_data_read : OUT STD_LOGIC;
    p_dst_data_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_dst_data_full_n : IN STD_LOGIC;
    p_dst_data_write : OUT STD_LOGIC;
    img_height_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    img_height_empty_n : IN STD_LOGIC;
    img_height_read : OUT STD_LOGIC;
    imgwidth_2_cast_loc_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    imgwidth_2_cast_loc_empty_n : IN STD_LOGIC;
    imgwidth_2_cast_loc_read : OUT STD_LOGIC );
end;


architecture behav of canny_accel_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_2D : STD_LOGIC_VECTOR (7 downto 0) := "00101101";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv30_3505 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000011010100000101";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src1_data_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln464_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_src2_data_blk_n : STD_LOGIC;
    signal p_dst_data_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal icmp_ln464_reg_1596_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal img_height_blk_n : STD_LOGIC;
    signal imgwidth_2_cast_loc_blk_n : STD_LOGIC;
    signal j_V_reg_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_height_read_reg_1572 : STD_LOGIC_VECTOR (9 downto 0);
    signal imgwidth_2_cast_loc_read_reg_1577 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_V_1_fu_181_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_1_reg_1582 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln457_fu_187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_1_fu_192_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln464_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln464_reg_1596_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln464_reg_1596_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln708_fu_203_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_reg_1600 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_reg_1600_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_reg_1600_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_fu_207_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1605 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1605_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_1605_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_fu_225_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_reg_1612 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_reg_1612_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_reg_1612_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_reg_1622 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_1622_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_1622_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_i_i_fu_245_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_i_i_reg_1627 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_i_i_reg_1627_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_i_i_reg_1627_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_1_i_i_reg_1632 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_1_i_i_reg_1632_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_1_i_i_reg_1632_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_1_fu_279_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_1_reg_1639 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_1_reg_1639_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_1_reg_1639_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_reg_1649 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1649_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1649_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_i_i_fu_299_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_i_i_reg_1654 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_i_i_reg_1654_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_i_i_reg_1654_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_2_i_i_reg_1659 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_2_i_i_reg_1659_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_2_i_i_reg_1659_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_2_fu_333_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_2_reg_1666 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_2_reg_1666_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_2_reg_1666_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_reg_1676 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_1676_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_1676_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_i_i_fu_353_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_i_i_reg_1681 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_i_i_reg_1681_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_3_i_i_reg_1681_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_3_i_i_reg_1686 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_3_i_i_reg_1686_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_3_i_i_reg_1686_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_3_fu_387_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_3_reg_1693 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_3_reg_1693_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_3_reg_1693_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_reg_1703 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_1703_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_1703_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_i_i_fu_407_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_i_i_reg_1708 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_i_i_reg_1708_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_i_i_reg_1708_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_4_i_i_reg_1713 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_4_i_i_reg_1713_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_4_i_i_reg_1713_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_4_fu_441_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_4_reg_1720 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_4_reg_1720_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_4_reg_1720_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_71_reg_1730 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_1730_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_1730_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_5_i_i_fu_461_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_i_i_reg_1735 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_i_i_reg_1735_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_i_i_reg_1735_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_5_i_i_reg_1740 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_5_i_i_reg_1740_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_5_i_i_reg_1740_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_5_fu_495_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_5_reg_1747 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_5_reg_1747_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_5_reg_1747_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_74_reg_1757 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1757_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1757_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_i_i_fu_515_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_i_i_reg_1762 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_i_i_reg_1762_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_i_i_reg_1762_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_6_i_i_reg_1767 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_6_i_i_reg_1767_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_6_i_i_reg_1767_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_6_fu_549_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_6_reg_1774 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_6_reg_1774_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_6_reg_1774_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_77_reg_1784 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_1784_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_1784_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_i_i_fu_569_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_7_i_i_reg_1789 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_7_i_i_reg_1789_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_7_i_i_reg_1789_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_7_i_i_reg_1794 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_7_i_i_reg_1794_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_94_7_i_i_reg_1794_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_7_fu_603_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_7_reg_1801 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_7_reg_1801_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_7_reg_1801_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_80_reg_1811 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_1811_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_reg_1811_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal i_V_reg_159 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_211_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_fu_219_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_265_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_1_fu_273_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_fu_319_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_2_fu_327_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_fu_373_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_3_fu_381_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_70_fu_427_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_4_fu_435_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_fu_481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_5_fu_489_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_76_fu_535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_6_fu_543_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_fu_589_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln488_7_fu_597_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln489_fu_623_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_fu_628_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_634_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1508_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_16_fu_649_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln1_fu_658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_1_fu_646_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_fu_642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_fu_677_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_681_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_fu_701_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_1_fu_715_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln489_1_fu_731_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_1_fu_736_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln489_1_fu_742_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1516_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_17_fu_757_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln501_1_fu_766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_3_fu_754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_2_fu_750_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_1_fu_773_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_1_fu_785_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_1_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_1_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_1_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_1_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_1_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_3_fu_809_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_4_fu_823_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln489_2_fu_839_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_2_fu_844_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln489_2_fu_850_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1524_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_18_fu_865_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln501_2_fu_874_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_5_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_4_fu_858_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_2_fu_881_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_2_fu_893_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_2_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_2_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_2_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_2_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_897_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_2_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_6_fu_917_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_7_fu_931_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln489_3_fu_947_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_3_fu_952_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln489_3_fu_958_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1532_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_19_fu_973_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln501_3_fu_982_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_7_fu_970_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_6_fu_966_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_3_fu_989_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_3_fu_1001_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_3_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_3_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_3_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_3_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1005_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_3_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_9_fu_1025_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_10_fu_1039_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln489_4_fu_1055_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_4_fu_1060_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln489_4_fu_1066_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1540_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_20_fu_1081_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln501_4_fu_1090_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_9_fu_1078_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_8_fu_1074_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_4_fu_1097_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_4_fu_1109_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_4_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_4_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_4_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_4_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_1113_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_4_fu_1141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_12_fu_1133_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_13_fu_1147_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln489_5_fu_1163_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_5_fu_1168_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln489_5_fu_1174_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1548_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_21_fu_1189_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln501_5_fu_1198_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_11_fu_1186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_10_fu_1182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_5_fu_1205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_5_fu_1217_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_5_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_5_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_5_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_5_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_1221_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_5_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_15_fu_1241_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_16_fu_1255_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln489_6_fu_1271_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_6_fu_1276_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln489_6_fu_1282_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1556_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_22_fu_1297_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln501_6_fu_1306_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_13_fu_1294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_12_fu_1290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_6_fu_1313_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_6_fu_1325_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_6_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_6_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_6_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_6_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_1329_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_6_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_18_fu_1349_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_19_fu_1363_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln489_7_fu_1379_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln489_7_fu_1384_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln489_7_fu_1390_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1564_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln492_23_fu_1405_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal shl_ln501_7_fu_1414_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_15_fu_1402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln492_14_fu_1398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln501_7_fu_1421_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln505_7_fu_1433_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln498_7_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln502_7_fu_1427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln498_7_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln502_7_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_1437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln502_7_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln502_21_fu_1457_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_22_fu_1471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_23_fu_1479_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_20_fu_1371_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_17_fu_1263_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_14_fu_1155_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_11_fu_1047_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_8_fu_939_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_5_fu_831_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln502_2_fu_723_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1508_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1508_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1516_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1516_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1524_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1524_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1532_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1532_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1540_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1540_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1548_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1548_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1556_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1556_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1564_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1564_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1508_ce : STD_LOGIC;
    signal grp_fu_1516_ce : STD_LOGIC;
    signal grp_fu_1524_ce : STD_LOGIC;
    signal grp_fu_1532_ce : STD_LOGIC;
    signal grp_fu_1540_ce : STD_LOGIC;
    signal grp_fu_1548_ce : STD_LOGIC;
    signal grp_fu_1556_ce : STD_LOGIC;
    signal grp_fu_1564_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1508_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1516_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1524_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1532_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1540_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1548_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1556_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1564_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component canny_accel_mul_mul_16ns_15ns_30_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    mul_mul_16ns_15ns_30_4_1_U132 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1508_p0,
        din1 => grp_fu_1508_p1,
        ce => grp_fu_1508_ce,
        dout => grp_fu_1508_p2);

    mul_mul_16ns_15ns_30_4_1_U133 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1516_p0,
        din1 => grp_fu_1516_p1,
        ce => grp_fu_1516_ce,
        dout => grp_fu_1516_p2);

    mul_mul_16ns_15ns_30_4_1_U134 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1524_p0,
        din1 => grp_fu_1524_p1,
        ce => grp_fu_1524_ce,
        dout => grp_fu_1524_p2);

    mul_mul_16ns_15ns_30_4_1_U135 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1532_p0,
        din1 => grp_fu_1532_p1,
        ce => grp_fu_1532_ce,
        dout => grp_fu_1532_p2);

    mul_mul_16ns_15ns_30_4_1_U136 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1540_p0,
        din1 => grp_fu_1540_p1,
        ce => grp_fu_1540_ce,
        dout => grp_fu_1540_p2);

    mul_mul_16ns_15ns_30_4_1_U137 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1548_p0,
        din1 => grp_fu_1548_p1,
        ce => grp_fu_1548_ce,
        dout => grp_fu_1548_p2);

    mul_mul_16ns_15ns_30_4_1_U138 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1556_p0,
        din1 => grp_fu_1556_p1,
        ce => grp_fu_1556_ce,
        dout => grp_fu_1556_p2);

    mul_mul_16ns_15ns_30_4_1_U139 : component canny_accel_mul_mul_16ns_15ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1564_p0,
        din1 => grp_fu_1564_p1,
        ce => grp_fu_1564_ce,
        dout => grp_fu_1564_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln457_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln457_fu_187_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((icmp_ln457_fu_187_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_V_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_V_reg_159 <= i_V_1_reg_1582;
            elsif ((not(((ap_start = ap_const_logic_0) or (imgwidth_2_cast_loc_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_V_reg_159 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j_V_reg_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln464_fu_198_p2 = ap_const_lv1_0))) then 
                j_V_reg_170 <= j_V_1_fu_192_p2;
            elsif (((icmp_ln457_fu_187_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_V_reg_170 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_1_reg_1582 <= i_V_1_fu_181_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln464_reg_1596 <= icmp_ln464_fu_198_p2;
                icmp_ln464_reg_1596_pp0_iter1_reg <= icmp_ln464_reg_1596;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln464_reg_1596_pp0_iter2_reg <= icmp_ln464_reg_1596_pp0_iter1_reg;
                icmp_ln464_reg_1596_pp0_iter3_reg <= icmp_ln464_reg_1596_pp0_iter2_reg;
                p_Result_1_i_i_reg_1627_pp0_iter2_reg <= p_Result_1_i_i_reg_1627;
                p_Result_1_i_i_reg_1627_pp0_iter3_reg <= p_Result_1_i_i_reg_1627_pp0_iter2_reg;
                p_Result_2_i_i_reg_1654_pp0_iter2_reg <= p_Result_2_i_i_reg_1654;
                p_Result_2_i_i_reg_1654_pp0_iter3_reg <= p_Result_2_i_i_reg_1654_pp0_iter2_reg;
                p_Result_3_i_i_reg_1681_pp0_iter2_reg <= p_Result_3_i_i_reg_1681;
                p_Result_3_i_i_reg_1681_pp0_iter3_reg <= p_Result_3_i_i_reg_1681_pp0_iter2_reg;
                p_Result_4_i_i_reg_1708_pp0_iter2_reg <= p_Result_4_i_i_reg_1708;
                p_Result_4_i_i_reg_1708_pp0_iter3_reg <= p_Result_4_i_i_reg_1708_pp0_iter2_reg;
                p_Result_5_i_i_reg_1735_pp0_iter2_reg <= p_Result_5_i_i_reg_1735;
                p_Result_5_i_i_reg_1735_pp0_iter3_reg <= p_Result_5_i_i_reg_1735_pp0_iter2_reg;
                p_Result_6_i_i_reg_1762_pp0_iter2_reg <= p_Result_6_i_i_reg_1762;
                p_Result_6_i_i_reg_1762_pp0_iter3_reg <= p_Result_6_i_i_reg_1762_pp0_iter2_reg;
                p_Result_7_i_i_reg_1789_pp0_iter2_reg <= p_Result_7_i_i_reg_1789;
                p_Result_7_i_i_reg_1789_pp0_iter3_reg <= p_Result_7_i_i_reg_1789_pp0_iter2_reg;
                p_Result_94_1_i_i_reg_1632_pp0_iter2_reg <= p_Result_94_1_i_i_reg_1632;
                p_Result_94_1_i_i_reg_1632_pp0_iter3_reg <= p_Result_94_1_i_i_reg_1632_pp0_iter2_reg;
                p_Result_94_2_i_i_reg_1659_pp0_iter2_reg <= p_Result_94_2_i_i_reg_1659;
                p_Result_94_2_i_i_reg_1659_pp0_iter3_reg <= p_Result_94_2_i_i_reg_1659_pp0_iter2_reg;
                p_Result_94_3_i_i_reg_1686_pp0_iter2_reg <= p_Result_94_3_i_i_reg_1686;
                p_Result_94_3_i_i_reg_1686_pp0_iter3_reg <= p_Result_94_3_i_i_reg_1686_pp0_iter2_reg;
                p_Result_94_4_i_i_reg_1713_pp0_iter2_reg <= p_Result_94_4_i_i_reg_1713;
                p_Result_94_4_i_i_reg_1713_pp0_iter3_reg <= p_Result_94_4_i_i_reg_1713_pp0_iter2_reg;
                p_Result_94_5_i_i_reg_1740_pp0_iter2_reg <= p_Result_94_5_i_i_reg_1740;
                p_Result_94_5_i_i_reg_1740_pp0_iter3_reg <= p_Result_94_5_i_i_reg_1740_pp0_iter2_reg;
                p_Result_94_6_i_i_reg_1767_pp0_iter2_reg <= p_Result_94_6_i_i_reg_1767;
                p_Result_94_6_i_i_reg_1767_pp0_iter3_reg <= p_Result_94_6_i_i_reg_1767_pp0_iter2_reg;
                p_Result_94_7_i_i_reg_1794_pp0_iter2_reg <= p_Result_94_7_i_i_reg_1794;
                p_Result_94_7_i_i_reg_1794_pp0_iter3_reg <= p_Result_94_7_i_i_reg_1794_pp0_iter2_reg;
                select_ln488_1_reg_1639_pp0_iter2_reg <= select_ln488_1_reg_1639;
                select_ln488_1_reg_1639_pp0_iter3_reg <= select_ln488_1_reg_1639_pp0_iter2_reg;
                select_ln488_2_reg_1666_pp0_iter2_reg <= select_ln488_2_reg_1666;
                select_ln488_2_reg_1666_pp0_iter3_reg <= select_ln488_2_reg_1666_pp0_iter2_reg;
                select_ln488_3_reg_1693_pp0_iter2_reg <= select_ln488_3_reg_1693;
                select_ln488_3_reg_1693_pp0_iter3_reg <= select_ln488_3_reg_1693_pp0_iter2_reg;
                select_ln488_4_reg_1720_pp0_iter2_reg <= select_ln488_4_reg_1720;
                select_ln488_4_reg_1720_pp0_iter3_reg <= select_ln488_4_reg_1720_pp0_iter2_reg;
                select_ln488_5_reg_1747_pp0_iter2_reg <= select_ln488_5_reg_1747;
                select_ln488_5_reg_1747_pp0_iter3_reg <= select_ln488_5_reg_1747_pp0_iter2_reg;
                select_ln488_6_reg_1774_pp0_iter2_reg <= select_ln488_6_reg_1774;
                select_ln488_6_reg_1774_pp0_iter3_reg <= select_ln488_6_reg_1774_pp0_iter2_reg;
                select_ln488_7_reg_1801_pp0_iter2_reg <= select_ln488_7_reg_1801;
                select_ln488_7_reg_1801_pp0_iter3_reg <= select_ln488_7_reg_1801_pp0_iter2_reg;
                select_ln488_reg_1612_pp0_iter2_reg <= select_ln488_reg_1612;
                select_ln488_reg_1612_pp0_iter3_reg <= select_ln488_reg_1612_pp0_iter2_reg;
                tmp_59_reg_1622_pp0_iter2_reg <= tmp_59_reg_1622;
                tmp_59_reg_1622_pp0_iter3_reg <= tmp_59_reg_1622_pp0_iter2_reg;
                tmp_62_reg_1649_pp0_iter2_reg <= tmp_62_reg_1649;
                tmp_62_reg_1649_pp0_iter3_reg <= tmp_62_reg_1649_pp0_iter2_reg;
                tmp_65_reg_1676_pp0_iter2_reg <= tmp_65_reg_1676;
                tmp_65_reg_1676_pp0_iter3_reg <= tmp_65_reg_1676_pp0_iter2_reg;
                tmp_68_reg_1703_pp0_iter2_reg <= tmp_68_reg_1703;
                tmp_68_reg_1703_pp0_iter3_reg <= tmp_68_reg_1703_pp0_iter2_reg;
                tmp_71_reg_1730_pp0_iter2_reg <= tmp_71_reg_1730;
                tmp_71_reg_1730_pp0_iter3_reg <= tmp_71_reg_1730_pp0_iter2_reg;
                tmp_74_reg_1757_pp0_iter2_reg <= tmp_74_reg_1757;
                tmp_74_reg_1757_pp0_iter3_reg <= tmp_74_reg_1757_pp0_iter2_reg;
                tmp_77_reg_1784_pp0_iter2_reg <= tmp_77_reg_1784;
                tmp_77_reg_1784_pp0_iter3_reg <= tmp_77_reg_1784_pp0_iter2_reg;
                tmp_80_reg_1811_pp0_iter2_reg <= tmp_80_reg_1811;
                tmp_80_reg_1811_pp0_iter3_reg <= tmp_80_reg_1811_pp0_iter2_reg;
                trunc_ln708_1_reg_1605_pp0_iter2_reg <= trunc_ln708_1_reg_1605;
                trunc_ln708_1_reg_1605_pp0_iter3_reg <= trunc_ln708_1_reg_1605_pp0_iter2_reg;
                trunc_ln708_reg_1600_pp0_iter2_reg <= trunc_ln708_reg_1600;
                trunc_ln708_reg_1600_pp0_iter3_reg <= trunc_ln708_reg_1600_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                img_height_read_reg_1572 <= img_height_dout;
                imgwidth_2_cast_loc_read_reg_1577 <= imgwidth_2_cast_loc_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Result_1_i_i_reg_1627 <= p_src1_data_dout(31 downto 16);
                p_Result_2_i_i_reg_1654 <= p_src1_data_dout(47 downto 32);
                p_Result_3_i_i_reg_1681 <= p_src1_data_dout(63 downto 48);
                p_Result_4_i_i_reg_1708 <= p_src1_data_dout(79 downto 64);
                p_Result_5_i_i_reg_1735 <= p_src1_data_dout(95 downto 80);
                p_Result_6_i_i_reg_1762 <= p_src1_data_dout(111 downto 96);
                p_Result_7_i_i_reg_1789 <= p_src1_data_dout(127 downto 112);
                p_Result_94_1_i_i_reg_1632 <= p_src2_data_dout(31 downto 16);
                p_Result_94_2_i_i_reg_1659 <= p_src2_data_dout(47 downto 32);
                p_Result_94_3_i_i_reg_1686 <= p_src2_data_dout(63 downto 48);
                p_Result_94_4_i_i_reg_1713 <= p_src2_data_dout(79 downto 64);
                p_Result_94_5_i_i_reg_1740 <= p_src2_data_dout(95 downto 80);
                p_Result_94_6_i_i_reg_1767 <= p_src2_data_dout(111 downto 96);
                p_Result_94_7_i_i_reg_1794 <= p_src2_data_dout(127 downto 112);
                select_ln488_1_reg_1639 <= select_ln488_1_fu_279_p3;
                select_ln488_2_reg_1666 <= select_ln488_2_fu_333_p3;
                select_ln488_3_reg_1693 <= select_ln488_3_fu_387_p3;
                select_ln488_4_reg_1720 <= select_ln488_4_fu_441_p3;
                select_ln488_5_reg_1747 <= select_ln488_5_fu_495_p3;
                select_ln488_6_reg_1774 <= select_ln488_6_fu_549_p3;
                select_ln488_7_reg_1801 <= select_ln488_7_fu_603_p3;
                select_ln488_reg_1612 <= select_ln488_fu_225_p3;
                tmp_59_reg_1622 <= p_src2_data_dout(15 downto 15);
                tmp_62_reg_1649 <= p_src2_data_dout(31 downto 31);
                tmp_65_reg_1676 <= p_src2_data_dout(47 downto 47);
                tmp_68_reg_1703 <= p_src2_data_dout(63 downto 63);
                tmp_71_reg_1730 <= p_src2_data_dout(79 downto 79);
                tmp_74_reg_1757 <= p_src2_data_dout(95 downto 95);
                tmp_77_reg_1784 <= p_src2_data_dout(111 downto 111);
                tmp_80_reg_1811 <= p_src2_data_dout(127 downto 127);
                trunc_ln708_1_reg_1605 <= trunc_ln708_1_fu_207_p1;
                trunc_ln708_reg_1600 <= trunc_ln708_fu_203_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, img_height_empty_n, imgwidth_2_cast_loc_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_CS_fsm_state2, icmp_ln457_fu_187_p2, ap_enable_reg_pp0_iter0, icmp_ln464_fu_198_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (imgwidth_2_cast_loc_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln457_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln464_fu_198_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln464_fu_198_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln501_1_fu_773_p2 <= std_logic_vector(unsigned(shl_ln501_1_fu_766_p3) + unsigned(zext_ln492_3_fu_754_p1));
    add_ln501_2_fu_881_p2 <= std_logic_vector(unsigned(shl_ln501_2_fu_874_p3) + unsigned(zext_ln492_5_fu_862_p1));
    add_ln501_3_fu_989_p2 <= std_logic_vector(unsigned(shl_ln501_3_fu_982_p3) + unsigned(zext_ln492_7_fu_970_p1));
    add_ln501_4_fu_1097_p2 <= std_logic_vector(unsigned(shl_ln501_4_fu_1090_p3) + unsigned(zext_ln492_9_fu_1078_p1));
    add_ln501_5_fu_1205_p2 <= std_logic_vector(unsigned(shl_ln501_5_fu_1198_p3) + unsigned(zext_ln492_11_fu_1186_p1));
    add_ln501_6_fu_1313_p2 <= std_logic_vector(unsigned(shl_ln501_6_fu_1306_p3) + unsigned(zext_ln492_13_fu_1294_p1));
    add_ln501_7_fu_1421_p2 <= std_logic_vector(unsigned(shl_ln501_7_fu_1414_p3) + unsigned(zext_ln492_15_fu_1402_p1));
    add_ln501_fu_665_p2 <= std_logic_vector(unsigned(shl_ln1_fu_658_p3) + unsigned(zext_ln492_1_fu_646_p1));
    and_ln502_1_fu_803_p2 <= (xor_ln498_1_fu_797_p2 and icmp_ln502_1_fu_779_p2);
    and_ln502_2_fu_911_p2 <= (xor_ln498_2_fu_905_p2 and icmp_ln502_2_fu_887_p2);
    and_ln502_3_fu_1019_p2 <= (xor_ln498_3_fu_1013_p2 and icmp_ln502_3_fu_995_p2);
    and_ln502_4_fu_1127_p2 <= (xor_ln498_4_fu_1121_p2 and icmp_ln502_4_fu_1103_p2);
    and_ln502_5_fu_1235_p2 <= (xor_ln498_5_fu_1229_p2 and icmp_ln502_5_fu_1211_p2);
    and_ln502_6_fu_1343_p2 <= (xor_ln498_6_fu_1337_p2 and icmp_ln502_6_fu_1319_p2);
    and_ln502_7_fu_1451_p2 <= (xor_ln498_7_fu_1445_p2 and icmp_ln502_7_fu_1427_p2);
    and_ln502_fu_695_p2 <= (xor_ln498_fu_689_p2 and icmp_ln502_fu_671_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src1_data_empty_n, p_src2_data_empty_n, p_dst_data_full_n, ap_enable_reg_pp0_iter1, icmp_ln464_reg_1596, ap_enable_reg_pp0_iter4, icmp_ln464_reg_1596_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln464_reg_1596_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (p_dst_data_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src1_data_empty_n = ap_const_logic_0)) or ((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src2_data_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src1_data_empty_n, p_src2_data_empty_n, p_dst_data_full_n, ap_enable_reg_pp0_iter1, icmp_ln464_reg_1596, ap_enable_reg_pp0_iter4, icmp_ln464_reg_1596_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln464_reg_1596_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (p_dst_data_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src1_data_empty_n = ap_const_logic_0)) or ((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src2_data_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src1_data_empty_n, p_src2_data_empty_n, p_dst_data_full_n, ap_enable_reg_pp0_iter1, icmp_ln464_reg_1596, ap_enable_reg_pp0_iter4, icmp_ln464_reg_1596_pp0_iter3_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln464_reg_1596_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (p_dst_data_full_n = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src1_data_empty_n = ap_const_logic_0)) or ((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src2_data_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, img_height_empty_n, imgwidth_2_cast_loc_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (imgwidth_2_cast_loc_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src1_data_empty_n, p_src2_data_empty_n, icmp_ln464_reg_1596)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src1_data_empty_n = ap_const_logic_0)) or ((icmp_ln464_reg_1596 = ap_const_lv1_0) and (p_src2_data_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter4_assign_proc : process(p_dst_data_full_n, icmp_ln464_reg_1596_pp0_iter3_reg)
    begin
                ap_block_state7_pp0_stage0_iter4 <= ((icmp_ln464_reg_1596_pp0_iter3_reg = ap_const_lv1_0) and (p_dst_data_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln464_fu_198_p2)
    begin
        if ((icmp_ln464_fu_198_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln457_fu_187_p2)
    begin
        if (((icmp_ln457_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln457_fu_187_p2)
    begin
        if (((icmp_ln457_fu_187_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1508_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1508_ce <= ap_const_logic_1;
        else 
            grp_fu_1508_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1508_p0 <= grp_fu_1508_p00(16 - 1 downto 0);
    grp_fu_1508_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_fu_225_p3),30));
    grp_fu_1508_p1 <= ap_const_lv30_3505(15 - 1 downto 0);

    grp_fu_1516_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1516_ce <= ap_const_logic_1;
        else 
            grp_fu_1516_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1516_p0 <= grp_fu_1516_p00(16 - 1 downto 0);
    grp_fu_1516_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_1_fu_279_p3),30));
    grp_fu_1516_p1 <= ap_const_lv30_3505(15 - 1 downto 0);

    grp_fu_1524_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1524_ce <= ap_const_logic_1;
        else 
            grp_fu_1524_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1524_p0 <= grp_fu_1524_p00(16 - 1 downto 0);
    grp_fu_1524_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_2_fu_333_p3),30));
    grp_fu_1524_p1 <= ap_const_lv30_3505(15 - 1 downto 0);

    grp_fu_1532_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1532_ce <= ap_const_logic_1;
        else 
            grp_fu_1532_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1532_p0 <= grp_fu_1532_p00(16 - 1 downto 0);
    grp_fu_1532_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_3_fu_387_p3),30));
    grp_fu_1532_p1 <= ap_const_lv30_3505(15 - 1 downto 0);

    grp_fu_1540_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1540_ce <= ap_const_logic_1;
        else 
            grp_fu_1540_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1540_p0 <= grp_fu_1540_p00(16 - 1 downto 0);
    grp_fu_1540_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_4_fu_441_p3),30));
    grp_fu_1540_p1 <= ap_const_lv30_3505(15 - 1 downto 0);

    grp_fu_1548_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1548_ce <= ap_const_logic_1;
        else 
            grp_fu_1548_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1548_p0 <= grp_fu_1548_p00(16 - 1 downto 0);
    grp_fu_1548_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_5_fu_495_p3),30));
    grp_fu_1548_p1 <= ap_const_lv30_3505(15 - 1 downto 0);

    grp_fu_1556_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1556_ce <= ap_const_logic_1;
        else 
            grp_fu_1556_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1556_p0 <= grp_fu_1556_p00(16 - 1 downto 0);
    grp_fu_1556_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_6_fu_549_p3),30));
    grp_fu_1556_p1 <= ap_const_lv30_3505(15 - 1 downto 0);

    grp_fu_1564_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1564_ce <= ap_const_logic_1;
        else 
            grp_fu_1564_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1564_p0 <= grp_fu_1564_p00(16 - 1 downto 0);
    grp_fu_1564_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln488_7_fu_603_p3),30));
    grp_fu_1564_p1 <= ap_const_lv30_3505(15 - 1 downto 0);
    i_V_1_fu_181_p2 <= std_logic_vector(unsigned(i_V_reg_159) + unsigned(ap_const_lv10_1));
    icmp_ln457_fu_187_p2 <= "1" when (i_V_reg_159 = img_height_read_reg_1572) else "0";
    icmp_ln464_fu_198_p2 <= "1" when (j_V_reg_170 = imgwidth_2_cast_loc_read_reg_1577) else "0";
    icmp_ln498_1_fu_760_p2 <= "1" when (unsigned(shl_ln489_1_fu_742_p3) < unsigned(zext_ln492_17_fu_757_p1)) else "0";
    icmp_ln498_2_fu_868_p2 <= "1" when (unsigned(shl_ln489_2_fu_850_p3) < unsigned(zext_ln492_18_fu_865_p1)) else "0";
    icmp_ln498_3_fu_976_p2 <= "1" when (unsigned(shl_ln489_3_fu_958_p3) < unsigned(zext_ln492_19_fu_973_p1)) else "0";
    icmp_ln498_4_fu_1084_p2 <= "1" when (unsigned(shl_ln489_4_fu_1066_p3) < unsigned(zext_ln492_20_fu_1081_p1)) else "0";
    icmp_ln498_5_fu_1192_p2 <= "1" when (unsigned(shl_ln489_5_fu_1174_p3) < unsigned(zext_ln492_21_fu_1189_p1)) else "0";
    icmp_ln498_6_fu_1300_p2 <= "1" when (unsigned(shl_ln489_6_fu_1282_p3) < unsigned(zext_ln492_22_fu_1297_p1)) else "0";
    icmp_ln498_7_fu_1408_p2 <= "1" when (unsigned(shl_ln489_7_fu_1390_p3) < unsigned(zext_ln492_23_fu_1405_p1)) else "0";
    icmp_ln498_fu_652_p2 <= "1" when (unsigned(shl_ln_fu_634_p3) < unsigned(zext_ln492_16_fu_649_p1)) else "0";
    icmp_ln502_1_fu_779_p2 <= "1" when (signed(zext_ln492_2_fu_750_p1) > signed(add_ln501_1_fu_773_p2)) else "0";
    icmp_ln502_2_fu_887_p2 <= "1" when (signed(zext_ln492_4_fu_858_p1) > signed(add_ln501_2_fu_881_p2)) else "0";
    icmp_ln502_3_fu_995_p2 <= "1" when (signed(zext_ln492_6_fu_966_p1) > signed(add_ln501_3_fu_989_p2)) else "0";
    icmp_ln502_4_fu_1103_p2 <= "1" when (signed(zext_ln492_8_fu_1074_p1) > signed(add_ln501_4_fu_1097_p2)) else "0";
    icmp_ln502_5_fu_1211_p2 <= "1" when (signed(zext_ln492_10_fu_1182_p1) > signed(add_ln501_5_fu_1205_p2)) else "0";
    icmp_ln502_6_fu_1319_p2 <= "1" when (signed(zext_ln492_12_fu_1290_p1) > signed(add_ln501_6_fu_1313_p2)) else "0";
    icmp_ln502_7_fu_1427_p2 <= "1" when (signed(zext_ln492_14_fu_1398_p1) > signed(add_ln501_7_fu_1421_p2)) else "0";
    icmp_ln502_fu_671_p2 <= "1" when (signed(zext_ln492_fu_642_p1) > signed(add_ln501_fu_665_p2)) else "0";

    img_height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_height_blk_n <= img_height_empty_n;
        else 
            img_height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_height_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n, imgwidth_2_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (imgwidth_2_cast_loc_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_height_read <= ap_const_logic_1;
        else 
            img_height_read <= ap_const_logic_0;
        end if; 
    end process;


    imgwidth_2_cast_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, imgwidth_2_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_2_cast_loc_blk_n <= imgwidth_2_cast_loc_empty_n;
        else 
            imgwidth_2_cast_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgwidth_2_cast_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n, imgwidth_2_cast_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (imgwidth_2_cast_loc_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_2_cast_loc_read <= ap_const_logic_1;
        else 
            imgwidth_2_cast_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    j_V_1_fu_192_p2 <= std_logic_vector(unsigned(j_V_reg_170) + unsigned(ap_const_lv8_1));
    or_ln502_1_fu_817_p2 <= (icmp_ln498_1_fu_760_p2 or and_ln502_1_fu_803_p2);
    or_ln502_2_fu_925_p2 <= (icmp_ln498_2_fu_868_p2 or and_ln502_2_fu_911_p2);
    or_ln502_3_fu_1033_p2 <= (icmp_ln498_3_fu_976_p2 or and_ln502_3_fu_1019_p2);
    or_ln502_4_fu_1141_p2 <= (icmp_ln498_4_fu_1084_p2 or and_ln502_4_fu_1127_p2);
    or_ln502_5_fu_1249_p2 <= (icmp_ln498_5_fu_1192_p2 or and_ln502_5_fu_1235_p2);
    or_ln502_6_fu_1357_p2 <= (icmp_ln498_6_fu_1300_p2 or and_ln502_6_fu_1343_p2);
    or_ln502_7_fu_1465_p2 <= (icmp_ln498_7_fu_1408_p2 or and_ln502_7_fu_1451_p2);
    or_ln502_fu_709_p2 <= (icmp_ln498_fu_652_p2 or and_ln502_fu_695_p2);
    p_Result_1_i_i_fu_245_p4 <= p_src1_data_dout(31 downto 16);
    p_Result_2_i_i_fu_299_p4 <= p_src1_data_dout(47 downto 32);
    p_Result_3_i_i_fu_353_p4 <= p_src1_data_dout(63 downto 48);
    p_Result_4_i_i_fu_407_p4 <= p_src1_data_dout(79 downto 64);
    p_Result_5_i_i_fu_461_p4 <= p_src1_data_dout(95 downto 80);
    p_Result_6_i_i_fu_515_p4 <= p_src1_data_dout(111 downto 96);
    p_Result_7_i_i_fu_569_p4 <= p_src1_data_dout(127 downto 112);

    p_dst_data_blk_n_assign_proc : process(p_dst_data_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, icmp_ln464_reg_1596_pp0_iter3_reg)
    begin
        if (((icmp_ln464_reg_1596_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_dst_data_blk_n <= p_dst_data_full_n;
        else 
            p_dst_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_din <= (((((((select_ln502_23_fu_1479_p3 & select_ln502_20_fu_1371_p3) & select_ln502_17_fu_1263_p3) & select_ln502_14_fu_1155_p3) & select_ln502_11_fu_1047_p3) & select_ln502_8_fu_939_p3) & select_ln502_5_fu_831_p3) & select_ln502_2_fu_723_p3);

    p_dst_data_write_assign_proc : process(ap_enable_reg_pp0_iter4, icmp_ln464_reg_1596_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln464_reg_1596_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_write <= ap_const_logic_1;
        else 
            p_dst_data_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src1_data_blk_n_assign_proc : process(p_src1_data_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln464_reg_1596)
    begin
        if (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src1_data_blk_n <= p_src1_data_empty_n;
        else 
            p_src1_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src1_data_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln464_reg_1596, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src1_data_read <= ap_const_logic_1;
        else 
            p_src1_data_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src2_data_blk_n_assign_proc : process(p_src2_data_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln464_reg_1596)
    begin
        if (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src2_data_blk_n <= p_src2_data_empty_n;
        else 
            p_src2_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src2_data_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln464_reg_1596, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln464_reg_1596 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src2_data_read <= ap_const_logic_1;
        else 
            p_src2_data_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln488_1_fu_279_p3 <= 
        sub_ln488_1_fu_273_p2 when (tmp_61_fu_265_p3(0) = '1') else 
        p_Result_1_i_i_fu_245_p4;
    select_ln488_2_fu_333_p3 <= 
        sub_ln488_2_fu_327_p2 when (tmp_64_fu_319_p3(0) = '1') else 
        p_Result_2_i_i_fu_299_p4;
    select_ln488_3_fu_387_p3 <= 
        sub_ln488_3_fu_381_p2 when (tmp_67_fu_373_p3(0) = '1') else 
        p_Result_3_i_i_fu_353_p4;
    select_ln488_4_fu_441_p3 <= 
        sub_ln488_4_fu_435_p2 when (tmp_70_fu_427_p3(0) = '1') else 
        p_Result_4_i_i_fu_407_p4;
    select_ln488_5_fu_495_p3 <= 
        sub_ln488_5_fu_489_p2 when (tmp_73_fu_481_p3(0) = '1') else 
        p_Result_5_i_i_fu_461_p4;
    select_ln488_6_fu_549_p3 <= 
        sub_ln488_6_fu_543_p2 when (tmp_76_fu_535_p3(0) = '1') else 
        p_Result_6_i_i_fu_515_p4;
    select_ln488_7_fu_603_p3 <= 
        sub_ln488_7_fu_597_p2 when (tmp_79_fu_589_p3(0) = '1') else 
        p_Result_7_i_i_fu_569_p4;
    select_ln488_fu_225_p3 <= 
        sub_ln488_fu_219_p2 when (tmp_fu_211_p3(0) = '1') else 
        trunc_ln708_fu_203_p1;
    select_ln489_1_fu_736_p3 <= 
        sub_ln489_1_fu_731_p2 when (tmp_62_reg_1649_pp0_iter3_reg(0) = '1') else 
        p_Result_94_1_i_i_reg_1632_pp0_iter3_reg;
    select_ln489_2_fu_844_p3 <= 
        sub_ln489_2_fu_839_p2 when (tmp_65_reg_1676_pp0_iter3_reg(0) = '1') else 
        p_Result_94_2_i_i_reg_1659_pp0_iter3_reg;
    select_ln489_3_fu_952_p3 <= 
        sub_ln489_3_fu_947_p2 when (tmp_68_reg_1703_pp0_iter3_reg(0) = '1') else 
        p_Result_94_3_i_i_reg_1686_pp0_iter3_reg;
    select_ln489_4_fu_1060_p3 <= 
        sub_ln489_4_fu_1055_p2 when (tmp_71_reg_1730_pp0_iter3_reg(0) = '1') else 
        p_Result_94_4_i_i_reg_1713_pp0_iter3_reg;
    select_ln489_5_fu_1168_p3 <= 
        sub_ln489_5_fu_1163_p2 when (tmp_74_reg_1757_pp0_iter3_reg(0) = '1') else 
        p_Result_94_5_i_i_reg_1740_pp0_iter3_reg;
    select_ln489_6_fu_1276_p3 <= 
        sub_ln489_6_fu_1271_p2 when (tmp_77_reg_1784_pp0_iter3_reg(0) = '1') else 
        p_Result_94_6_i_i_reg_1767_pp0_iter3_reg;
    select_ln489_7_fu_1384_p3 <= 
        sub_ln489_7_fu_1379_p2 when (tmp_80_reg_1811_pp0_iter3_reg(0) = '1') else 
        p_Result_94_7_i_i_reg_1794_pp0_iter3_reg;
    select_ln489_fu_628_p3 <= 
        sub_ln489_fu_623_p2 when (tmp_59_reg_1622_pp0_iter3_reg(0) = '1') else 
        trunc_ln708_1_reg_1605_pp0_iter3_reg;
    select_ln502_10_fu_1039_p3 <= 
        ap_const_lv8_2D when (tmp_69_fu_1005_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_11_fu_1047_p3 <= 
        select_ln502_9_fu_1025_p3 when (or_ln502_3_fu_1033_p2(0) = '1') else 
        select_ln502_10_fu_1039_p3;
    select_ln502_12_fu_1133_p3 <= 
        ap_const_lv8_5A when (and_ln502_4_fu_1127_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln502_13_fu_1147_p3 <= 
        ap_const_lv8_2D when (tmp_72_fu_1113_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_14_fu_1155_p3 <= 
        select_ln502_12_fu_1133_p3 when (or_ln502_4_fu_1141_p2(0) = '1') else 
        select_ln502_13_fu_1147_p3;
    select_ln502_15_fu_1241_p3 <= 
        ap_const_lv8_5A when (and_ln502_5_fu_1235_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln502_16_fu_1255_p3 <= 
        ap_const_lv8_2D when (tmp_75_fu_1221_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_17_fu_1263_p3 <= 
        select_ln502_15_fu_1241_p3 when (or_ln502_5_fu_1249_p2(0) = '1') else 
        select_ln502_16_fu_1255_p3;
    select_ln502_18_fu_1349_p3 <= 
        ap_const_lv8_5A when (and_ln502_6_fu_1343_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln502_19_fu_1363_p3 <= 
        ap_const_lv8_2D when (tmp_78_fu_1329_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_1_fu_715_p3 <= 
        ap_const_lv8_2D when (tmp_60_fu_681_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_20_fu_1371_p3 <= 
        select_ln502_18_fu_1349_p3 when (or_ln502_6_fu_1357_p2(0) = '1') else 
        select_ln502_19_fu_1363_p3;
    select_ln502_21_fu_1457_p3 <= 
        ap_const_lv8_5A when (and_ln502_7_fu_1451_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln502_22_fu_1471_p3 <= 
        ap_const_lv8_2D when (tmp_81_fu_1437_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_23_fu_1479_p3 <= 
        select_ln502_21_fu_1457_p3 when (or_ln502_7_fu_1465_p2(0) = '1') else 
        select_ln502_22_fu_1471_p3;
    select_ln502_2_fu_723_p3 <= 
        select_ln502_fu_701_p3 when (or_ln502_fu_709_p2(0) = '1') else 
        select_ln502_1_fu_715_p3;
    select_ln502_3_fu_809_p3 <= 
        ap_const_lv8_5A when (and_ln502_1_fu_803_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln502_4_fu_823_p3 <= 
        ap_const_lv8_2D when (tmp_63_fu_789_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_5_fu_831_p3 <= 
        select_ln502_3_fu_809_p3 when (or_ln502_1_fu_817_p2(0) = '1') else 
        select_ln502_4_fu_823_p3;
    select_ln502_6_fu_917_p3 <= 
        ap_const_lv8_5A when (and_ln502_2_fu_911_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln502_7_fu_931_p3 <= 
        ap_const_lv8_2D when (tmp_66_fu_897_p3(0) = '1') else 
        ap_const_lv8_87;
    select_ln502_8_fu_939_p3 <= 
        select_ln502_6_fu_917_p3 when (or_ln502_2_fu_925_p2(0) = '1') else 
        select_ln502_7_fu_931_p3;
    select_ln502_9_fu_1025_p3 <= 
        ap_const_lv8_5A when (and_ln502_3_fu_1019_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln502_fu_701_p3 <= 
        ap_const_lv8_5A when (and_ln502_fu_695_p2(0) = '1') else 
        ap_const_lv8_0;
    shl_ln1_fu_658_p3 <= (select_ln488_reg_1612_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln489_1_fu_742_p3 <= (select_ln489_1_fu_736_p3 & ap_const_lv15_0);
    shl_ln489_2_fu_850_p3 <= (select_ln489_2_fu_844_p3 & ap_const_lv15_0);
    shl_ln489_3_fu_958_p3 <= (select_ln489_3_fu_952_p3 & ap_const_lv15_0);
    shl_ln489_4_fu_1066_p3 <= (select_ln489_4_fu_1060_p3 & ap_const_lv15_0);
    shl_ln489_5_fu_1174_p3 <= (select_ln489_5_fu_1168_p3 & ap_const_lv15_0);
    shl_ln489_6_fu_1282_p3 <= (select_ln489_6_fu_1276_p3 & ap_const_lv15_0);
    shl_ln489_7_fu_1390_p3 <= (select_ln489_7_fu_1384_p3 & ap_const_lv15_0);
    shl_ln501_1_fu_766_p3 <= (select_ln488_1_reg_1639_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln501_2_fu_874_p3 <= (select_ln488_2_reg_1666_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln501_3_fu_982_p3 <= (select_ln488_3_reg_1693_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln501_4_fu_1090_p3 <= (select_ln488_4_reg_1720_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln501_5_fu_1198_p3 <= (select_ln488_5_reg_1747_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln501_6_fu_1306_p3 <= (select_ln488_6_reg_1774_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln501_7_fu_1414_p3 <= (select_ln488_7_reg_1801_pp0_iter3_reg & ap_const_lv16_0);
    shl_ln_fu_634_p3 <= (select_ln489_fu_628_p3 & ap_const_lv15_0);
    sub_ln488_1_fu_273_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_1_i_i_fu_245_p4));
    sub_ln488_2_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_2_i_i_fu_299_p4));
    sub_ln488_3_fu_381_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_3_i_i_fu_353_p4));
    sub_ln488_4_fu_435_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_4_i_i_fu_407_p4));
    sub_ln488_5_fu_489_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_5_i_i_fu_461_p4));
    sub_ln488_6_fu_543_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_6_i_i_fu_515_p4));
    sub_ln488_7_fu_597_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_7_i_i_fu_569_p4));
    sub_ln488_fu_219_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln708_fu_203_p1));
    sub_ln489_1_fu_731_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_94_1_i_i_reg_1632_pp0_iter3_reg));
    sub_ln489_2_fu_839_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_94_2_i_i_reg_1659_pp0_iter3_reg));
    sub_ln489_3_fu_947_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_94_3_i_i_reg_1686_pp0_iter3_reg));
    sub_ln489_4_fu_1055_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_94_4_i_i_reg_1713_pp0_iter3_reg));
    sub_ln489_5_fu_1163_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_94_5_i_i_reg_1740_pp0_iter3_reg));
    sub_ln489_6_fu_1271_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_94_6_i_i_reg_1767_pp0_iter3_reg));
    sub_ln489_7_fu_1379_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_94_7_i_i_reg_1794_pp0_iter3_reg));
    sub_ln489_fu_623_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln708_1_reg_1605_pp0_iter3_reg));
    tmp_60_fu_681_p3 <= xor_ln505_fu_677_p2(15 downto 15);
    tmp_61_fu_265_p3 <= p_src1_data_dout(31 downto 31);
    tmp_63_fu_789_p3 <= xor_ln505_1_fu_785_p2(15 downto 15);
    tmp_64_fu_319_p3 <= p_src1_data_dout(47 downto 47);
    tmp_66_fu_897_p3 <= xor_ln505_2_fu_893_p2(15 downto 15);
    tmp_67_fu_373_p3 <= p_src1_data_dout(63 downto 63);
    tmp_69_fu_1005_p3 <= xor_ln505_3_fu_1001_p2(15 downto 15);
    tmp_70_fu_427_p3 <= p_src1_data_dout(79 downto 79);
    tmp_72_fu_1113_p3 <= xor_ln505_4_fu_1109_p2(15 downto 15);
    tmp_73_fu_481_p3 <= p_src1_data_dout(95 downto 95);
    tmp_75_fu_1221_p3 <= xor_ln505_5_fu_1217_p2(15 downto 15);
    tmp_76_fu_535_p3 <= p_src1_data_dout(111 downto 111);
    tmp_78_fu_1329_p3 <= xor_ln505_6_fu_1325_p2(15 downto 15);
    tmp_79_fu_589_p3 <= p_src1_data_dout(127 downto 127);
    tmp_81_fu_1437_p3 <= xor_ln505_7_fu_1433_p2(15 downto 15);
    tmp_fu_211_p3 <= p_src1_data_dout(15 downto 15);
    trunc_ln708_1_fu_207_p1 <= p_src2_data_dout(16 - 1 downto 0);
    trunc_ln708_fu_203_p1 <= p_src1_data_dout(16 - 1 downto 0);
    xor_ln498_1_fu_797_p2 <= (icmp_ln498_1_fu_760_p2 xor ap_const_lv1_1);
    xor_ln498_2_fu_905_p2 <= (icmp_ln498_2_fu_868_p2 xor ap_const_lv1_1);
    xor_ln498_3_fu_1013_p2 <= (icmp_ln498_3_fu_976_p2 xor ap_const_lv1_1);
    xor_ln498_4_fu_1121_p2 <= (icmp_ln498_4_fu_1084_p2 xor ap_const_lv1_1);
    xor_ln498_5_fu_1229_p2 <= (icmp_ln498_5_fu_1192_p2 xor ap_const_lv1_1);
    xor_ln498_6_fu_1337_p2 <= (icmp_ln498_6_fu_1300_p2 xor ap_const_lv1_1);
    xor_ln498_7_fu_1445_p2 <= (icmp_ln498_7_fu_1408_p2 xor ap_const_lv1_1);
    xor_ln498_fu_689_p2 <= (icmp_ln498_fu_652_p2 xor ap_const_lv1_1);
    xor_ln505_1_fu_785_p2 <= (p_Result_94_1_i_i_reg_1632_pp0_iter3_reg xor p_Result_1_i_i_reg_1627_pp0_iter3_reg);
    xor_ln505_2_fu_893_p2 <= (p_Result_94_2_i_i_reg_1659_pp0_iter3_reg xor p_Result_2_i_i_reg_1654_pp0_iter3_reg);
    xor_ln505_3_fu_1001_p2 <= (p_Result_94_3_i_i_reg_1686_pp0_iter3_reg xor p_Result_3_i_i_reg_1681_pp0_iter3_reg);
    xor_ln505_4_fu_1109_p2 <= (p_Result_94_4_i_i_reg_1713_pp0_iter3_reg xor p_Result_4_i_i_reg_1708_pp0_iter3_reg);
    xor_ln505_5_fu_1217_p2 <= (p_Result_94_5_i_i_reg_1740_pp0_iter3_reg xor p_Result_5_i_i_reg_1735_pp0_iter3_reg);
    xor_ln505_6_fu_1325_p2 <= (p_Result_94_6_i_i_reg_1767_pp0_iter3_reg xor p_Result_6_i_i_reg_1762_pp0_iter3_reg);
    xor_ln505_7_fu_1433_p2 <= (p_Result_94_7_i_i_reg_1794_pp0_iter3_reg xor p_Result_7_i_i_reg_1789_pp0_iter3_reg);
    xor_ln505_fu_677_p2 <= (trunc_ln708_reg_1600_pp0_iter3_reg xor trunc_ln708_1_reg_1605_pp0_iter3_reg);
    zext_ln492_10_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln489_5_fu_1174_p3),32));
    zext_ln492_11_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1548_p2),32));
    zext_ln492_12_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln489_6_fu_1282_p3),32));
    zext_ln492_13_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1556_p2),32));
    zext_ln492_14_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln489_7_fu_1390_p3),32));
    zext_ln492_15_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1564_p2),32));
    zext_ln492_16_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1508_p2),31));
    zext_ln492_17_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1516_p2),31));
    zext_ln492_18_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1524_p2),31));
    zext_ln492_19_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1532_p2),31));
    zext_ln492_1_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1508_p2),32));
    zext_ln492_20_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1540_p2),31));
    zext_ln492_21_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1548_p2),31));
    zext_ln492_22_fu_1297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1556_p2),31));
    zext_ln492_23_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1564_p2),31));
    zext_ln492_2_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln489_1_fu_742_p3),32));
    zext_ln492_3_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1516_p2),32));
    zext_ln492_4_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln489_2_fu_850_p3),32));
    zext_ln492_5_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1524_p2),32));
    zext_ln492_6_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln489_3_fu_958_p3),32));
    zext_ln492_7_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1532_p2),32));
    zext_ln492_8_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln489_4_fu_1066_p3),32));
    zext_ln492_9_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1540_p2),32));
    zext_ln492_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_634_p3),32));
end behav;
