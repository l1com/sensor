// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module canny_accel_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src1_data_dout,
        p_src1_data_empty_n,
        p_src1_data_read,
        p_src2_data_dout,
        p_src2_data_empty_n,
        p_src2_data_read,
        p_dst_data_din,
        p_dst_data_full_n,
        p_dst_data_write,
        img_height_dout,
        img_height_empty_n,
        img_height_read,
        imgwidth_2_cast_loc_dout,
        imgwidth_2_cast_loc_empty_n,
        imgwidth_2_cast_loc_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] p_src1_data_dout;
input   p_src1_data_empty_n;
output   p_src1_data_read;
input  [127:0] p_src2_data_dout;
input   p_src2_data_empty_n;
output   p_src2_data_read;
output  [63:0] p_dst_data_din;
input   p_dst_data_full_n;
output   p_dst_data_write;
input  [9:0] img_height_dout;
input   img_height_empty_n;
output   img_height_read;
input  [7:0] imgwidth_2_cast_loc_dout;
input   imgwidth_2_cast_loc_empty_n;
output   imgwidth_2_cast_loc_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src1_data_read;
reg p_src2_data_read;
reg p_dst_data_write;
reg img_height_read;
reg imgwidth_2_cast_loc_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src1_data_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln464_reg_1596;
reg    p_src2_data_blk_n;
reg    p_dst_data_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln464_reg_1596_pp0_iter3_reg;
reg    img_height_blk_n;
reg    imgwidth_2_cast_loc_blk_n;
reg   [7:0] j_V_reg_170;
reg   [9:0] img_height_read_reg_1572;
reg   [7:0] imgwidth_2_cast_loc_read_reg_1577;
wire   [9:0] i_V_1_fu_181_p2;
reg   [9:0] i_V_1_reg_1582;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln457_fu_187_p2;
wire   [7:0] j_V_1_fu_192_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln464_fu_198_p2;
reg   [0:0] icmp_ln464_reg_1596_pp0_iter1_reg;
reg   [0:0] icmp_ln464_reg_1596_pp0_iter2_reg;
wire   [15:0] trunc_ln708_fu_203_p1;
reg   [15:0] trunc_ln708_reg_1600;
reg   [15:0] trunc_ln708_reg_1600_pp0_iter2_reg;
reg   [15:0] trunc_ln708_reg_1600_pp0_iter3_reg;
wire   [15:0] trunc_ln708_1_fu_207_p1;
reg   [15:0] trunc_ln708_1_reg_1605;
reg   [15:0] trunc_ln708_1_reg_1605_pp0_iter2_reg;
reg   [15:0] trunc_ln708_1_reg_1605_pp0_iter3_reg;
wire   [15:0] select_ln488_fu_225_p3;
reg   [15:0] select_ln488_reg_1612;
reg   [15:0] select_ln488_reg_1612_pp0_iter2_reg;
reg   [15:0] select_ln488_reg_1612_pp0_iter3_reg;
reg   [0:0] tmp_59_reg_1622;
reg   [0:0] tmp_59_reg_1622_pp0_iter2_reg;
reg   [0:0] tmp_59_reg_1622_pp0_iter3_reg;
wire   [15:0] p_Result_1_i_i_fu_245_p4;
reg   [15:0] p_Result_1_i_i_reg_1627;
reg   [15:0] p_Result_1_i_i_reg_1627_pp0_iter2_reg;
reg   [15:0] p_Result_1_i_i_reg_1627_pp0_iter3_reg;
reg   [15:0] p_Result_94_1_i_i_reg_1632;
reg   [15:0] p_Result_94_1_i_i_reg_1632_pp0_iter2_reg;
reg   [15:0] p_Result_94_1_i_i_reg_1632_pp0_iter3_reg;
wire   [15:0] select_ln488_1_fu_279_p3;
reg   [15:0] select_ln488_1_reg_1639;
reg   [15:0] select_ln488_1_reg_1639_pp0_iter2_reg;
reg   [15:0] select_ln488_1_reg_1639_pp0_iter3_reg;
reg   [0:0] tmp_62_reg_1649;
reg   [0:0] tmp_62_reg_1649_pp0_iter2_reg;
reg   [0:0] tmp_62_reg_1649_pp0_iter3_reg;
wire   [15:0] p_Result_2_i_i_fu_299_p4;
reg   [15:0] p_Result_2_i_i_reg_1654;
reg   [15:0] p_Result_2_i_i_reg_1654_pp0_iter2_reg;
reg   [15:0] p_Result_2_i_i_reg_1654_pp0_iter3_reg;
reg   [15:0] p_Result_94_2_i_i_reg_1659;
reg   [15:0] p_Result_94_2_i_i_reg_1659_pp0_iter2_reg;
reg   [15:0] p_Result_94_2_i_i_reg_1659_pp0_iter3_reg;
wire   [15:0] select_ln488_2_fu_333_p3;
reg   [15:0] select_ln488_2_reg_1666;
reg   [15:0] select_ln488_2_reg_1666_pp0_iter2_reg;
reg   [15:0] select_ln488_2_reg_1666_pp0_iter3_reg;
reg   [0:0] tmp_65_reg_1676;
reg   [0:0] tmp_65_reg_1676_pp0_iter2_reg;
reg   [0:0] tmp_65_reg_1676_pp0_iter3_reg;
wire   [15:0] p_Result_3_i_i_fu_353_p4;
reg   [15:0] p_Result_3_i_i_reg_1681;
reg   [15:0] p_Result_3_i_i_reg_1681_pp0_iter2_reg;
reg   [15:0] p_Result_3_i_i_reg_1681_pp0_iter3_reg;
reg   [15:0] p_Result_94_3_i_i_reg_1686;
reg   [15:0] p_Result_94_3_i_i_reg_1686_pp0_iter2_reg;
reg   [15:0] p_Result_94_3_i_i_reg_1686_pp0_iter3_reg;
wire   [15:0] select_ln488_3_fu_387_p3;
reg   [15:0] select_ln488_3_reg_1693;
reg   [15:0] select_ln488_3_reg_1693_pp0_iter2_reg;
reg   [15:0] select_ln488_3_reg_1693_pp0_iter3_reg;
reg   [0:0] tmp_68_reg_1703;
reg   [0:0] tmp_68_reg_1703_pp0_iter2_reg;
reg   [0:0] tmp_68_reg_1703_pp0_iter3_reg;
wire   [15:0] p_Result_4_i_i_fu_407_p4;
reg   [15:0] p_Result_4_i_i_reg_1708;
reg   [15:0] p_Result_4_i_i_reg_1708_pp0_iter2_reg;
reg   [15:0] p_Result_4_i_i_reg_1708_pp0_iter3_reg;
reg   [15:0] p_Result_94_4_i_i_reg_1713;
reg   [15:0] p_Result_94_4_i_i_reg_1713_pp0_iter2_reg;
reg   [15:0] p_Result_94_4_i_i_reg_1713_pp0_iter3_reg;
wire   [15:0] select_ln488_4_fu_441_p3;
reg   [15:0] select_ln488_4_reg_1720;
reg   [15:0] select_ln488_4_reg_1720_pp0_iter2_reg;
reg   [15:0] select_ln488_4_reg_1720_pp0_iter3_reg;
reg   [0:0] tmp_71_reg_1730;
reg   [0:0] tmp_71_reg_1730_pp0_iter2_reg;
reg   [0:0] tmp_71_reg_1730_pp0_iter3_reg;
wire   [15:0] p_Result_5_i_i_fu_461_p4;
reg   [15:0] p_Result_5_i_i_reg_1735;
reg   [15:0] p_Result_5_i_i_reg_1735_pp0_iter2_reg;
reg   [15:0] p_Result_5_i_i_reg_1735_pp0_iter3_reg;
reg   [15:0] p_Result_94_5_i_i_reg_1740;
reg   [15:0] p_Result_94_5_i_i_reg_1740_pp0_iter2_reg;
reg   [15:0] p_Result_94_5_i_i_reg_1740_pp0_iter3_reg;
wire   [15:0] select_ln488_5_fu_495_p3;
reg   [15:0] select_ln488_5_reg_1747;
reg   [15:0] select_ln488_5_reg_1747_pp0_iter2_reg;
reg   [15:0] select_ln488_5_reg_1747_pp0_iter3_reg;
reg   [0:0] tmp_74_reg_1757;
reg   [0:0] tmp_74_reg_1757_pp0_iter2_reg;
reg   [0:0] tmp_74_reg_1757_pp0_iter3_reg;
wire   [15:0] p_Result_6_i_i_fu_515_p4;
reg   [15:0] p_Result_6_i_i_reg_1762;
reg   [15:0] p_Result_6_i_i_reg_1762_pp0_iter2_reg;
reg   [15:0] p_Result_6_i_i_reg_1762_pp0_iter3_reg;
reg   [15:0] p_Result_94_6_i_i_reg_1767;
reg   [15:0] p_Result_94_6_i_i_reg_1767_pp0_iter2_reg;
reg   [15:0] p_Result_94_6_i_i_reg_1767_pp0_iter3_reg;
wire   [15:0] select_ln488_6_fu_549_p3;
reg   [15:0] select_ln488_6_reg_1774;
reg   [15:0] select_ln488_6_reg_1774_pp0_iter2_reg;
reg   [15:0] select_ln488_6_reg_1774_pp0_iter3_reg;
reg   [0:0] tmp_77_reg_1784;
reg   [0:0] tmp_77_reg_1784_pp0_iter2_reg;
reg   [0:0] tmp_77_reg_1784_pp0_iter3_reg;
wire   [15:0] p_Result_7_i_i_fu_569_p4;
reg   [15:0] p_Result_7_i_i_reg_1789;
reg   [15:0] p_Result_7_i_i_reg_1789_pp0_iter2_reg;
reg   [15:0] p_Result_7_i_i_reg_1789_pp0_iter3_reg;
reg   [15:0] p_Result_94_7_i_i_reg_1794;
reg   [15:0] p_Result_94_7_i_i_reg_1794_pp0_iter2_reg;
reg   [15:0] p_Result_94_7_i_i_reg_1794_pp0_iter3_reg;
wire   [15:0] select_ln488_7_fu_603_p3;
reg   [15:0] select_ln488_7_reg_1801;
reg   [15:0] select_ln488_7_reg_1801_pp0_iter2_reg;
reg   [15:0] select_ln488_7_reg_1801_pp0_iter3_reg;
reg   [0:0] tmp_80_reg_1811;
reg   [0:0] tmp_80_reg_1811_pp0_iter2_reg;
reg   [0:0] tmp_80_reg_1811_pp0_iter3_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [9:0] i_V_reg_159;
reg    ap_block_state1;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_fu_211_p3;
wire   [15:0] sub_ln488_fu_219_p2;
wire   [0:0] tmp_61_fu_265_p3;
wire   [15:0] sub_ln488_1_fu_273_p2;
wire   [0:0] tmp_64_fu_319_p3;
wire   [15:0] sub_ln488_2_fu_327_p2;
wire   [0:0] tmp_67_fu_373_p3;
wire   [15:0] sub_ln488_3_fu_381_p2;
wire   [0:0] tmp_70_fu_427_p3;
wire   [15:0] sub_ln488_4_fu_435_p2;
wire   [0:0] tmp_73_fu_481_p3;
wire   [15:0] sub_ln488_5_fu_489_p2;
wire   [0:0] tmp_76_fu_535_p3;
wire   [15:0] sub_ln488_6_fu_543_p2;
wire   [0:0] tmp_79_fu_589_p3;
wire   [15:0] sub_ln488_7_fu_597_p2;
wire   [15:0] sub_ln489_fu_623_p2;
wire   [15:0] select_ln489_fu_628_p3;
wire   [30:0] shl_ln_fu_634_p3;
wire   [29:0] grp_fu_1508_p2;
wire   [30:0] zext_ln492_16_fu_649_p1;
wire   [31:0] shl_ln1_fu_658_p3;
wire   [31:0] zext_ln492_1_fu_646_p1;
wire   [31:0] zext_ln492_fu_642_p1;
wire   [31:0] add_ln501_fu_665_p2;
wire   [15:0] xor_ln505_fu_677_p2;
wire   [0:0] icmp_ln498_fu_652_p2;
wire   [0:0] icmp_ln502_fu_671_p2;
wire   [0:0] xor_ln498_fu_689_p2;
wire   [0:0] and_ln502_fu_695_p2;
wire   [0:0] tmp_60_fu_681_p3;
wire   [0:0] or_ln502_fu_709_p2;
wire   [7:0] select_ln502_fu_701_p3;
wire   [7:0] select_ln502_1_fu_715_p3;
wire   [15:0] sub_ln489_1_fu_731_p2;
wire   [15:0] select_ln489_1_fu_736_p3;
wire   [30:0] shl_ln489_1_fu_742_p3;
wire   [29:0] grp_fu_1516_p2;
wire   [30:0] zext_ln492_17_fu_757_p1;
wire   [31:0] shl_ln501_1_fu_766_p3;
wire   [31:0] zext_ln492_3_fu_754_p1;
wire   [31:0] zext_ln492_2_fu_750_p1;
wire   [31:0] add_ln501_1_fu_773_p2;
wire   [15:0] xor_ln505_1_fu_785_p2;
wire   [0:0] icmp_ln498_1_fu_760_p2;
wire   [0:0] icmp_ln502_1_fu_779_p2;
wire   [0:0] xor_ln498_1_fu_797_p2;
wire   [0:0] and_ln502_1_fu_803_p2;
wire   [0:0] tmp_63_fu_789_p3;
wire   [0:0] or_ln502_1_fu_817_p2;
wire   [7:0] select_ln502_3_fu_809_p3;
wire   [7:0] select_ln502_4_fu_823_p3;
wire   [15:0] sub_ln489_2_fu_839_p2;
wire   [15:0] select_ln489_2_fu_844_p3;
wire   [30:0] shl_ln489_2_fu_850_p3;
wire   [29:0] grp_fu_1524_p2;
wire   [30:0] zext_ln492_18_fu_865_p1;
wire   [31:0] shl_ln501_2_fu_874_p3;
wire   [31:0] zext_ln492_5_fu_862_p1;
wire   [31:0] zext_ln492_4_fu_858_p1;
wire   [31:0] add_ln501_2_fu_881_p2;
wire   [15:0] xor_ln505_2_fu_893_p2;
wire   [0:0] icmp_ln498_2_fu_868_p2;
wire   [0:0] icmp_ln502_2_fu_887_p2;
wire   [0:0] xor_ln498_2_fu_905_p2;
wire   [0:0] and_ln502_2_fu_911_p2;
wire   [0:0] tmp_66_fu_897_p3;
wire   [0:0] or_ln502_2_fu_925_p2;
wire   [7:0] select_ln502_6_fu_917_p3;
wire   [7:0] select_ln502_7_fu_931_p3;
wire   [15:0] sub_ln489_3_fu_947_p2;
wire   [15:0] select_ln489_3_fu_952_p3;
wire   [30:0] shl_ln489_3_fu_958_p3;
wire   [29:0] grp_fu_1532_p2;
wire   [30:0] zext_ln492_19_fu_973_p1;
wire   [31:0] shl_ln501_3_fu_982_p3;
wire   [31:0] zext_ln492_7_fu_970_p1;
wire   [31:0] zext_ln492_6_fu_966_p1;
wire   [31:0] add_ln501_3_fu_989_p2;
wire   [15:0] xor_ln505_3_fu_1001_p2;
wire   [0:0] icmp_ln498_3_fu_976_p2;
wire   [0:0] icmp_ln502_3_fu_995_p2;
wire   [0:0] xor_ln498_3_fu_1013_p2;
wire   [0:0] and_ln502_3_fu_1019_p2;
wire   [0:0] tmp_69_fu_1005_p3;
wire   [0:0] or_ln502_3_fu_1033_p2;
wire   [7:0] select_ln502_9_fu_1025_p3;
wire   [7:0] select_ln502_10_fu_1039_p3;
wire   [15:0] sub_ln489_4_fu_1055_p2;
wire   [15:0] select_ln489_4_fu_1060_p3;
wire   [30:0] shl_ln489_4_fu_1066_p3;
wire   [29:0] grp_fu_1540_p2;
wire   [30:0] zext_ln492_20_fu_1081_p1;
wire   [31:0] shl_ln501_4_fu_1090_p3;
wire   [31:0] zext_ln492_9_fu_1078_p1;
wire   [31:0] zext_ln492_8_fu_1074_p1;
wire   [31:0] add_ln501_4_fu_1097_p2;
wire   [15:0] xor_ln505_4_fu_1109_p2;
wire   [0:0] icmp_ln498_4_fu_1084_p2;
wire   [0:0] icmp_ln502_4_fu_1103_p2;
wire   [0:0] xor_ln498_4_fu_1121_p2;
wire   [0:0] and_ln502_4_fu_1127_p2;
wire   [0:0] tmp_72_fu_1113_p3;
wire   [0:0] or_ln502_4_fu_1141_p2;
wire   [7:0] select_ln502_12_fu_1133_p3;
wire   [7:0] select_ln502_13_fu_1147_p3;
wire   [15:0] sub_ln489_5_fu_1163_p2;
wire   [15:0] select_ln489_5_fu_1168_p3;
wire   [30:0] shl_ln489_5_fu_1174_p3;
wire   [29:0] grp_fu_1548_p2;
wire   [30:0] zext_ln492_21_fu_1189_p1;
wire   [31:0] shl_ln501_5_fu_1198_p3;
wire   [31:0] zext_ln492_11_fu_1186_p1;
wire   [31:0] zext_ln492_10_fu_1182_p1;
wire   [31:0] add_ln501_5_fu_1205_p2;
wire   [15:0] xor_ln505_5_fu_1217_p2;
wire   [0:0] icmp_ln498_5_fu_1192_p2;
wire   [0:0] icmp_ln502_5_fu_1211_p2;
wire   [0:0] xor_ln498_5_fu_1229_p2;
wire   [0:0] and_ln502_5_fu_1235_p2;
wire   [0:0] tmp_75_fu_1221_p3;
wire   [0:0] or_ln502_5_fu_1249_p2;
wire   [7:0] select_ln502_15_fu_1241_p3;
wire   [7:0] select_ln502_16_fu_1255_p3;
wire   [15:0] sub_ln489_6_fu_1271_p2;
wire   [15:0] select_ln489_6_fu_1276_p3;
wire   [30:0] shl_ln489_6_fu_1282_p3;
wire   [29:0] grp_fu_1556_p2;
wire   [30:0] zext_ln492_22_fu_1297_p1;
wire   [31:0] shl_ln501_6_fu_1306_p3;
wire   [31:0] zext_ln492_13_fu_1294_p1;
wire   [31:0] zext_ln492_12_fu_1290_p1;
wire   [31:0] add_ln501_6_fu_1313_p2;
wire   [15:0] xor_ln505_6_fu_1325_p2;
wire   [0:0] icmp_ln498_6_fu_1300_p2;
wire   [0:0] icmp_ln502_6_fu_1319_p2;
wire   [0:0] xor_ln498_6_fu_1337_p2;
wire   [0:0] and_ln502_6_fu_1343_p2;
wire   [0:0] tmp_78_fu_1329_p3;
wire   [0:0] or_ln502_6_fu_1357_p2;
wire   [7:0] select_ln502_18_fu_1349_p3;
wire   [7:0] select_ln502_19_fu_1363_p3;
wire   [15:0] sub_ln489_7_fu_1379_p2;
wire   [15:0] select_ln489_7_fu_1384_p3;
wire   [30:0] shl_ln489_7_fu_1390_p3;
wire   [29:0] grp_fu_1564_p2;
wire   [30:0] zext_ln492_23_fu_1405_p1;
wire   [31:0] shl_ln501_7_fu_1414_p3;
wire   [31:0] zext_ln492_15_fu_1402_p1;
wire   [31:0] zext_ln492_14_fu_1398_p1;
wire   [31:0] add_ln501_7_fu_1421_p2;
wire   [15:0] xor_ln505_7_fu_1433_p2;
wire   [0:0] icmp_ln498_7_fu_1408_p2;
wire   [0:0] icmp_ln502_7_fu_1427_p2;
wire   [0:0] xor_ln498_7_fu_1445_p2;
wire   [0:0] and_ln502_7_fu_1451_p2;
wire   [0:0] tmp_81_fu_1437_p3;
wire   [0:0] or_ln502_7_fu_1465_p2;
wire   [7:0] select_ln502_21_fu_1457_p3;
wire   [7:0] select_ln502_22_fu_1471_p3;
wire   [7:0] select_ln502_23_fu_1479_p3;
wire   [7:0] select_ln502_20_fu_1371_p3;
wire   [7:0] select_ln502_17_fu_1263_p3;
wire   [7:0] select_ln502_14_fu_1155_p3;
wire   [7:0] select_ln502_11_fu_1047_p3;
wire   [7:0] select_ln502_8_fu_939_p3;
wire   [7:0] select_ln502_5_fu_831_p3;
wire   [7:0] select_ln502_2_fu_723_p3;
wire   [15:0] grp_fu_1508_p0;
wire   [14:0] grp_fu_1508_p1;
wire   [15:0] grp_fu_1516_p0;
wire   [14:0] grp_fu_1516_p1;
wire   [15:0] grp_fu_1524_p0;
wire   [14:0] grp_fu_1524_p1;
wire   [15:0] grp_fu_1532_p0;
wire   [14:0] grp_fu_1532_p1;
wire   [15:0] grp_fu_1540_p0;
wire   [14:0] grp_fu_1540_p1;
wire   [15:0] grp_fu_1548_p0;
wire   [14:0] grp_fu_1548_p1;
wire   [15:0] grp_fu_1556_p0;
wire   [14:0] grp_fu_1556_p1;
wire   [15:0] grp_fu_1564_p0;
wire   [14:0] grp_fu_1564_p1;
reg    grp_fu_1508_ce;
reg    grp_fu_1516_ce;
reg    grp_fu_1524_ce;
reg    grp_fu_1532_ce;
reg    grp_fu_1540_ce;
reg    grp_fu_1548_ce;
reg    grp_fu_1556_ce;
reg    grp_fu_1564_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [29:0] grp_fu_1508_p00;
wire   [29:0] grp_fu_1516_p00;
wire   [29:0] grp_fu_1524_p00;
wire   [29:0] grp_fu_1532_p00;
wire   [29:0] grp_fu_1540_p00;
wire   [29:0] grp_fu_1548_p00;
wire   [29:0] grp_fu_1556_p00;
wire   [29:0] grp_fu_1564_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1508_p0),
    .din1(grp_fu_1508_p1),
    .ce(grp_fu_1508_ce),
    .dout(grp_fu_1508_p2)
);

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1516_p0),
    .din1(grp_fu_1516_p1),
    .ce(grp_fu_1516_ce),
    .dout(grp_fu_1516_p2)
);

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1524_p0),
    .din1(grp_fu_1524_p1),
    .ce(grp_fu_1524_ce),
    .dout(grp_fu_1524_p2)
);

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1532_p0),
    .din1(grp_fu_1532_p1),
    .ce(grp_fu_1532_ce),
    .dout(grp_fu_1532_p2)
);

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1540_p0),
    .din1(grp_fu_1540_p1),
    .ce(grp_fu_1540_ce),
    .dout(grp_fu_1540_p2)
);

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U137(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1548_p0),
    .din1(grp_fu_1548_p1),
    .ce(grp_fu_1548_ce),
    .dout(grp_fu_1548_p2)
);

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U138(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1556_p0),
    .din1(grp_fu_1556_p1),
    .ce(grp_fu_1556_ce),
    .dout(grp_fu_1556_p2)
);

canny_accel_mul_mul_16ns_15ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
mul_mul_16ns_15ns_30_4_1_U139(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1564_p0),
    .din1(grp_fu_1564_p1),
    .ce(grp_fu_1564_ce),
    .dout(grp_fu_1564_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln457_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln457_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((icmp_ln457_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_V_reg_159 <= i_V_1_reg_1582;
    end else if ((~((ap_start == 1'b0) | (imgwidth_2_cast_loc_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_V_reg_159 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln464_fu_198_p2 == 1'd0))) begin
        j_V_reg_170 <= j_V_1_fu_192_p2;
    end else if (((icmp_ln457_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_V_reg_170 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_1_reg_1582 <= i_V_1_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln464_reg_1596 <= icmp_ln464_fu_198_p2;
        icmp_ln464_reg_1596_pp0_iter1_reg <= icmp_ln464_reg_1596;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln464_reg_1596_pp0_iter2_reg <= icmp_ln464_reg_1596_pp0_iter1_reg;
        icmp_ln464_reg_1596_pp0_iter3_reg <= icmp_ln464_reg_1596_pp0_iter2_reg;
        p_Result_1_i_i_reg_1627_pp0_iter2_reg <= p_Result_1_i_i_reg_1627;
        p_Result_1_i_i_reg_1627_pp0_iter3_reg <= p_Result_1_i_i_reg_1627_pp0_iter2_reg;
        p_Result_2_i_i_reg_1654_pp0_iter2_reg <= p_Result_2_i_i_reg_1654;
        p_Result_2_i_i_reg_1654_pp0_iter3_reg <= p_Result_2_i_i_reg_1654_pp0_iter2_reg;
        p_Result_3_i_i_reg_1681_pp0_iter2_reg <= p_Result_3_i_i_reg_1681;
        p_Result_3_i_i_reg_1681_pp0_iter3_reg <= p_Result_3_i_i_reg_1681_pp0_iter2_reg;
        p_Result_4_i_i_reg_1708_pp0_iter2_reg <= p_Result_4_i_i_reg_1708;
        p_Result_4_i_i_reg_1708_pp0_iter3_reg <= p_Result_4_i_i_reg_1708_pp0_iter2_reg;
        p_Result_5_i_i_reg_1735_pp0_iter2_reg <= p_Result_5_i_i_reg_1735;
        p_Result_5_i_i_reg_1735_pp0_iter3_reg <= p_Result_5_i_i_reg_1735_pp0_iter2_reg;
        p_Result_6_i_i_reg_1762_pp0_iter2_reg <= p_Result_6_i_i_reg_1762;
        p_Result_6_i_i_reg_1762_pp0_iter3_reg <= p_Result_6_i_i_reg_1762_pp0_iter2_reg;
        p_Result_7_i_i_reg_1789_pp0_iter2_reg <= p_Result_7_i_i_reg_1789;
        p_Result_7_i_i_reg_1789_pp0_iter3_reg <= p_Result_7_i_i_reg_1789_pp0_iter2_reg;
        p_Result_94_1_i_i_reg_1632_pp0_iter2_reg <= p_Result_94_1_i_i_reg_1632;
        p_Result_94_1_i_i_reg_1632_pp0_iter3_reg <= p_Result_94_1_i_i_reg_1632_pp0_iter2_reg;
        p_Result_94_2_i_i_reg_1659_pp0_iter2_reg <= p_Result_94_2_i_i_reg_1659;
        p_Result_94_2_i_i_reg_1659_pp0_iter3_reg <= p_Result_94_2_i_i_reg_1659_pp0_iter2_reg;
        p_Result_94_3_i_i_reg_1686_pp0_iter2_reg <= p_Result_94_3_i_i_reg_1686;
        p_Result_94_3_i_i_reg_1686_pp0_iter3_reg <= p_Result_94_3_i_i_reg_1686_pp0_iter2_reg;
        p_Result_94_4_i_i_reg_1713_pp0_iter2_reg <= p_Result_94_4_i_i_reg_1713;
        p_Result_94_4_i_i_reg_1713_pp0_iter3_reg <= p_Result_94_4_i_i_reg_1713_pp0_iter2_reg;
        p_Result_94_5_i_i_reg_1740_pp0_iter2_reg <= p_Result_94_5_i_i_reg_1740;
        p_Result_94_5_i_i_reg_1740_pp0_iter3_reg <= p_Result_94_5_i_i_reg_1740_pp0_iter2_reg;
        p_Result_94_6_i_i_reg_1767_pp0_iter2_reg <= p_Result_94_6_i_i_reg_1767;
        p_Result_94_6_i_i_reg_1767_pp0_iter3_reg <= p_Result_94_6_i_i_reg_1767_pp0_iter2_reg;
        p_Result_94_7_i_i_reg_1794_pp0_iter2_reg <= p_Result_94_7_i_i_reg_1794;
        p_Result_94_7_i_i_reg_1794_pp0_iter3_reg <= p_Result_94_7_i_i_reg_1794_pp0_iter2_reg;
        select_ln488_1_reg_1639_pp0_iter2_reg <= select_ln488_1_reg_1639;
        select_ln488_1_reg_1639_pp0_iter3_reg <= select_ln488_1_reg_1639_pp0_iter2_reg;
        select_ln488_2_reg_1666_pp0_iter2_reg <= select_ln488_2_reg_1666;
        select_ln488_2_reg_1666_pp0_iter3_reg <= select_ln488_2_reg_1666_pp0_iter2_reg;
        select_ln488_3_reg_1693_pp0_iter2_reg <= select_ln488_3_reg_1693;
        select_ln488_3_reg_1693_pp0_iter3_reg <= select_ln488_3_reg_1693_pp0_iter2_reg;
        select_ln488_4_reg_1720_pp0_iter2_reg <= select_ln488_4_reg_1720;
        select_ln488_4_reg_1720_pp0_iter3_reg <= select_ln488_4_reg_1720_pp0_iter2_reg;
        select_ln488_5_reg_1747_pp0_iter2_reg <= select_ln488_5_reg_1747;
        select_ln488_5_reg_1747_pp0_iter3_reg <= select_ln488_5_reg_1747_pp0_iter2_reg;
        select_ln488_6_reg_1774_pp0_iter2_reg <= select_ln488_6_reg_1774;
        select_ln488_6_reg_1774_pp0_iter3_reg <= select_ln488_6_reg_1774_pp0_iter2_reg;
        select_ln488_7_reg_1801_pp0_iter2_reg <= select_ln488_7_reg_1801;
        select_ln488_7_reg_1801_pp0_iter3_reg <= select_ln488_7_reg_1801_pp0_iter2_reg;
        select_ln488_reg_1612_pp0_iter2_reg <= select_ln488_reg_1612;
        select_ln488_reg_1612_pp0_iter3_reg <= select_ln488_reg_1612_pp0_iter2_reg;
        tmp_59_reg_1622_pp0_iter2_reg <= tmp_59_reg_1622;
        tmp_59_reg_1622_pp0_iter3_reg <= tmp_59_reg_1622_pp0_iter2_reg;
        tmp_62_reg_1649_pp0_iter2_reg <= tmp_62_reg_1649;
        tmp_62_reg_1649_pp0_iter3_reg <= tmp_62_reg_1649_pp0_iter2_reg;
        tmp_65_reg_1676_pp0_iter2_reg <= tmp_65_reg_1676;
        tmp_65_reg_1676_pp0_iter3_reg <= tmp_65_reg_1676_pp0_iter2_reg;
        tmp_68_reg_1703_pp0_iter2_reg <= tmp_68_reg_1703;
        tmp_68_reg_1703_pp0_iter3_reg <= tmp_68_reg_1703_pp0_iter2_reg;
        tmp_71_reg_1730_pp0_iter2_reg <= tmp_71_reg_1730;
        tmp_71_reg_1730_pp0_iter3_reg <= tmp_71_reg_1730_pp0_iter2_reg;
        tmp_74_reg_1757_pp0_iter2_reg <= tmp_74_reg_1757;
        tmp_74_reg_1757_pp0_iter3_reg <= tmp_74_reg_1757_pp0_iter2_reg;
        tmp_77_reg_1784_pp0_iter2_reg <= tmp_77_reg_1784;
        tmp_77_reg_1784_pp0_iter3_reg <= tmp_77_reg_1784_pp0_iter2_reg;
        tmp_80_reg_1811_pp0_iter2_reg <= tmp_80_reg_1811;
        tmp_80_reg_1811_pp0_iter3_reg <= tmp_80_reg_1811_pp0_iter2_reg;
        trunc_ln708_1_reg_1605_pp0_iter2_reg <= trunc_ln708_1_reg_1605;
        trunc_ln708_1_reg_1605_pp0_iter3_reg <= trunc_ln708_1_reg_1605_pp0_iter2_reg;
        trunc_ln708_reg_1600_pp0_iter2_reg <= trunc_ln708_reg_1600;
        trunc_ln708_reg_1600_pp0_iter3_reg <= trunc_ln708_reg_1600_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        img_height_read_reg_1572 <= img_height_dout;
        imgwidth_2_cast_loc_read_reg_1577 <= imgwidth_2_cast_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln464_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_1_i_i_reg_1627 <= {{p_src1_data_dout[31:16]}};
        p_Result_2_i_i_reg_1654 <= {{p_src1_data_dout[47:32]}};
        p_Result_3_i_i_reg_1681 <= {{p_src1_data_dout[63:48]}};
        p_Result_4_i_i_reg_1708 <= {{p_src1_data_dout[79:64]}};
        p_Result_5_i_i_reg_1735 <= {{p_src1_data_dout[95:80]}};
        p_Result_6_i_i_reg_1762 <= {{p_src1_data_dout[111:96]}};
        p_Result_7_i_i_reg_1789 <= {{p_src1_data_dout[127:112]}};
        p_Result_94_1_i_i_reg_1632 <= {{p_src2_data_dout[31:16]}};
        p_Result_94_2_i_i_reg_1659 <= {{p_src2_data_dout[47:32]}};
        p_Result_94_3_i_i_reg_1686 <= {{p_src2_data_dout[63:48]}};
        p_Result_94_4_i_i_reg_1713 <= {{p_src2_data_dout[79:64]}};
        p_Result_94_5_i_i_reg_1740 <= {{p_src2_data_dout[95:80]}};
        p_Result_94_6_i_i_reg_1767 <= {{p_src2_data_dout[111:96]}};
        p_Result_94_7_i_i_reg_1794 <= {{p_src2_data_dout[127:112]}};
        select_ln488_1_reg_1639 <= select_ln488_1_fu_279_p3;
        select_ln488_2_reg_1666 <= select_ln488_2_fu_333_p3;
        select_ln488_3_reg_1693 <= select_ln488_3_fu_387_p3;
        select_ln488_4_reg_1720 <= select_ln488_4_fu_441_p3;
        select_ln488_5_reg_1747 <= select_ln488_5_fu_495_p3;
        select_ln488_6_reg_1774 <= select_ln488_6_fu_549_p3;
        select_ln488_7_reg_1801 <= select_ln488_7_fu_603_p3;
        select_ln488_reg_1612 <= select_ln488_fu_225_p3;
        tmp_59_reg_1622 <= p_src2_data_dout[32'd15];
        tmp_62_reg_1649 <= p_src2_data_dout[32'd31];
        tmp_65_reg_1676 <= p_src2_data_dout[32'd47];
        tmp_68_reg_1703 <= p_src2_data_dout[32'd63];
        tmp_71_reg_1730 <= p_src2_data_dout[32'd79];
        tmp_74_reg_1757 <= p_src2_data_dout[32'd95];
        tmp_77_reg_1784 <= p_src2_data_dout[32'd111];
        tmp_80_reg_1811 <= p_src2_data_dout[32'd127];
        trunc_ln708_1_reg_1605 <= trunc_ln708_1_fu_207_p1;
        trunc_ln708_reg_1600 <= trunc_ln708_fu_203_p1;
    end
end

always @ (*) begin
    if ((icmp_ln464_fu_198_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln457_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln457_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1508_ce = 1'b1;
    end else begin
        grp_fu_1508_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1516_ce = 1'b1;
    end else begin
        grp_fu_1516_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1524_ce = 1'b1;
    end else begin
        grp_fu_1524_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1532_ce = 1'b1;
    end else begin
        grp_fu_1532_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1540_ce = 1'b1;
    end else begin
        grp_fu_1540_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1548_ce = 1'b1;
    end else begin
        grp_fu_1548_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1556_ce = 1'b1;
    end else begin
        grp_fu_1556_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1564_ce = 1'b1;
    end else begin
        grp_fu_1564_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_blk_n = img_height_empty_n;
    end else begin
        img_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (imgwidth_2_cast_loc_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_read = 1'b1;
    end else begin
        img_height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_2_cast_loc_blk_n = imgwidth_2_cast_loc_empty_n;
    end else begin
        imgwidth_2_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (imgwidth_2_cast_loc_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_2_cast_loc_read = 1'b1;
    end else begin
        imgwidth_2_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_1596_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        p_dst_data_blk_n = p_dst_data_full_n;
    end else begin
        p_dst_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_1596_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_write = 1'b1;
    end else begin
        p_dst_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src1_data_blk_n = p_src1_data_empty_n;
    end else begin
        p_src1_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src1_data_read = 1'b1;
    end else begin
        p_src1_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src2_data_blk_n = p_src2_data_empty_n;
    end else begin
        p_src2_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_1596 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src2_data_read = 1'b1;
    end else begin
        p_src2_data_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (imgwidth_2_cast_loc_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln457_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln464_fu_198_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln464_fu_198_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln501_1_fu_773_p2 = (shl_ln501_1_fu_766_p3 + zext_ln492_3_fu_754_p1);

assign add_ln501_2_fu_881_p2 = (shl_ln501_2_fu_874_p3 + zext_ln492_5_fu_862_p1);

assign add_ln501_3_fu_989_p2 = (shl_ln501_3_fu_982_p3 + zext_ln492_7_fu_970_p1);

assign add_ln501_4_fu_1097_p2 = (shl_ln501_4_fu_1090_p3 + zext_ln492_9_fu_1078_p1);

assign add_ln501_5_fu_1205_p2 = (shl_ln501_5_fu_1198_p3 + zext_ln492_11_fu_1186_p1);

assign add_ln501_6_fu_1313_p2 = (shl_ln501_6_fu_1306_p3 + zext_ln492_13_fu_1294_p1);

assign add_ln501_7_fu_1421_p2 = (shl_ln501_7_fu_1414_p3 + zext_ln492_15_fu_1402_p1);

assign add_ln501_fu_665_p2 = (shl_ln1_fu_658_p3 + zext_ln492_1_fu_646_p1);

assign and_ln502_1_fu_803_p2 = (xor_ln498_1_fu_797_p2 & icmp_ln502_1_fu_779_p2);

assign and_ln502_2_fu_911_p2 = (xor_ln498_2_fu_905_p2 & icmp_ln502_2_fu_887_p2);

assign and_ln502_3_fu_1019_p2 = (xor_ln498_3_fu_1013_p2 & icmp_ln502_3_fu_995_p2);

assign and_ln502_4_fu_1127_p2 = (xor_ln498_4_fu_1121_p2 & icmp_ln502_4_fu_1103_p2);

assign and_ln502_5_fu_1235_p2 = (xor_ln498_5_fu_1229_p2 & icmp_ln502_5_fu_1211_p2);

assign and_ln502_6_fu_1343_p2 = (xor_ln498_6_fu_1337_p2 & icmp_ln502_6_fu_1319_p2);

assign and_ln502_7_fu_1451_p2 = (xor_ln498_7_fu_1445_p2 & icmp_ln502_7_fu_1427_p2);

assign and_ln502_fu_695_p2 = (xor_ln498_fu_689_p2 & icmp_ln502_fu_671_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln464_reg_1596_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (p_dst_data_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln464_reg_1596 == 1'd0) & (p_src1_data_empty_n == 1'b0)) | ((icmp_ln464_reg_1596 == 1'd0) & (p_src2_data_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln464_reg_1596_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (p_dst_data_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln464_reg_1596 == 1'd0) & (p_src1_data_empty_n == 1'b0)) | ((icmp_ln464_reg_1596 == 1'd0) & (p_src2_data_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln464_reg_1596_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (p_dst_data_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln464_reg_1596 == 1'd0) & (p_src1_data_empty_n == 1'b0)) | ((icmp_ln464_reg_1596 == 1'd0) & (p_src2_data_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (imgwidth_2_cast_loc_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((icmp_ln464_reg_1596 == 1'd0) & (p_src1_data_empty_n == 1'b0)) | ((icmp_ln464_reg_1596 == 1'd0) & (p_src2_data_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((icmp_ln464_reg_1596_pp0_iter3_reg == 1'd0) & (p_dst_data_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_1508_p0 = grp_fu_1508_p00;

assign grp_fu_1508_p00 = select_ln488_fu_225_p3;

assign grp_fu_1508_p1 = 30'd13573;

assign grp_fu_1516_p0 = grp_fu_1516_p00;

assign grp_fu_1516_p00 = select_ln488_1_fu_279_p3;

assign grp_fu_1516_p1 = 30'd13573;

assign grp_fu_1524_p0 = grp_fu_1524_p00;

assign grp_fu_1524_p00 = select_ln488_2_fu_333_p3;

assign grp_fu_1524_p1 = 30'd13573;

assign grp_fu_1532_p0 = grp_fu_1532_p00;

assign grp_fu_1532_p00 = select_ln488_3_fu_387_p3;

assign grp_fu_1532_p1 = 30'd13573;

assign grp_fu_1540_p0 = grp_fu_1540_p00;

assign grp_fu_1540_p00 = select_ln488_4_fu_441_p3;

assign grp_fu_1540_p1 = 30'd13573;

assign grp_fu_1548_p0 = grp_fu_1548_p00;

assign grp_fu_1548_p00 = select_ln488_5_fu_495_p3;

assign grp_fu_1548_p1 = 30'd13573;

assign grp_fu_1556_p0 = grp_fu_1556_p00;

assign grp_fu_1556_p00 = select_ln488_6_fu_549_p3;

assign grp_fu_1556_p1 = 30'd13573;

assign grp_fu_1564_p0 = grp_fu_1564_p00;

assign grp_fu_1564_p00 = select_ln488_7_fu_603_p3;

assign grp_fu_1564_p1 = 30'd13573;

assign i_V_1_fu_181_p2 = (i_V_reg_159 + 10'd1);

assign icmp_ln457_fu_187_p2 = ((i_V_reg_159 == img_height_read_reg_1572) ? 1'b1 : 1'b0);

assign icmp_ln464_fu_198_p2 = ((j_V_reg_170 == imgwidth_2_cast_loc_read_reg_1577) ? 1'b1 : 1'b0);

assign icmp_ln498_1_fu_760_p2 = ((shl_ln489_1_fu_742_p3 < zext_ln492_17_fu_757_p1) ? 1'b1 : 1'b0);

assign icmp_ln498_2_fu_868_p2 = ((shl_ln489_2_fu_850_p3 < zext_ln492_18_fu_865_p1) ? 1'b1 : 1'b0);

assign icmp_ln498_3_fu_976_p2 = ((shl_ln489_3_fu_958_p3 < zext_ln492_19_fu_973_p1) ? 1'b1 : 1'b0);

assign icmp_ln498_4_fu_1084_p2 = ((shl_ln489_4_fu_1066_p3 < zext_ln492_20_fu_1081_p1) ? 1'b1 : 1'b0);

assign icmp_ln498_5_fu_1192_p2 = ((shl_ln489_5_fu_1174_p3 < zext_ln492_21_fu_1189_p1) ? 1'b1 : 1'b0);

assign icmp_ln498_6_fu_1300_p2 = ((shl_ln489_6_fu_1282_p3 < zext_ln492_22_fu_1297_p1) ? 1'b1 : 1'b0);

assign icmp_ln498_7_fu_1408_p2 = ((shl_ln489_7_fu_1390_p3 < zext_ln492_23_fu_1405_p1) ? 1'b1 : 1'b0);

assign icmp_ln498_fu_652_p2 = ((shl_ln_fu_634_p3 < zext_ln492_16_fu_649_p1) ? 1'b1 : 1'b0);

assign icmp_ln502_1_fu_779_p2 = (($signed(zext_ln492_2_fu_750_p1) > $signed(add_ln501_1_fu_773_p2)) ? 1'b1 : 1'b0);

assign icmp_ln502_2_fu_887_p2 = (($signed(zext_ln492_4_fu_858_p1) > $signed(add_ln501_2_fu_881_p2)) ? 1'b1 : 1'b0);

assign icmp_ln502_3_fu_995_p2 = (($signed(zext_ln492_6_fu_966_p1) > $signed(add_ln501_3_fu_989_p2)) ? 1'b1 : 1'b0);

assign icmp_ln502_4_fu_1103_p2 = (($signed(zext_ln492_8_fu_1074_p1) > $signed(add_ln501_4_fu_1097_p2)) ? 1'b1 : 1'b0);

assign icmp_ln502_5_fu_1211_p2 = (($signed(zext_ln492_10_fu_1182_p1) > $signed(add_ln501_5_fu_1205_p2)) ? 1'b1 : 1'b0);

assign icmp_ln502_6_fu_1319_p2 = (($signed(zext_ln492_12_fu_1290_p1) > $signed(add_ln501_6_fu_1313_p2)) ? 1'b1 : 1'b0);

assign icmp_ln502_7_fu_1427_p2 = (($signed(zext_ln492_14_fu_1398_p1) > $signed(add_ln501_7_fu_1421_p2)) ? 1'b1 : 1'b0);

assign icmp_ln502_fu_671_p2 = (($signed(zext_ln492_fu_642_p1) > $signed(add_ln501_fu_665_p2)) ? 1'b1 : 1'b0);

assign j_V_1_fu_192_p2 = (j_V_reg_170 + 8'd1);

assign or_ln502_1_fu_817_p2 = (icmp_ln498_1_fu_760_p2 | and_ln502_1_fu_803_p2);

assign or_ln502_2_fu_925_p2 = (icmp_ln498_2_fu_868_p2 | and_ln502_2_fu_911_p2);

assign or_ln502_3_fu_1033_p2 = (icmp_ln498_3_fu_976_p2 | and_ln502_3_fu_1019_p2);

assign or_ln502_4_fu_1141_p2 = (icmp_ln498_4_fu_1084_p2 | and_ln502_4_fu_1127_p2);

assign or_ln502_5_fu_1249_p2 = (icmp_ln498_5_fu_1192_p2 | and_ln502_5_fu_1235_p2);

assign or_ln502_6_fu_1357_p2 = (icmp_ln498_6_fu_1300_p2 | and_ln502_6_fu_1343_p2);

assign or_ln502_7_fu_1465_p2 = (icmp_ln498_7_fu_1408_p2 | and_ln502_7_fu_1451_p2);

assign or_ln502_fu_709_p2 = (icmp_ln498_fu_652_p2 | and_ln502_fu_695_p2);

assign p_Result_1_i_i_fu_245_p4 = {{p_src1_data_dout[31:16]}};

assign p_Result_2_i_i_fu_299_p4 = {{p_src1_data_dout[47:32]}};

assign p_Result_3_i_i_fu_353_p4 = {{p_src1_data_dout[63:48]}};

assign p_Result_4_i_i_fu_407_p4 = {{p_src1_data_dout[79:64]}};

assign p_Result_5_i_i_fu_461_p4 = {{p_src1_data_dout[95:80]}};

assign p_Result_6_i_i_fu_515_p4 = {{p_src1_data_dout[111:96]}};

assign p_Result_7_i_i_fu_569_p4 = {{p_src1_data_dout[127:112]}};

assign p_dst_data_din = {{{{{{{{select_ln502_23_fu_1479_p3}, {select_ln502_20_fu_1371_p3}}, {select_ln502_17_fu_1263_p3}}, {select_ln502_14_fu_1155_p3}}, {select_ln502_11_fu_1047_p3}}, {select_ln502_8_fu_939_p3}}, {select_ln502_5_fu_831_p3}}, {select_ln502_2_fu_723_p3}};

assign select_ln488_1_fu_279_p3 = ((tmp_61_fu_265_p3[0:0] == 1'b1) ? sub_ln488_1_fu_273_p2 : p_Result_1_i_i_fu_245_p4);

assign select_ln488_2_fu_333_p3 = ((tmp_64_fu_319_p3[0:0] == 1'b1) ? sub_ln488_2_fu_327_p2 : p_Result_2_i_i_fu_299_p4);

assign select_ln488_3_fu_387_p3 = ((tmp_67_fu_373_p3[0:0] == 1'b1) ? sub_ln488_3_fu_381_p2 : p_Result_3_i_i_fu_353_p4);

assign select_ln488_4_fu_441_p3 = ((tmp_70_fu_427_p3[0:0] == 1'b1) ? sub_ln488_4_fu_435_p2 : p_Result_4_i_i_fu_407_p4);

assign select_ln488_5_fu_495_p3 = ((tmp_73_fu_481_p3[0:0] == 1'b1) ? sub_ln488_5_fu_489_p2 : p_Result_5_i_i_fu_461_p4);

assign select_ln488_6_fu_549_p3 = ((tmp_76_fu_535_p3[0:0] == 1'b1) ? sub_ln488_6_fu_543_p2 : p_Result_6_i_i_fu_515_p4);

assign select_ln488_7_fu_603_p3 = ((tmp_79_fu_589_p3[0:0] == 1'b1) ? sub_ln488_7_fu_597_p2 : p_Result_7_i_i_fu_569_p4);

assign select_ln488_fu_225_p3 = ((tmp_fu_211_p3[0:0] == 1'b1) ? sub_ln488_fu_219_p2 : trunc_ln708_fu_203_p1);

assign select_ln489_1_fu_736_p3 = ((tmp_62_reg_1649_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_1_fu_731_p2 : p_Result_94_1_i_i_reg_1632_pp0_iter3_reg);

assign select_ln489_2_fu_844_p3 = ((tmp_65_reg_1676_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_2_fu_839_p2 : p_Result_94_2_i_i_reg_1659_pp0_iter3_reg);

assign select_ln489_3_fu_952_p3 = ((tmp_68_reg_1703_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_3_fu_947_p2 : p_Result_94_3_i_i_reg_1686_pp0_iter3_reg);

assign select_ln489_4_fu_1060_p3 = ((tmp_71_reg_1730_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_4_fu_1055_p2 : p_Result_94_4_i_i_reg_1713_pp0_iter3_reg);

assign select_ln489_5_fu_1168_p3 = ((tmp_74_reg_1757_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_5_fu_1163_p2 : p_Result_94_5_i_i_reg_1740_pp0_iter3_reg);

assign select_ln489_6_fu_1276_p3 = ((tmp_77_reg_1784_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_6_fu_1271_p2 : p_Result_94_6_i_i_reg_1767_pp0_iter3_reg);

assign select_ln489_7_fu_1384_p3 = ((tmp_80_reg_1811_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_7_fu_1379_p2 : p_Result_94_7_i_i_reg_1794_pp0_iter3_reg);

assign select_ln489_fu_628_p3 = ((tmp_59_reg_1622_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln489_fu_623_p2 : trunc_ln708_1_reg_1605_pp0_iter3_reg);

assign select_ln502_10_fu_1039_p3 = ((tmp_69_fu_1005_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_11_fu_1047_p3 = ((or_ln502_3_fu_1033_p2[0:0] == 1'b1) ? select_ln502_9_fu_1025_p3 : select_ln502_10_fu_1039_p3);

assign select_ln502_12_fu_1133_p3 = ((and_ln502_4_fu_1127_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln502_13_fu_1147_p3 = ((tmp_72_fu_1113_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_14_fu_1155_p3 = ((or_ln502_4_fu_1141_p2[0:0] == 1'b1) ? select_ln502_12_fu_1133_p3 : select_ln502_13_fu_1147_p3);

assign select_ln502_15_fu_1241_p3 = ((and_ln502_5_fu_1235_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln502_16_fu_1255_p3 = ((tmp_75_fu_1221_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_17_fu_1263_p3 = ((or_ln502_5_fu_1249_p2[0:0] == 1'b1) ? select_ln502_15_fu_1241_p3 : select_ln502_16_fu_1255_p3);

assign select_ln502_18_fu_1349_p3 = ((and_ln502_6_fu_1343_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln502_19_fu_1363_p3 = ((tmp_78_fu_1329_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_1_fu_715_p3 = ((tmp_60_fu_681_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_20_fu_1371_p3 = ((or_ln502_6_fu_1357_p2[0:0] == 1'b1) ? select_ln502_18_fu_1349_p3 : select_ln502_19_fu_1363_p3);

assign select_ln502_21_fu_1457_p3 = ((and_ln502_7_fu_1451_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln502_22_fu_1471_p3 = ((tmp_81_fu_1437_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_23_fu_1479_p3 = ((or_ln502_7_fu_1465_p2[0:0] == 1'b1) ? select_ln502_21_fu_1457_p3 : select_ln502_22_fu_1471_p3);

assign select_ln502_2_fu_723_p3 = ((or_ln502_fu_709_p2[0:0] == 1'b1) ? select_ln502_fu_701_p3 : select_ln502_1_fu_715_p3);

assign select_ln502_3_fu_809_p3 = ((and_ln502_1_fu_803_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln502_4_fu_823_p3 = ((tmp_63_fu_789_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_5_fu_831_p3 = ((or_ln502_1_fu_817_p2[0:0] == 1'b1) ? select_ln502_3_fu_809_p3 : select_ln502_4_fu_823_p3);

assign select_ln502_6_fu_917_p3 = ((and_ln502_2_fu_911_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln502_7_fu_931_p3 = ((tmp_66_fu_897_p3[0:0] == 1'b1) ? 8'd45 : 8'd135);

assign select_ln502_8_fu_939_p3 = ((or_ln502_2_fu_925_p2[0:0] == 1'b1) ? select_ln502_6_fu_917_p3 : select_ln502_7_fu_931_p3);

assign select_ln502_9_fu_1025_p3 = ((and_ln502_3_fu_1019_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign select_ln502_fu_701_p3 = ((and_ln502_fu_695_p2[0:0] == 1'b1) ? 8'd90 : 8'd0);

assign shl_ln1_fu_658_p3 = {{select_ln488_reg_1612_pp0_iter3_reg}, {16'd0}};

assign shl_ln489_1_fu_742_p3 = {{select_ln489_1_fu_736_p3}, {15'd0}};

assign shl_ln489_2_fu_850_p3 = {{select_ln489_2_fu_844_p3}, {15'd0}};

assign shl_ln489_3_fu_958_p3 = {{select_ln489_3_fu_952_p3}, {15'd0}};

assign shl_ln489_4_fu_1066_p3 = {{select_ln489_4_fu_1060_p3}, {15'd0}};

assign shl_ln489_5_fu_1174_p3 = {{select_ln489_5_fu_1168_p3}, {15'd0}};

assign shl_ln489_6_fu_1282_p3 = {{select_ln489_6_fu_1276_p3}, {15'd0}};

assign shl_ln489_7_fu_1390_p3 = {{select_ln489_7_fu_1384_p3}, {15'd0}};

assign shl_ln501_1_fu_766_p3 = {{select_ln488_1_reg_1639_pp0_iter3_reg}, {16'd0}};

assign shl_ln501_2_fu_874_p3 = {{select_ln488_2_reg_1666_pp0_iter3_reg}, {16'd0}};

assign shl_ln501_3_fu_982_p3 = {{select_ln488_3_reg_1693_pp0_iter3_reg}, {16'd0}};

assign shl_ln501_4_fu_1090_p3 = {{select_ln488_4_reg_1720_pp0_iter3_reg}, {16'd0}};

assign shl_ln501_5_fu_1198_p3 = {{select_ln488_5_reg_1747_pp0_iter3_reg}, {16'd0}};

assign shl_ln501_6_fu_1306_p3 = {{select_ln488_6_reg_1774_pp0_iter3_reg}, {16'd0}};

assign shl_ln501_7_fu_1414_p3 = {{select_ln488_7_reg_1801_pp0_iter3_reg}, {16'd0}};

assign shl_ln_fu_634_p3 = {{select_ln489_fu_628_p3}, {15'd0}};

assign sub_ln488_1_fu_273_p2 = (16'd0 - p_Result_1_i_i_fu_245_p4);

assign sub_ln488_2_fu_327_p2 = (16'd0 - p_Result_2_i_i_fu_299_p4);

assign sub_ln488_3_fu_381_p2 = (16'd0 - p_Result_3_i_i_fu_353_p4);

assign sub_ln488_4_fu_435_p2 = (16'd0 - p_Result_4_i_i_fu_407_p4);

assign sub_ln488_5_fu_489_p2 = (16'd0 - p_Result_5_i_i_fu_461_p4);

assign sub_ln488_6_fu_543_p2 = (16'd0 - p_Result_6_i_i_fu_515_p4);

assign sub_ln488_7_fu_597_p2 = (16'd0 - p_Result_7_i_i_fu_569_p4);

assign sub_ln488_fu_219_p2 = (16'd0 - trunc_ln708_fu_203_p1);

assign sub_ln489_1_fu_731_p2 = (16'd0 - p_Result_94_1_i_i_reg_1632_pp0_iter3_reg);

assign sub_ln489_2_fu_839_p2 = (16'd0 - p_Result_94_2_i_i_reg_1659_pp0_iter3_reg);

assign sub_ln489_3_fu_947_p2 = (16'd0 - p_Result_94_3_i_i_reg_1686_pp0_iter3_reg);

assign sub_ln489_4_fu_1055_p2 = (16'd0 - p_Result_94_4_i_i_reg_1713_pp0_iter3_reg);

assign sub_ln489_5_fu_1163_p2 = (16'd0 - p_Result_94_5_i_i_reg_1740_pp0_iter3_reg);

assign sub_ln489_6_fu_1271_p2 = (16'd0 - p_Result_94_6_i_i_reg_1767_pp0_iter3_reg);

assign sub_ln489_7_fu_1379_p2 = (16'd0 - p_Result_94_7_i_i_reg_1794_pp0_iter3_reg);

assign sub_ln489_fu_623_p2 = (16'd0 - trunc_ln708_1_reg_1605_pp0_iter3_reg);

assign tmp_60_fu_681_p3 = xor_ln505_fu_677_p2[32'd15];

assign tmp_61_fu_265_p3 = p_src1_data_dout[32'd31];

assign tmp_63_fu_789_p3 = xor_ln505_1_fu_785_p2[32'd15];

assign tmp_64_fu_319_p3 = p_src1_data_dout[32'd47];

assign tmp_66_fu_897_p3 = xor_ln505_2_fu_893_p2[32'd15];

assign tmp_67_fu_373_p3 = p_src1_data_dout[32'd63];

assign tmp_69_fu_1005_p3 = xor_ln505_3_fu_1001_p2[32'd15];

assign tmp_70_fu_427_p3 = p_src1_data_dout[32'd79];

assign tmp_72_fu_1113_p3 = xor_ln505_4_fu_1109_p2[32'd15];

assign tmp_73_fu_481_p3 = p_src1_data_dout[32'd95];

assign tmp_75_fu_1221_p3 = xor_ln505_5_fu_1217_p2[32'd15];

assign tmp_76_fu_535_p3 = p_src1_data_dout[32'd111];

assign tmp_78_fu_1329_p3 = xor_ln505_6_fu_1325_p2[32'd15];

assign tmp_79_fu_589_p3 = p_src1_data_dout[32'd127];

assign tmp_81_fu_1437_p3 = xor_ln505_7_fu_1433_p2[32'd15];

assign tmp_fu_211_p3 = p_src1_data_dout[32'd15];

assign trunc_ln708_1_fu_207_p1 = p_src2_data_dout[15:0];

assign trunc_ln708_fu_203_p1 = p_src1_data_dout[15:0];

assign xor_ln498_1_fu_797_p2 = (icmp_ln498_1_fu_760_p2 ^ 1'd1);

assign xor_ln498_2_fu_905_p2 = (icmp_ln498_2_fu_868_p2 ^ 1'd1);

assign xor_ln498_3_fu_1013_p2 = (icmp_ln498_3_fu_976_p2 ^ 1'd1);

assign xor_ln498_4_fu_1121_p2 = (icmp_ln498_4_fu_1084_p2 ^ 1'd1);

assign xor_ln498_5_fu_1229_p2 = (icmp_ln498_5_fu_1192_p2 ^ 1'd1);

assign xor_ln498_6_fu_1337_p2 = (icmp_ln498_6_fu_1300_p2 ^ 1'd1);

assign xor_ln498_7_fu_1445_p2 = (icmp_ln498_7_fu_1408_p2 ^ 1'd1);

assign xor_ln498_fu_689_p2 = (icmp_ln498_fu_652_p2 ^ 1'd1);

assign xor_ln505_1_fu_785_p2 = (p_Result_94_1_i_i_reg_1632_pp0_iter3_reg ^ p_Result_1_i_i_reg_1627_pp0_iter3_reg);

assign xor_ln505_2_fu_893_p2 = (p_Result_94_2_i_i_reg_1659_pp0_iter3_reg ^ p_Result_2_i_i_reg_1654_pp0_iter3_reg);

assign xor_ln505_3_fu_1001_p2 = (p_Result_94_3_i_i_reg_1686_pp0_iter3_reg ^ p_Result_3_i_i_reg_1681_pp0_iter3_reg);

assign xor_ln505_4_fu_1109_p2 = (p_Result_94_4_i_i_reg_1713_pp0_iter3_reg ^ p_Result_4_i_i_reg_1708_pp0_iter3_reg);

assign xor_ln505_5_fu_1217_p2 = (p_Result_94_5_i_i_reg_1740_pp0_iter3_reg ^ p_Result_5_i_i_reg_1735_pp0_iter3_reg);

assign xor_ln505_6_fu_1325_p2 = (p_Result_94_6_i_i_reg_1767_pp0_iter3_reg ^ p_Result_6_i_i_reg_1762_pp0_iter3_reg);

assign xor_ln505_7_fu_1433_p2 = (p_Result_94_7_i_i_reg_1794_pp0_iter3_reg ^ p_Result_7_i_i_reg_1789_pp0_iter3_reg);

assign xor_ln505_fu_677_p2 = (trunc_ln708_reg_1600_pp0_iter3_reg ^ trunc_ln708_1_reg_1605_pp0_iter3_reg);

assign zext_ln492_10_fu_1182_p1 = shl_ln489_5_fu_1174_p3;

assign zext_ln492_11_fu_1186_p1 = grp_fu_1548_p2;

assign zext_ln492_12_fu_1290_p1 = shl_ln489_6_fu_1282_p3;

assign zext_ln492_13_fu_1294_p1 = grp_fu_1556_p2;

assign zext_ln492_14_fu_1398_p1 = shl_ln489_7_fu_1390_p3;

assign zext_ln492_15_fu_1402_p1 = grp_fu_1564_p2;

assign zext_ln492_16_fu_649_p1 = grp_fu_1508_p2;

assign zext_ln492_17_fu_757_p1 = grp_fu_1516_p2;

assign zext_ln492_18_fu_865_p1 = grp_fu_1524_p2;

assign zext_ln492_19_fu_973_p1 = grp_fu_1532_p2;

assign zext_ln492_1_fu_646_p1 = grp_fu_1508_p2;

assign zext_ln492_20_fu_1081_p1 = grp_fu_1540_p2;

assign zext_ln492_21_fu_1189_p1 = grp_fu_1548_p2;

assign zext_ln492_22_fu_1297_p1 = grp_fu_1556_p2;

assign zext_ln492_23_fu_1405_p1 = grp_fu_1564_p2;

assign zext_ln492_2_fu_750_p1 = shl_ln489_1_fu_742_p3;

assign zext_ln492_3_fu_754_p1 = grp_fu_1516_p2;

assign zext_ln492_4_fu_858_p1 = shl_ln489_2_fu_850_p3;

assign zext_ln492_5_fu_862_p1 = grp_fu_1524_p2;

assign zext_ln492_6_fu_966_p1 = shl_ln489_3_fu_958_p3;

assign zext_ln492_7_fu_970_p1 = grp_fu_1532_p2;

assign zext_ln492_8_fu_1074_p1 = shl_ln489_4_fu_1066_p3;

assign zext_ln492_9_fu_1078_p1 = grp_fu_1540_p2;

assign zext_ln492_fu_642_p1 = shl_ln_fu_634_p3;

endmodule //canny_accel_xFAngleKernel_3_0_800_1280_4_0_8_2_2_32_24_160_480_s
