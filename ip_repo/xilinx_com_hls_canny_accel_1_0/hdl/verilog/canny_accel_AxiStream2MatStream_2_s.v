// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module canny_accel_AxiStream2MatStream_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        in_mat_421_din,
        in_mat_421_full_n,
        in_mat_421_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_bound_per_npc_dout,
        cols_bound_per_npc_empty_n,
        cols_bound_per_npc_read,
        last_blk_width
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [63:0] in_mat_421_din;
input   in_mat_421_full_n;
output   in_mat_421_write;
input  [31:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [28:0] cols_bound_per_npc_dout;
input   cols_bound_per_npc_empty_n;
output   cols_bound_per_npc_read;
input  [6:0] last_blk_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ldata1_read;
reg in_mat_421_write;
reg rows_read;
reg cols_bound_per_npc_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ldata1_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1054_reg_807;
reg   [0:0] icmp_ln1065_reg_816;
reg    in_mat_421_blk_n;
reg   [0:0] icmp_ln1084_reg_892;
reg    rows_blk_n;
reg    cols_bound_per_npc_blk_n;
reg   [31:0] j_reg_135;
reg   [30:0] i_reg_146;
reg   [6:0] last_blk_width_read_reg_771;
wire  signed [31:0] cols_bound_per_npc_cast2_i_fu_176_p1;
reg  signed [31:0] cols_bound_per_npc_cast2_i_reg_777;
wire   [31:0] bound_fu_188_p2;
reg   [31:0] bound_reg_782;
wire  signed [31:0] sub_cast_i_fu_200_p1;
reg  signed [31:0] sub_cast_i_reg_787;
wire   [7:0] sub2_i_fu_204_p2;
reg   [7:0] sub2_i_reg_792;
wire   [7:0] add_ln1074_fu_210_p2;
reg   [7:0] add_ln1074_reg_797;
wire   [30:0] add_ln1054_fu_226_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op109_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1054_fu_236_p2;
wire   [0:0] bLast_fu_245_p2;
reg   [0:0] bLast_reg_811;
wire   [0:0] icmp_ln1065_fu_276_p2;
wire   [0:0] icmp_ln674_1_fu_299_p2;
reg   [0:0] icmp_ln674_1_reg_820;
wire   [6:0] trunc_ln674_1_fu_305_p1;
reg   [6:0] trunc_ln674_1_reg_827;
wire   [6:0] trunc_ln674_2_fu_309_p1;
reg   [6:0] trunc_ln674_2_reg_835;
wire   [0:0] icmp_ln1066_fu_324_p2;
reg   [0:0] icmp_ln1066_reg_841;
wire   [6:0] trunc_ln1067_fu_330_p1;
reg   [6:0] trunc_ln1067_reg_846;
wire   [0:0] icmp_ln674_fu_344_p2;
reg   [0:0] icmp_ln674_reg_851;
wire   [6:0] trunc_ln674_fu_350_p1;
reg   [6:0] trunc_ln674_reg_858;
wire   [6:0] add_ln674_1_fu_378_p2;
reg   [6:0] add_ln674_1_reg_865;
wire   [0:0] icmp_ln414_fu_384_p2;
reg   [0:0] icmp_ln414_reg_870;
wire   [6:0] trunc_ln414_fu_390_p1;
reg   [6:0] trunc_ln414_reg_878;
wire   [6:0] trunc_ln414_1_fu_394_p1;
reg   [6:0] trunc_ln414_1_reg_886;
wire   [0:0] icmp_ln1084_fu_409_p2;
wire   [31:0] j_3_fu_420_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg   [63:0] ap_phi_mux_localbuffer_V_8_phi_fu_160_p4;
wire   [63:0] p_Result_15_fu_715_p2;
wire   [63:0] ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157;
wire   [63:0] p_Result_16_fu_500_p2;
reg   [31:0] rem_fu_96;
wire   [31:0] rem_2_fu_313_p2;
wire   [31:0] rem_1_fu_398_p2;
reg   [63:0] p_Val2_s_fu_100;
reg    ap_block_pp0_stage0_01001;
wire  signed [28:0] cols_bound_per_npc_cast2_i_fu_176_p0;
wire  signed [28:0] cols_bound_per_npc_cast_i_fu_184_p0;
wire  signed [29:0] cols_bound_per_npc_cast_i_fu_184_p1;
wire   [29:0] sub_i_fu_194_p2;
wire   [7:0] last_blk_width_cast4_i_fu_180_p1;
wire   [31:0] zext_ln1036_fu_232_p1;
wire   [6:0] xf_bits_per_clock_fu_250_p3;
wire   [7:0] ptr_width_minus_fu_265_p3;
wire   [31:0] zext_ln1060_fu_257_p1;
wire   [7:0] select_ln1074_fu_282_p3;
wire   [31:0] zext_ln1074_fu_289_p1;
wire   [31:0] grp_fu_166_p2;
wire   [31:0] sub_ln1074_fu_293_p2;
wire   [25:0] tmp_fu_334_p4;
wire   [7:0] zext_ln1060_1_fu_261_p1;
wire  signed [7:0] add_ln1071_fu_354_p2;
wire   [6:0] trunc_ln1071_1_fu_368_p1;
wire   [6:0] trunc_ln1071_fu_364_p1;
wire   [6:0] sub_ln674_3_fu_372_p2;
wire  signed [31:0] sext_ln1071_fu_360_p1;
wire  signed [31:0] sext_ln1061_fu_272_p1;
wire   [31:0] add_ln1086_fu_414_p2;
wire   [6:0] sub_ln674_4_fu_441_p2;
wire   [6:0] sub_ln674_6_fu_450_p2;
reg   [63:0] tmp_85_fu_431_p4;
wire   [6:0] sub_ln674_5_fu_445_p2;
wire   [6:0] select_ln674_3_fu_454_p3;
wire   [6:0] select_ln674_5_fu_468_p3;
wire   [6:0] sub_ln674_7_fu_474_p2;
wire   [63:0] select_ln674_4_fu_461_p3;
wire   [63:0] zext_ln674_3_fu_480_p1;
wire   [63:0] zext_ln674_4_fu_484_p1;
wire   [63:0] lshr_ln674_3_fu_488_p2;
wire   [63:0] lshr_ln674_4_fu_494_p2;
wire   [6:0] add_ln674_fu_517_p2;
wire   [6:0] grp_fu_171_p2;
reg   [63:0] tmp_82_fu_507_p4;
wire   [6:0] select_ln674_fu_522_p3;
wire   [6:0] select_ln674_2_fu_536_p3;
wire   [6:0] sub_ln674_2_fu_542_p2;
wire   [63:0] select_ln674_1_fu_529_p3;
wire   [63:0] zext_ln674_fu_548_p1;
wire   [63:0] zext_ln674_1_fu_552_p1;
wire   [63:0] lshr_ln674_fu_556_p2;
wire   [63:0] lshr_ln674_1_fu_562_p2;
wire   [6:0] sub_ln414_fu_574_p2;
wire   [63:0] zext_ln414_fu_579_p1;
wire   [63:0] p_Result_s_fu_568_p2;
wire   [63:0] lshr_ln414_fu_583_p2;
wire   [63:0] p_Result_13_fu_589_p2;
wire   [63:0] zext_ln674_2_fu_602_p1;
wire   [63:0] lshr_ln674_2_fu_605_p2;
wire   [6:0] sub_ln414_1_fu_617_p2;
wire   [6:0] select_ln414_fu_622_p3;
wire   [6:0] select_ln414_2_fu_632_p3;
wire   [6:0] select_ln414_1_fu_627_p3;
wire   [6:0] sub_ln414_2_fu_638_p2;
wire   [63:0] p_Result_14_fu_611_p2;
wire   [63:0] zext_ln414_1_fu_644_p1;
wire   [63:0] shl_ln414_fu_656_p2;
reg   [63:0] tmp_84_fu_662_p4;
wire   [63:0] zext_ln414_2_fu_648_p1;
wire   [63:0] zext_ln414_3_fu_652_p1;
wire   [63:0] shl_ln414_1_fu_679_p2;
wire   [63:0] lshr_ln414_1_fu_685_p2;
wire   [63:0] and_ln414_fu_691_p2;
wire   [63:0] localbuffer_V_fu_595_p3;
wire   [63:0] xor_ln414_fu_697_p2;
wire   [63:0] select_ln414_3_fu_672_p3;
wire   [63:0] and_ln414_1_fu_703_p2;
wire   [63:0] and_ln414_2_fu_709_p2;
wire   [6:0] sub_ln674_8_fu_727_p2;
wire   [63:0] zext_ln674_5_fu_732_p1;
wire   [63:0] lshr_ln674_5_fu_736_p2;
wire   [63:0] select_ln1059_fu_742_p3;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

canny_accel_mul_32s_29s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 29 ),
    .dout_WIDTH( 32 ))
mul_32s_29s_32_1_1_U33(
    .din0(rows_dout),
    .din1(cols_bound_per_npc_dout),
    .dout(bound_fu_188_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1054_fu_236_p2 == 1'd1))) begin
        i_reg_146 <= add_ln1054_fu_226_p2;
    end else if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_146 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1054_fu_236_p2 == 1'd1))) begin
        j_reg_135 <= j_3_fu_420_p3;
    end else if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_135 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_fu_100 <= 64'd0;
    end else if (((icmp_ln1065_reg_816 == 1'd1) & (icmp_ln1054_reg_807 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_fu_100 <= ldata1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rem_fu_96 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1065_fu_276_p2 == 1'd1) & (icmp_ln1054_fu_236_p2 == 1'd1))) begin
        rem_fu_96 <= rem_1_fu_398_p2;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1065_fu_276_p2 == 1'd0) & (icmp_ln1054_fu_236_p2 == 1'd1))) begin
        rem_fu_96 <= rem_2_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln1074_reg_797 <= add_ln1074_fu_210_p2;
        bound_reg_782 <= bound_fu_188_p2;
        cols_bound_per_npc_cast2_i_reg_777 <= cols_bound_per_npc_cast2_i_fu_176_p1;
        last_blk_width_read_reg_771 <= last_blk_width;
        sub2_i_reg_792 <= sub2_i_fu_204_p2;
        sub_cast_i_reg_787 <= sub_cast_i_fu_200_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1065_fu_276_p2 == 1'd1) & (icmp_ln1054_fu_236_p2 == 1'd1))) begin
        add_ln674_1_reg_865 <= add_ln674_1_fu_378_p2;
        icmp_ln1066_reg_841 <= icmp_ln1066_fu_324_p2;
        icmp_ln414_reg_870 <= icmp_ln414_fu_384_p2;
        icmp_ln674_reg_851 <= icmp_ln674_fu_344_p2;
        trunc_ln1067_reg_846 <= trunc_ln1067_fu_330_p1;
        trunc_ln414_1_reg_886 <= trunc_ln414_1_fu_394_p1;
        trunc_ln414_reg_878 <= trunc_ln414_fu_390_p1;
        trunc_ln674_reg_858 <= trunc_ln674_fu_350_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1054_fu_236_p2 == 1'd1))) begin
        bLast_reg_811 <= bLast_fu_245_p2;
        icmp_ln1065_reg_816 <= icmp_ln1065_fu_276_p2;
        icmp_ln1084_reg_892 <= icmp_ln1084_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1054_reg_807 <= icmp_ln1054_fu_236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1065_fu_276_p2 == 1'd0) & (icmp_ln1054_fu_236_p2 == 1'd1))) begin
        icmp_ln674_1_reg_820 <= icmp_ln674_1_fu_299_p2;
        trunc_ln674_1_reg_827 <= trunc_ln674_1_fu_305_p1;
        trunc_ln674_2_reg_835 <= trunc_ln674_2_fu_309_p1;
    end
end

always @ (*) begin
    if ((icmp_ln1054_fu_236_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1054_reg_807 == 1'd1)) begin
        if ((icmp_ln1065_reg_816 == 1'd0)) begin
            ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 = p_Result_16_fu_500_p2;
        end else if ((icmp_ln1065_reg_816 == 1'd1)) begin
            ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 = p_Result_15_fu_715_p2;
        end else begin
            ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 = ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157;
        end
    end else begin
        ap_phi_mux_localbuffer_V_8_phi_fu_160_p4 = ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_blk_n = cols_bound_per_npc_empty_n;
    end else begin
        cols_bound_per_npc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_bound_per_npc_read = 1'b1;
    end else begin
        cols_bound_per_npc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1084_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_mat_421_blk_n = in_mat_421_full_n;
    end else begin
        in_mat_421_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1084_reg_892 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_mat_421_write = 1'b1;
    end else begin
        in_mat_421_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1065_reg_816 == 1'd1) & (icmp_ln1054_reg_807 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op109_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1054_fu_236_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1054_fu_236_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1054_fu_226_p2 = (i_reg_146 + 31'd1);

assign add_ln1071_fu_354_p2 = ($signed(zext_ln1060_1_fu_261_p1) + $signed(8'd255));

assign add_ln1074_fu_210_p2 = (last_blk_width_cast4_i_fu_180_p1 + 8'd63);

assign add_ln1086_fu_414_p2 = (j_reg_135 + 32'd1);

assign add_ln674_1_fu_378_p2 = (sub_ln674_3_fu_372_p2 + 7'd63);

assign add_ln674_fu_517_p2 = ($signed(trunc_ln674_reg_858) + $signed(7'd65));

assign and_ln414_1_fu_703_p2 = (xor_ln414_fu_697_p2 & localbuffer_V_fu_595_p3);

assign and_ln414_2_fu_709_p2 = (select_ln414_3_fu_672_p3 & and_ln414_fu_691_p2);

assign and_ln414_fu_691_p2 = (shl_ln414_1_fu_679_p2 & lshr_ln414_1_fu_685_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op109_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0)) | ((icmp_ln1084_reg_892 == 1'd1) & (in_mat_421_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op109_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0)) | ((icmp_ln1084_reg_892 == 1'd1) & (in_mat_421_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op109_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0)) | ((icmp_ln1084_reg_892 == 1'd1) & (in_mat_421_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (cols_bound_per_npc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((ap_predicate_op109_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0)) | ((icmp_ln1084_reg_892 == 1'd1) & (in_mat_421_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_157 = 'bx;

always @ (*) begin
    ap_predicate_op109_read_state3 = ((icmp_ln1065_reg_816 == 1'd1) & (icmp_ln1054_reg_807 == 1'd1));
end

assign bLast_fu_245_p2 = ((j_reg_135 == sub_cast_i_reg_787) ? 1'b1 : 1'b0);

assign cols_bound_per_npc_cast2_i_fu_176_p0 = cols_bound_per_npc_dout;

assign cols_bound_per_npc_cast2_i_fu_176_p1 = cols_bound_per_npc_cast2_i_fu_176_p0;

assign cols_bound_per_npc_cast_i_fu_184_p0 = cols_bound_per_npc_dout;

assign cols_bound_per_npc_cast_i_fu_184_p1 = cols_bound_per_npc_cast_i_fu_184_p0;

assign grp_fu_166_p2 = (32'd64 - rem_fu_96);

assign grp_fu_171_p2 = (7'd63 - trunc_ln674_reg_858);

assign icmp_ln1054_fu_236_p2 = (($signed(zext_ln1036_fu_232_p1) < $signed(bound_reg_782)) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_276_p2 = (($signed(rem_fu_96) < $signed(zext_ln1060_fu_257_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1066_fu_324_p2 = ((rem_fu_96 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1084_fu_409_p2 = (($signed(j_reg_135) < $signed(cols_bound_per_npc_cast2_i_reg_777)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_384_p2 = ((rem_fu_96 > sext_ln1071_fu_360_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_299_p2 = ((grp_fu_166_p2 > sub_ln1074_fu_293_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_344_p2 = ((tmp_fu_334_p4 != 26'd0) ? 1'b1 : 1'b0);

assign in_mat_421_din = (select_ln1059_fu_742_p3 & ap_phi_mux_localbuffer_V_8_phi_fu_160_p4);

assign j_3_fu_420_p3 = ((bLast_fu_245_p2[0:0] == 1'b1) ? 32'd0 : add_ln1086_fu_414_p2);

assign last_blk_width_cast4_i_fu_180_p1 = last_blk_width;

assign localbuffer_V_fu_595_p3 = ((icmp_ln1066_reg_841[0:0] == 1'b1) ? 64'd0 : p_Result_13_fu_589_p2);

assign lshr_ln414_1_fu_685_p2 = 64'd18446744073709551615 >> zext_ln414_3_fu_652_p1;

assign lshr_ln414_fu_583_p2 = 64'd18446744073709551615 >> zext_ln414_fu_579_p1;

assign lshr_ln674_1_fu_562_p2 = 64'd18446744073709551615 >> zext_ln674_1_fu_552_p1;

assign lshr_ln674_2_fu_605_p2 = 64'd18446744073709551615 >> zext_ln674_2_fu_602_p1;

assign lshr_ln674_3_fu_488_p2 = select_ln674_4_fu_461_p3 >> zext_ln674_3_fu_480_p1;

assign lshr_ln674_4_fu_494_p2 = 64'd18446744073709551615 >> zext_ln674_4_fu_484_p1;

assign lshr_ln674_5_fu_736_p2 = 64'd18446744073709551615 >> zext_ln674_5_fu_732_p1;

assign lshr_ln674_fu_556_p2 = select_ln674_1_fu_529_p3 >> zext_ln674_fu_548_p1;

assign p_Result_13_fu_589_p2 = (p_Result_s_fu_568_p2 & lshr_ln414_fu_583_p2);

assign p_Result_14_fu_611_p2 = (lshr_ln674_2_fu_605_p2 & ldata1_dout);

assign p_Result_15_fu_715_p2 = (and_ln414_2_fu_709_p2 | and_ln414_1_fu_703_p2);

assign p_Result_16_fu_500_p2 = (lshr_ln674_4_fu_494_p2 & lshr_ln674_3_fu_488_p2);

assign p_Result_s_fu_568_p2 = (lshr_ln674_fu_556_p2 & lshr_ln674_1_fu_562_p2);

assign ptr_width_minus_fu_265_p3 = ((bLast_fu_245_p2[0:0] == 1'b1) ? sub2_i_reg_792 : 8'd0);

assign rem_1_fu_398_p2 = ($signed(rem_fu_96) + $signed(sext_ln1061_fu_272_p1));

assign rem_2_fu_313_p2 = (rem_fu_96 - zext_ln1060_fu_257_p1);

assign select_ln1059_fu_742_p3 = ((bLast_reg_811[0:0] == 1'b1) ? lshr_ln674_5_fu_736_p2 : 64'd18446744073709551615);

assign select_ln1074_fu_282_p3 = ((bLast_fu_245_p2[0:0] == 1'b1) ? add_ln1074_reg_797 : 8'd127);

assign select_ln414_1_fu_627_p3 = ((icmp_ln414_reg_870[0:0] == 1'b1) ? trunc_ln414_1_reg_886 : trunc_ln414_reg_878);

assign select_ln414_2_fu_632_p3 = ((icmp_ln414_reg_870[0:0] == 1'b1) ? sub_ln414_1_fu_617_p2 : trunc_ln414_reg_878);

assign select_ln414_3_fu_672_p3 = ((icmp_ln414_reg_870[0:0] == 1'b1) ? tmp_84_fu_662_p4 : shl_ln414_fu_656_p2);

assign select_ln414_fu_622_p3 = ((icmp_ln414_reg_870[0:0] == 1'b1) ? trunc_ln414_reg_878 : trunc_ln414_1_reg_886);

assign select_ln674_1_fu_529_p3 = ((icmp_ln674_reg_851[0:0] == 1'b1) ? tmp_82_fu_507_p4 : p_Val2_s_fu_100);

assign select_ln674_2_fu_536_p3 = ((icmp_ln674_reg_851[0:0] == 1'b1) ? grp_fu_171_p2 : trunc_ln674_reg_858);

assign select_ln674_3_fu_454_p3 = ((icmp_ln674_1_reg_820[0:0] == 1'b1) ? sub_ln674_4_fu_441_p2 : sub_ln674_6_fu_450_p2);

assign select_ln674_4_fu_461_p3 = ((icmp_ln674_1_reg_820[0:0] == 1'b1) ? tmp_85_fu_431_p4 : p_Val2_s_fu_100);

assign select_ln674_5_fu_468_p3 = ((icmp_ln674_1_reg_820[0:0] == 1'b1) ? sub_ln674_5_fu_445_p2 : trunc_ln674_1_reg_827);

assign select_ln674_fu_522_p3 = ((icmp_ln674_reg_851[0:0] == 1'b1) ? add_ln674_fu_517_p2 : grp_fu_171_p2);

assign sext_ln1061_fu_272_p1 = $signed(ptr_width_minus_fu_265_p3);

assign sext_ln1071_fu_360_p1 = add_ln1071_fu_354_p2;

assign shl_ln414_1_fu_679_p2 = 64'd18446744073709551615 << zext_ln414_2_fu_648_p1;

assign shl_ln414_fu_656_p2 = p_Result_14_fu_611_p2 << zext_ln414_1_fu_644_p1;

assign sub2_i_fu_204_p2 = (8'd64 - last_blk_width_cast4_i_fu_180_p1);

assign sub_cast_i_fu_200_p1 = $signed(sub_i_fu_194_p2);

assign sub_i_fu_194_p2 = ($signed(cols_bound_per_npc_cast_i_fu_184_p1) + $signed(30'd1073741823));

assign sub_ln1074_fu_293_p2 = (zext_ln1074_fu_289_p1 - rem_fu_96);

assign sub_ln414_1_fu_617_p2 = (7'd63 - trunc_ln414_reg_878);

assign sub_ln414_2_fu_638_p2 = (7'd63 - select_ln414_fu_622_p3);

assign sub_ln414_fu_574_p2 = ($signed(7'd64) - $signed(trunc_ln1067_reg_846));

assign sub_ln674_2_fu_542_p2 = (7'd63 - select_ln674_fu_522_p3);

assign sub_ln674_3_fu_372_p2 = (trunc_ln1071_1_fu_368_p1 - trunc_ln1071_fu_364_p1);

assign sub_ln674_4_fu_441_p2 = (trunc_ln674_1_reg_827 - trunc_ln674_2_reg_835);

assign sub_ln674_5_fu_445_p2 = (7'd63 - trunc_ln674_1_reg_827);

assign sub_ln674_6_fu_450_p2 = (trunc_ln674_2_reg_835 - trunc_ln674_1_reg_827);

assign sub_ln674_7_fu_474_p2 = (7'd63 - select_ln674_3_fu_454_p3);

assign sub_ln674_8_fu_727_p2 = ($signed(7'd64) - $signed(last_blk_width_read_reg_771));

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_100) begin
    for (ap_tvar_int_0 = 64 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 63 - 0) begin
            tmp_82_fu_507_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_82_fu_507_p4[ap_tvar_int_0] = p_Val2_s_fu_100[63 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (shl_ln414_fu_656_p2) begin
    for (ap_tvar_int_1 = 64 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 63 - 0) begin
            tmp_84_fu_662_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_84_fu_662_p4[ap_tvar_int_1] = shl_ln414_fu_656_p2[63 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_s_fu_100) begin
    for (ap_tvar_int_2 = 64 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 63 - 0) begin
            tmp_85_fu_431_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_85_fu_431_p4[ap_tvar_int_2] = p_Val2_s_fu_100[63 - ap_tvar_int_2];
        end
    end
end

assign tmp_fu_334_p4 = {{grp_fu_166_p2[31:6]}};

assign trunc_ln1067_fu_330_p1 = rem_fu_96[6:0];

assign trunc_ln1071_1_fu_368_p1 = rem_fu_96[6:0];

assign trunc_ln1071_fu_364_p1 = add_ln1071_fu_354_p2[6:0];

assign trunc_ln414_1_fu_394_p1 = add_ln1071_fu_354_p2[6:0];

assign trunc_ln414_fu_390_p1 = rem_fu_96[6:0];

assign trunc_ln674_1_fu_305_p1 = grp_fu_166_p2[6:0];

assign trunc_ln674_2_fu_309_p1 = sub_ln1074_fu_293_p2[6:0];

assign trunc_ln674_fu_350_p1 = grp_fu_166_p2[6:0];

assign xf_bits_per_clock_fu_250_p3 = ((bLast_fu_245_p2[0:0] == 1'b1) ? last_blk_width_read_reg_771 : 7'd64);

assign xor_ln414_fu_697_p2 = (64'd18446744073709551615 ^ and_ln414_fu_691_p2);

assign zext_ln1036_fu_232_p1 = i_reg_146;

assign zext_ln1060_1_fu_261_p1 = xf_bits_per_clock_fu_250_p3;

assign zext_ln1060_fu_257_p1 = xf_bits_per_clock_fu_250_p3;

assign zext_ln1074_fu_289_p1 = select_ln1074_fu_282_p3;

assign zext_ln414_1_fu_644_p1 = select_ln414_2_fu_632_p3;

assign zext_ln414_2_fu_648_p1 = select_ln414_1_fu_627_p3;

assign zext_ln414_3_fu_652_p1 = sub_ln414_2_fu_638_p2;

assign zext_ln414_fu_579_p1 = sub_ln414_fu_574_p2;

assign zext_ln674_1_fu_552_p1 = sub_ln674_2_fu_542_p2;

assign zext_ln674_2_fu_602_p1 = add_ln674_1_reg_865;

assign zext_ln674_3_fu_480_p1 = select_ln674_5_fu_468_p3;

assign zext_ln674_4_fu_484_p1 = sub_ln674_7_fu_474_p2;

assign zext_ln674_5_fu_732_p1 = sub_ln674_8_fu_727_p2;

assign zext_ln674_fu_548_p1 = select_ln674_2_fu_536_p3;

endmodule //canny_accel_AxiStream2MatStream_2_s
