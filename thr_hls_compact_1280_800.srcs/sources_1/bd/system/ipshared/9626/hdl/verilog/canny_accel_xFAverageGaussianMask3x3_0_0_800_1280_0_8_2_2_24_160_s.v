// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module canny_accel_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_mat_421_dout,
        in_mat_421_empty_n,
        in_mat_421_read,
        gaussian_mat_41_din,
        gaussian_mat_41_full_n,
        gaussian_mat_41_write,
        img_height_dout,
        img_height_empty_n,
        img_height_read,
        img_width_dout,
        img_width_empty_n,
        img_width_read,
        img_height_out_din,
        img_height_out_full_n,
        img_height_out_write,
        img_width_out_din,
        img_width_out_full_n,
        img_width_out_write
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_state4 = 7'd4;
parameter    ap_ST_fsm_state5 = 7'd8;
parameter    ap_ST_fsm_pp1_stage0 = 7'd16;
parameter    ap_ST_fsm_state11 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [63:0] in_mat_421_dout;
input   in_mat_421_empty_n;
output   in_mat_421_read;
output  [63:0] gaussian_mat_41_din;
input   gaussian_mat_41_full_n;
output   gaussian_mat_41_write;
input  [9:0] img_height_dout;
input   img_height_empty_n;
output   img_height_read;
input  [10:0] img_width_dout;
input   img_width_empty_n;
output   img_width_read;
output  [9:0] img_height_out_din;
input   img_height_out_full_n;
output   img_height_out_write;
output  [10:0] img_width_out_din;
input   img_width_out_full_n;
output   img_width_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_mat_421_read;
reg[63:0] gaussian_mat_41_din;
reg gaussian_mat_41_write;
reg img_height_read;
reg img_width_read;
reg img_height_out_write;
reg img_width_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_mat_421_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln215_reg_2224;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln116_reg_2364;
reg   [0:0] cmp_i_i345_i_i_reg_2355;
reg    gaussian_mat_41_blk_n;
reg    ap_enable_reg_pp1_iter4;
reg   [0:0] icmp_ln116_reg_2364_pp1_iter3_reg;
reg   [0:0] icmp_ln870_9_reg_2388;
reg   [0:0] icmp_ln870_9_reg_2388_pp1_iter3_reg;
wire    ap_CS_fsm_state12;
reg    img_height_blk_n;
reg    img_width_blk_n;
reg    img_height_out_blk_n;
reg    img_width_out_blk_n;
reg   [7:0] col_V_reg_357;
reg   [7:0] col_V_11_reg_392;
reg   [7:0] col_V_11_reg_392_pp1_iter1_reg;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op118_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
reg    ap_predicate_op386_write_state10;
reg    ap_block_state10_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] b1_V_10_reg_404;
reg   [7:0] b0_V_reg_416;
reg   [7:0] m1_V_10_reg_428;
reg   [7:0] m0_V_1_reg_440;
reg   [7:0] t1_V_10_reg_452;
reg   [7:0] t0_V_reg_464;
reg   [0:0] shift_x_reg_476;
reg   [55:0] P0_V_10_reg_490;
reg   [9:0] img_height_read_reg_2204;
wire   [7:0] trunc_ln_fu_571_p4;
reg   [7:0] trunc_ln_reg_2209;
wire   [0:0] icmp_ln878_fu_581_p2;
reg   [0:0] icmp_ln878_reg_2215;
wire   [7:0] col_V_10_fu_587_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln215_fu_593_p2;
wire   [63:0] zext_ln534_fu_598_p1;
reg   [63:0] zext_ln534_reg_2228;
wire   [10:0] img_height_cast47_i_fu_603_p1;
reg   [10:0] img_height_cast47_i_reg_2233;
wire    ap_CS_fsm_state4;
wire   [10:0] op2_assign_3_fu_606_p2;
reg   [10:0] op2_assign_3_reg_2238;
wire   [0:0] icmp_ln878_3_fu_622_p2;
reg   [0:0] icmp_ln878_3_reg_2243;
wire   [0:0] icmp_ln227_fu_628_p2;
wire    ap_CS_fsm_state5;
wire   [1:0] tp_V_fu_698_p3;
reg   [1:0] tp_V_reg_2341;
wire   [1:0] mid_V_fu_714_p3;
reg   [1:0] mid_V_reg_2346;
wire   [1:0] bottom_V_fu_730_p3;
reg   [1:0] bottom_V_reg_2351;
wire   [0:0] cmp_i_i345_i_i_fu_738_p2;
wire   [7:0] col_V_12_fu_758_p2;
reg   [7:0] col_V_12_reg_2359;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln116_fu_764_p2;
reg   [0:0] icmp_ln116_reg_2364_pp1_iter1_reg;
reg   [0:0] icmp_ln116_reg_2364_pp1_iter2_reg;
wire   [0:0] icmp_ln870_9_fu_790_p2;
reg   [7:0] src_buf1_V_8_reg_2392;
reg    ap_enable_reg_pp1_iter3;
reg   [7:0] src_buf1_V_9_reg_2397;
reg   [7:0] src_buf2_V_8_reg_2402;
reg   [7:0] src_buf2_V_9_reg_2407;
reg   [7:0] src_buf3_V_8_reg_2412;
reg   [7:0] src_buf3_V_9_reg_2417;
reg   [7:0] val_assign_1_reg_2422;
wire   [55:0] tmp_36_i_fu_1872_p8;
wire   [55:0] tmp_i_fu_1890_p8;
wire   [10:0] row_V_4_fu_2015_p2;
reg   [10:0] row_V_4_reg_2438;
wire    ap_CS_fsm_state11;
wire   [12:0] row_ind_V_4_fu_2033_p3;
reg   [12:0] row_ind_V_4_reg_2443;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter2_state8;
wire   [7:0] buf_V_0_address0;
reg    buf_V_0_ce0;
wire   [63:0] buf_V_0_q0;
reg   [7:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [63:0] buf_V_0_d1;
wire   [7:0] buf_V_1_address0;
reg    buf_V_1_ce0;
wire   [63:0] buf_V_1_q0;
reg   [7:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [63:0] buf_V_1_d1;
wire   [7:0] buf_V_2_address0;
reg    buf_V_2_ce0;
wire   [63:0] buf_V_2_q0;
reg   [7:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
reg   [63:0] buf_V_2_d1;
wire    call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_ready;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_0;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_1;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_2;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_3;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_4;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_5;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_6;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_7;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_8;
wire   [7:0] call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_9;
wire    call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_ready;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_0;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_1;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_2;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_3;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_4;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_5;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_6;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_7;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_8;
wire   [7:0] call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_9;
wire    call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_ready;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_0;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_1;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_2;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_3;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_4;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_5;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_6;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_7;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_8;
wire   [7:0] call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_9;
reg   [10:0] row_V_reg_368;
reg   [12:0] row_ind_V_reg_380;
reg   [7:0] ap_phi_mux_col_V_11_phi_fu_396_p4;
reg   [7:0] ap_phi_mux_b1_V_10_phi_fu_408_p4;
reg   [7:0] ap_phi_mux_b0_V_phi_fu_420_p4;
reg   [7:0] ap_phi_mux_m1_V_10_phi_fu_432_p4;
reg   [7:0] ap_phi_mux_m0_V_1_phi_fu_444_p4;
reg   [7:0] ap_phi_mux_t1_V_10_phi_fu_456_p4;
reg   [7:0] ap_phi_mux_t0_V_phi_fu_468_p4;
wire   [63:0] ap_phi_reg_pp1_iter0_buf2_V_reg_502;
reg   [63:0] ap_phi_reg_pp1_iter1_buf2_V_reg_502;
reg   [63:0] ap_phi_reg_pp1_iter2_buf2_V_reg_502;
reg   [63:0] ap_phi_reg_pp1_iter3_buf2_V_reg_502;
wire   [55:0] ap_phi_reg_pp1_iter0_P0_V_9_reg_513;
reg   [55:0] ap_phi_reg_pp1_iter1_P0_V_9_reg_513;
reg   [55:0] ap_phi_reg_pp1_iter2_P0_V_9_reg_513;
reg   [55:0] ap_phi_reg_pp1_iter3_P0_V_9_reg_513;
reg   [55:0] ap_phi_reg_pp1_iter4_P0_V_9_reg_513;
reg   [55:0] P0_V_11_reg_524;
reg   [0:0] shift_x_2_reg_536;
wire   [63:0] buf0_V_fu_820_p5;
wire   [63:0] buf1_V_fu_832_p5;
wire   [63:0] zext_ln534_6_fu_769_p1;
wire   [63:0] zext_ln534_5_fu_776_p1;
wire   [63:0] zext_ln126_fu_783_p1;
reg   [1:0] tp_fu_146;
reg   [1:0] mid_fu_150;
reg   [1:0] bottom_fu_154;
reg   [7:0] src_buf1_V_0_1_fu_158;
reg   [7:0] src_buf1_V_1_1_fu_162;
reg   [7:0] A00_fu_166;
reg   [7:0] t1_V_fu_170;
reg   [7:0] src_buf2_V_0_1_fu_174;
reg   [7:0] src_buf2_V_1_1_fu_178;
reg   [7:0] m0_V_fu_182;
reg   [7:0] m1_V_fu_186;
reg   [7:0] src_buf3_V_0_1_fu_190;
reg   [7:0] src_buf3_V_1_1_fu_194;
reg   [7:0] A01_fu_198;
reg   [7:0] b1_V_fu_202;
wire   [63:0] ret_fu_2006_p3;
reg    ap_block_pp1_stage0_01001;
wire   [63:0] ret_40_fu_2195_p3;
wire   [9:0] tmp_58_fu_612_p4;
wire   [0:0] icmp_ln870_fu_642_p2;
wire   [0:0] icmp_ln231_1_fu_678_p2;
wire   [0:0] icmp_ln231_fu_672_p2;
wire   [0:0] or_ln231_fu_692_p2;
wire   [1:0] select_ln231_fu_684_p3;
wire   [1:0] tp_1_fu_648_p3;
wire   [1:0] select_ln231_2_fu_706_p3;
wire   [1:0] mid_2_fu_656_p3;
wire   [1:0] select_ln231_4_fu_722_p3;
wire   [1:0] bottom_2_fu_664_p3;
wire   [8:0] zext_ln45_fu_964_p1;
wire   [8:0] zext_ln46_1_fu_976_p1;
wire   [8:0] add_ln45_fu_992_p2;
wire   [8:0] zext_ln45_1_fu_968_p1;
wire   [8:0] zext_ln46_fu_972_p1;
wire   [8:0] add_ln49_fu_1002_p2;
wire   [9:0] zext_ln49_fu_1008_p1;
wire   [9:0] zext_ln46_2_fu_998_p1;
wire   [8:0] zext_ln48_1_fu_1018_p1;
wire   [8:0] zext_ln45_2_fu_988_p1;
wire   [8:0] add_ln48_fu_1022_p2;
wire   [8:0] zext_ln48_fu_980_p1;
wire   [8:0] zext_ln1460_2_fu_984_p1;
wire   [8:0] add_ln50_2_fu_1032_p2;
wire   [9:0] zext_ln50_4_fu_1038_p1;
wire   [9:0] zext_ln50_3_fu_1028_p1;
wire   [9:0] add_ln50_3_fu_1042_p2;
wire   [9:0] A0_1_fu_1012_p2;
wire   [10:0] A1_1_fu_1048_p3;
wire   [9:0] A2_1_fu_1056_p3;
wire   [10:0] zext_ln52_6_fu_1072_p1;
wire   [10:0] zext_ln52_4_fu_1064_p1;
wire   [10:0] add_ln52_2_fu_1076_p2;
wire   [11:0] zext_ln52_7_fu_1082_p1;
wire   [11:0] zext_ln52_5_fu_1068_p1;
wire   [11:0] add_ln52_3_fu_1086_p2;
wire   [8:0] add_ln45_1_fu_1114_p2;
wire   [8:0] zext_ln45_3_fu_1102_p1;
wire   [8:0] zext_ln46_3_fu_1106_p1;
wire   [8:0] add_ln49_2_fu_1124_p2;
wire   [9:0] zext_ln49_1_fu_1130_p1;
wire   [9:0] zext_ln46_4_fu_1120_p1;
wire   [8:0] zext_ln47_1_fu_1140_p1;
wire   [8:0] add_ln48_1_fu_1144_p2;
wire   [8:0] zext_ln1460_3_fu_1110_p1;
wire   [8:0] add_ln50_4_fu_1154_p2;
wire   [9:0] zext_ln50_6_fu_1160_p1;
wire   [9:0] zext_ln50_5_fu_1150_p1;
wire   [9:0] add_ln50_5_fu_1164_p2;
wire   [9:0] A0_2_fu_1134_p2;
wire   [10:0] A1_2_fu_1170_p3;
wire   [9:0] A2_2_fu_1178_p3;
wire   [10:0] zext_ln52_10_fu_1194_p1;
wire   [10:0] zext_ln52_9_fu_1186_p1;
wire   [10:0] add_ln52_4_fu_1198_p2;
wire   [11:0] zext_ln52_12_fu_1204_p1;
wire   [11:0] zext_ln52_8_fu_1190_p1;
wire   [11:0] add_ln52_5_fu_1208_p2;
wire   [8:0] zext_ln45_4_fu_1224_p1;
wire   [8:0] zext_ln46_5_fu_1228_p1;
wire   [8:0] add_ln49_4_fu_1236_p2;
wire   [9:0] zext_ln49_2_fu_1242_p1;
wire   [8:0] add_ln48_2_fu_1252_p2;
wire   [8:0] zext_ln1460_4_fu_1232_p1;
wire   [8:0] add_ln50_6_fu_1262_p2;
wire   [9:0] zext_ln50_8_fu_1268_p1;
wire   [9:0] zext_ln50_7_fu_1258_p1;
wire   [9:0] add_ln50_7_fu_1272_p2;
wire   [9:0] A0_3_fu_1246_p2;
wire   [10:0] A1_3_fu_1278_p3;
wire   [9:0] A2_3_fu_1286_p3;
wire   [10:0] zext_ln52_15_fu_1302_p1;
wire   [10:0] zext_ln52_13_fu_1294_p1;
wire   [10:0] add_ln52_6_fu_1306_p2;
wire   [11:0] zext_ln52_16_fu_1312_p1;
wire   [11:0] zext_ln52_11_fu_1298_p1;
wire   [11:0] add_ln52_7_fu_1316_p2;
wire   [8:0] zext_ln45_5_fu_1332_p1;
wire   [8:0] zext_ln46_6_fu_1336_p1;
wire   [8:0] add_ln49_6_fu_1344_p2;
wire   [9:0] zext_ln49_3_fu_1350_p1;
wire   [8:0] add_ln48_3_fu_1360_p2;
wire   [8:0] zext_ln1460_5_fu_1340_p1;
wire   [8:0] add_ln50_8_fu_1370_p2;
wire   [9:0] zext_ln50_10_fu_1376_p1;
wire   [9:0] zext_ln50_9_fu_1366_p1;
wire   [9:0] add_ln50_9_fu_1380_p2;
wire   [9:0] A0_4_fu_1354_p2;
wire   [10:0] A1_4_fu_1386_p3;
wire   [9:0] A2_4_fu_1394_p3;
wire   [10:0] zext_ln52_19_fu_1410_p1;
wire   [10:0] zext_ln52_18_fu_1402_p1;
wire   [10:0] add_ln52_8_fu_1414_p2;
wire   [11:0] zext_ln52_21_fu_1420_p1;
wire   [11:0] zext_ln52_14_fu_1406_p1;
wire   [11:0] add_ln52_9_fu_1424_p2;
wire   [8:0] zext_ln45_6_fu_1440_p1;
wire   [8:0] zext_ln46_7_fu_1444_p1;
wire   [8:0] add_ln49_8_fu_1452_p2;
wire   [9:0] zext_ln49_4_fu_1458_p1;
wire   [8:0] add_ln48_4_fu_1468_p2;
wire   [8:0] zext_ln1460_6_fu_1448_p1;
wire   [8:0] add_ln50_10_fu_1478_p2;
wire   [9:0] zext_ln50_12_fu_1484_p1;
wire   [9:0] zext_ln50_11_fu_1474_p1;
wire   [9:0] add_ln50_11_fu_1488_p2;
wire   [9:0] A0_5_fu_1462_p2;
wire   [10:0] A1_5_fu_1494_p3;
wire   [9:0] A2_5_fu_1502_p3;
wire   [10:0] zext_ln52_24_fu_1518_p1;
wire   [10:0] zext_ln52_22_fu_1510_p1;
wire   [10:0] add_ln52_10_fu_1522_p2;
wire   [11:0] zext_ln52_25_fu_1528_p1;
wire   [11:0] zext_ln52_17_fu_1514_p1;
wire   [11:0] add_ln52_11_fu_1532_p2;
wire   [8:0] zext_ln45_7_fu_1548_p1;
wire   [8:0] zext_ln46_8_fu_1552_p1;
wire   [8:0] add_ln49_10_fu_1560_p2;
wire   [9:0] zext_ln49_5_fu_1566_p1;
wire   [8:0] add_ln48_5_fu_1576_p2;
wire   [8:0] zext_ln1460_7_fu_1556_p1;
wire   [8:0] add_ln50_12_fu_1586_p2;
wire   [9:0] zext_ln50_14_fu_1592_p1;
wire   [9:0] zext_ln50_13_fu_1582_p1;
wire   [9:0] add_ln50_13_fu_1596_p2;
wire   [9:0] A0_6_fu_1570_p2;
wire   [10:0] A1_6_fu_1602_p3;
wire   [9:0] A2_6_fu_1610_p3;
wire   [10:0] zext_ln52_28_fu_1626_p1;
wire   [10:0] zext_ln52_27_fu_1618_p1;
wire   [10:0] add_ln52_12_fu_1630_p2;
wire   [11:0] zext_ln52_29_fu_1636_p1;
wire   [11:0] zext_ln52_20_fu_1622_p1;
wire   [11:0] add_ln52_13_fu_1640_p2;
wire   [8:0] zext_ln46_9_fu_1656_p1;
wire   [8:0] zext_ln1460_8_fu_1660_p1;
wire   [8:0] add_ln49_12_fu_1668_p2;
wire   [9:0] zext_ln49_6_fu_1674_p1;
wire   [8:0] add_ln48_6_fu_1684_p2;
wire   [8:0] zext_ln1460_9_fu_1664_p1;
wire   [8:0] add_ln50_14_fu_1694_p2;
wire   [9:0] zext_ln50_16_fu_1700_p1;
wire   [9:0] zext_ln50_15_fu_1690_p1;
wire   [9:0] add_ln50_15_fu_1704_p2;
wire   [9:0] A0_7_fu_1678_p2;
wire   [10:0] A1_7_fu_1710_p3;
wire   [9:0] A2_7_fu_1718_p3;
wire   [10:0] zext_ln52_31_fu_1734_p1;
wire   [10:0] zext_ln52_30_fu_1726_p1;
wire   [10:0] add_ln52_14_fu_1738_p2;
wire   [11:0] zext_ln52_32_fu_1744_p1;
wire   [11:0] zext_ln52_23_fu_1730_p1;
wire   [11:0] add_ln52_15_fu_1748_p2;
wire   [8:0] zext_ln46_10_fu_1764_p1;
wire   [8:0] zext_ln45_8_fu_1768_p1;
wire   [8:0] add_ln49_14_fu_1772_p2;
wire   [9:0] zext_ln49_7_fu_1778_p1;
wire   [8:0] add_ln48_7_fu_1788_p2;
wire   [8:0] zext_ln50_18_fu_1798_p1;
wire   [8:0] add_ln50_16_fu_1802_p2;
wire   [9:0] zext_ln50_19_fu_1808_p1;
wire   [9:0] zext_ln50_17_fu_1794_p1;
wire   [9:0] add_ln50_17_fu_1812_p2;
wire   [9:0] A0_8_fu_1782_p2;
wire   [10:0] A1_8_fu_1818_p3;
wire   [9:0] A2_8_fu_1826_p3;
wire   [10:0] zext_ln52_34_fu_1842_p1;
wire   [10:0] zext_ln52_33_fu_1834_p1;
wire   [10:0] add_ln52_16_fu_1846_p2;
wire   [11:0] zext_ln52_35_fu_1852_p1;
wire   [11:0] zext_ln52_26_fu_1838_p1;
wire   [11:0] add_ln52_17_fu_1856_p2;
wire   [7:0] g_x_V_54_fu_1862_p4;
wire   [7:0] g_x_V_53_fu_1754_p4;
wire   [7:0] g_x_V_52_fu_1646_p4;
wire   [7:0] g_x_V_51_fu_1538_p4;
wire   [7:0] g_x_V_50_fu_1430_p4;
wire   [7:0] g_x_V_49_fu_1322_p4;
wire   [7:0] g_x_V_fu_1214_p4;
wire   [63:0] shl_ln781_1_fu_1971_p3;
wire   [63:0] zext_ln208_1_fu_1968_p1;
wire   [63:0] r_fu_1978_p3;
wire   [55:0] trunc_ln1349_1_fu_1986_p1;
wire   [7:0] tmp_fu_1996_p4;
wire   [55:0] or_ln1349_1_fu_1990_p2;
wire   [12:0] row_ind_V_3_fu_2021_p2;
wire   [0:0] icmp_ln870_8_fu_2027_p2;
wire   [8:0] zext_ln1460_1_fu_2063_p1;
wire   [8:0] zext_ln1460_fu_2059_p1;
wire   [8:0] zext_ln50_fu_2077_p1;
wire   [8:0] zext_ln47_fu_2073_p1;
wire   [8:0] add_ln50_fu_2085_p2;
wire   [9:0] zext_ln50_2_fu_2091_p1;
wire   [9:0] zext_ln50_1_fu_2081_p1;
wire   [9:0] add_ln50_1_fu_2095_p2;
wire   [8:0] A0_fu_2067_p2;
wire   [10:0] A1_fu_2101_p3;
wire   [9:0] A2_fu_2109_p3;
wire   [10:0] zext_ln52_2_fu_2125_p1;
wire   [10:0] zext_ln52_fu_2117_p1;
wire   [10:0] add_ln52_fu_2129_p2;
wire   [11:0] zext_ln52_3_fu_2135_p1;
wire   [11:0] zext_ln52_1_fu_2121_p1;
wire   [11:0] add_ln52_1_fu_2139_p2;
wire   [7:0] val_assign_s_fu_2145_p4;
wire   [63:0] shl_ln_fu_2159_p3;
wire   [63:0] zext_ln208_fu_2155_p1;
wire   [63:0] r_27_fu_2167_p3;
wire   [55:0] trunc_ln1349_fu_2175_p1;
wire   [7:0] tmp_s_fu_2185_p4;
wire   [55:0] or_ln1349_fu_2179_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_235;
reg    ap_condition_242;
reg    ap_condition_1904;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

canny_accel_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_s_buf_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

canny_accel_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_s_buf_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(buf_V_1_d1)
);

canny_accel_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_s_buf_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(buf_V_2_d1)
);

canny_accel_xfExtractPixels_8_24_0_1 call_ret6_i_xfExtractPixels_8_24_0_1_fu_549(
    .ap_ready(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_ready),
    .p_read(src_buf1_V_0_1_fu_158),
    .p_read1(src_buf1_V_1_1_fu_162),
    .p_read10(buf0_V_fu_820_p5),
    .ap_return_0(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_0),
    .ap_return_1(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_1),
    .ap_return_2(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_2),
    .ap_return_3(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_3),
    .ap_return_4(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_4),
    .ap_return_5(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_5),
    .ap_return_6(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_6),
    .ap_return_7(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_7),
    .ap_return_8(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_8),
    .ap_return_9(call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_9)
);

canny_accel_xfExtractPixels_8_24_0_1 call_ret7_i_xfExtractPixels_8_24_0_1_fu_556(
    .ap_ready(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_ready),
    .p_read(src_buf2_V_0_1_fu_174),
    .p_read1(src_buf2_V_1_1_fu_178),
    .p_read10(buf1_V_fu_832_p5),
    .ap_return_0(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_0),
    .ap_return_1(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_1),
    .ap_return_2(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_2),
    .ap_return_3(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_3),
    .ap_return_4(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_4),
    .ap_return_5(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_5),
    .ap_return_6(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_6),
    .ap_return_7(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_7),
    .ap_return_8(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_8),
    .ap_return_9(call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_9)
);

canny_accel_xfExtractPixels_8_24_0_1 call_ret_i_xfExtractPixels_8_24_0_1_fu_563(
    .ap_ready(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_ready),
    .p_read(src_buf3_V_0_1_fu_190),
    .p_read1(src_buf3_V_1_1_fu_194),
    .p_read10(ap_phi_reg_pp1_iter3_buf2_V_reg_502),
    .ap_return_0(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_0),
    .ap_return_1(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_1),
    .ap_return_2(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_2),
    .ap_return_3(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_3),
    .ap_return_4(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_4),
    .ap_return_5(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_5),
    .ap_return_6(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_6),
    .ap_return_7(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_7),
    .ap_return_8(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_8),
    .ap_return_9(call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_9)
);

canny_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U79(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(tp_V_reg_2341),
    .dout(buf0_V_fu_820_p5)
);

canny_accel_mux_32_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_32_64_1_1_U80(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(mid_V_reg_2346),
    .dout(buf1_V_fu_832_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln227_fu_628_p2 == 1'd1) | (icmp_ln878_3_reg_2243 == 1'd1)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter2_state8)) begin
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        P0_V_10_reg_490 <= 56'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        P0_V_10_reg_490 <= ap_phi_reg_pp1_iter4_P0_V_9_reg_513;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln878_reg_2215 == 1'd0))) begin
        P0_V_11_reg_524 <= P0_V_10_reg_490;
    end else if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd1))) begin
        P0_V_11_reg_524 <= 56'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_235)) begin
        if (((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_fu_764_p2 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_buf2_V_reg_502 <= 64'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_buf2_V_reg_502 <= ap_phi_reg_pp1_iter0_buf2_V_reg_502;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if (((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_buf2_V_reg_502 <= in_mat_421_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_buf2_V_reg_502 <= ap_phi_reg_pp1_iter1_buf2_V_reg_502;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        if (((icmp_ln116_reg_2364_pp1_iter2_reg == 1'd0) & (icmp_ln870_9_reg_2388 == 1'd0))) begin
            ap_phi_reg_pp1_iter4_P0_V_9_reg_513 <= tmp_36_i_fu_1872_p8;
        end else if (((icmp_ln116_reg_2364_pp1_iter2_reg == 1'd0) & (icmp_ln870_9_reg_2388 == 1'd1))) begin
            ap_phi_reg_pp1_iter4_P0_V_9_reg_513 <= tmp_i_fu_1890_p8;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter4_P0_V_9_reg_513 <= ap_phi_reg_pp1_iter3_P0_V_9_reg_513;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        b0_V_reg_416 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        b0_V_reg_416 <= src_buf3_V_8_reg_2412;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        b1_V_10_reg_404 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        b1_V_10_reg_404 <= src_buf3_V_9_reg_2417;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        col_V_11_reg_392 <= 8'd0;
    end else if (((icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_11_reg_392 <= col_V_12_reg_2359;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln215_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_V_reg_357 <= col_V_10_fu_587_p2;
    end else if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_V_reg_357 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        m0_V_1_reg_440 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        m0_V_1_reg_440 <= src_buf2_V_8_reg_2402;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        m1_V_10_reg_428 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        m1_V_10_reg_428 <= src_buf2_V_9_reg_2407;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_3_fu_622_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        row_V_reg_368 <= 11'd1;
    end else if (((gaussian_mat_41_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        row_V_reg_368 <= row_V_4_reg_2438;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_3_fu_622_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        row_ind_V_reg_380 <= 13'd2;
    end else if (((gaussian_mat_41_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        row_ind_V_reg_380 <= row_ind_V_4_reg_2443;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln878_reg_2215 == 1'd0))) begin
        shift_x_2_reg_536 <= 1'd1;
    end else if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd1))) begin
        shift_x_2_reg_536 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        shift_x_reg_476 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        shift_x_reg_476 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        t0_V_reg_464 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        t0_V_reg_464 <= src_buf1_V_8_reg_2392;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
        t1_V_10_reg_452 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        t1_V_10_reg_452 <= src_buf1_V_9_reg_2397;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln116_reg_2364_pp1_iter2_reg == 1'd0))) begin
        A00_fu_166 <= call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_8;
        A01_fu_198 <= call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_8;
        b1_V_fu_202 <= call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_9;
        m0_V_fu_182 <= call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_8;
        m1_V_fu_186 <= call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_9;
        src_buf1_V_0_1_fu_158 <= call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_0;
        src_buf1_V_1_1_fu_162 <= call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_1;
        src_buf1_V_8_reg_2392 <= call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_8;
        src_buf1_V_9_reg_2397 <= call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_9;
        src_buf2_V_0_1_fu_174 <= call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_0;
        src_buf2_V_1_1_fu_178 <= call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_1;
        src_buf2_V_8_reg_2402 <= call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_8;
        src_buf2_V_9_reg_2407 <= call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_9;
        src_buf3_V_0_1_fu_190 <= call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_0;
        src_buf3_V_1_1_fu_194 <= call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_1;
        src_buf3_V_8_reg_2412 <= call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_8;
        src_buf3_V_9_reg_2417 <= call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_9;
        t1_V_fu_170 <= call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter1_P0_V_9_reg_513 <= ap_phi_reg_pp1_iter0_P0_V_9_reg_513;
        col_V_12_reg_2359 <= col_V_12_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter2_P0_V_9_reg_513 <= ap_phi_reg_pp1_iter1_P0_V_9_reg_513;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_P0_V_9_reg_513 <= ap_phi_reg_pp1_iter2_P0_V_9_reg_513;
        ap_phi_reg_pp1_iter3_buf2_V_reg_502 <= ap_phi_reg_pp1_iter2_buf2_V_reg_502;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        bottom_V_reg_2351 <= bottom_V_fu_730_p3;
        bottom_fu_154 <= bottom_V_fu_730_p3;
        cmp_i_i345_i_i_reg_2355 <= cmp_i_i345_i_i_fu_738_p2;
        mid_V_reg_2346 <= mid_V_fu_714_p3;
        mid_fu_150 <= mid_V_fu_714_p3;
        tp_V_reg_2341 <= tp_V_fu_698_p3;
        tp_fu_146 <= tp_V_fu_698_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_11_reg_392_pp1_iter1_reg <= col_V_11_reg_392;
        icmp_ln116_reg_2364 <= icmp_ln116_fu_764_p2;
        icmp_ln116_reg_2364_pp1_iter1_reg <= icmp_ln116_reg_2364;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln116_reg_2364_pp1_iter2_reg <= icmp_ln116_reg_2364_pp1_iter1_reg;
        icmp_ln116_reg_2364_pp1_iter3_reg <= icmp_ln116_reg_2364_pp1_iter2_reg;
        icmp_ln870_9_reg_2388_pp1_iter3_reg <= icmp_ln870_9_reg_2388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln215_reg_2224 <= icmp_ln215_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter1_reg == 1'd0))) begin
        icmp_ln870_9_reg_2388 <= icmp_ln870_9_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln878_3_reg_2243 <= icmp_ln878_3_fu_622_p2;
        img_height_cast47_i_reg_2233[9 : 0] <= img_height_cast47_i_fu_603_p1[9 : 0];
        op2_assign_3_reg_2238 <= op2_assign_3_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln878_reg_2215 <= icmp_ln878_fu_581_p2;
        img_height_read_reg_2204 <= img_height_dout;
        trunc_ln_reg_2209 <= {{img_width_dout[10:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        row_V_4_reg_2438 <= row_V_4_fu_2015_p2;
        row_ind_V_4_reg_2443 <= row_ind_V_4_fu_2033_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln116_reg_2364_pp1_iter2_reg == 1'd0))) begin
        val_assign_1_reg_2422 <= {{add_ln52_3_fu_1086_p2[11:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln215_fu_593_p2 == 1'd0))) begin
        zext_ln534_reg_2228[7 : 0] <= zext_ln534_fu_598_p1[7 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln215_fu_593_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_condition_pp1_exit_iter2_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter2_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln116_fu_764_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln227_fu_628_p2 == 1'd1) | (icmp_ln878_3_reg_2243 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_b0_V_phi_fu_420_p4 = src_buf3_V_8_reg_2412;
    end else begin
        ap_phi_mux_b0_V_phi_fu_420_p4 = b0_V_reg_416;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_b1_V_10_phi_fu_408_p4 = src_buf3_V_9_reg_2417;
    end else begin
        ap_phi_mux_b1_V_10_phi_fu_408_p4 = b1_V_10_reg_404;
    end
end

always @ (*) begin
    if (((icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_col_V_11_phi_fu_396_p4 = col_V_12_reg_2359;
    end else begin
        ap_phi_mux_col_V_11_phi_fu_396_p4 = col_V_11_reg_392;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_m0_V_1_phi_fu_444_p4 = src_buf2_V_8_reg_2402;
    end else begin
        ap_phi_mux_m0_V_1_phi_fu_444_p4 = m0_V_1_reg_440;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_m1_V_10_phi_fu_432_p4 = src_buf2_V_9_reg_2407;
    end else begin
        ap_phi_mux_m1_V_10_phi_fu_432_p4 = m1_V_10_reg_428;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_t0_V_phi_fu_468_p4 = src_buf1_V_8_reg_2392;
    end else begin
        ap_phi_mux_t0_V_phi_fu_468_p4 = t0_V_reg_464;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_mux_t1_V_10_phi_fu_456_p4 = src_buf1_V_9_reg_2397;
    end else begin
        ap_phi_mux_t1_V_10_phi_fu_456_p4 = t1_V_10_reg_452;
    end
end

always @ (*) begin
    if (((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_address1 = zext_ln534_5_fu_776_p1;
    end else if (((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_address1 = zext_ln534_6_fu_769_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_V_0_address1 = zext_ln534_fu_598_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_0_d1 = in_mat_421_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_d1 = 64'd0;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln215_fu_593_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_address1 = zext_ln534_5_fu_776_p1;
    end else if (((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_address1 = zext_ln534_6_fu_769_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_1_address1 = zext_ln534_reg_2228;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_d1 = 64'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_d1 = in_mat_421_dout;
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln215_reg_2224 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (bottom_V_reg_2351 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1904)) begin
        if ((cmp_i_i345_i_i_reg_2355 == 1'd1)) begin
            buf_V_2_address1 = zext_ln534_5_fu_776_p1;
        end else if ((cmp_i_i345_i_i_reg_2355 == 1'd0)) begin
            buf_V_2_address1 = zext_ln534_6_fu_769_p1;
        end else begin
            buf_V_2_address1 = 'bx;
        end
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(bottom_V_reg_2351 == 2'd1) & ~(bottom_V_reg_2351 == 2'd0) & (cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(bottom_V_reg_2351 == 2'd1) & ~(bottom_V_reg_2351 == 2'd0) & (cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1904)) begin
        if ((cmp_i_i345_i_i_reg_2355 == 1'd1)) begin
            buf_V_2_d1 = in_mat_421_dout;
        end else if ((cmp_i_i345_i_i_reg_2355 == 1'd0)) begin
            buf_V_2_d1 = 64'd0;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(bottom_V_reg_2351 == 2'd1) & ~(bottom_V_reg_2351 == 2'd0) & (cmp_i_i345_i_i_reg_2355 == 1'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | (~(bottom_V_reg_2351 == 2'd1) & ~(bottom_V_reg_2351 == 2'd0) & (cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln870_9_reg_2388_pp1_iter3_reg == 1'd0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
        gaussian_mat_41_blk_n = gaussian_mat_41_full_n;
    end else begin
        gaussian_mat_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((gaussian_mat_41_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        gaussian_mat_41_din = ret_40_fu_2195_p3;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_predicate_op386_write_state10 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        gaussian_mat_41_din = ret_fu_2006_p3;
    end else begin
        gaussian_mat_41_din = 'bx;
    end
end

always @ (*) begin
    if ((((gaussian_mat_41_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op386_write_state10 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
        gaussian_mat_41_write = 1'b1;
    end else begin
        gaussian_mat_41_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_blk_n = img_height_empty_n;
    end else begin
        img_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_out_blk_n = img_height_out_full_n;
    end else begin
        img_height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_out_write = 1'b1;
    end else begin
        img_height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_read = 1'b1;
    end else begin
        img_height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_width_blk_n = img_width_empty_n;
    end else begin
        img_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_width_out_blk_n = img_width_out_full_n;
    end else begin
        img_width_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_width_out_write = 1'b1;
    end else begin
        img_width_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_width_read = 1'b1;
    end else begin
        img_width_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln215_reg_2224 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        in_mat_421_blk_n = in_mat_421_empty_n;
    end else begin
        in_mat_421_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op118_read_state7 == 1'b1)) | ((icmp_ln215_reg_2224 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_mat_421_read = 1'b1;
    end else begin
        in_mat_421_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln227_fu_628_p2 == 1'd1) | (icmp_ln878_3_reg_2243 == 1'd1)))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln215_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln215_fu_593_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln227_fu_628_p2 == 1'd1) | (icmp_ln878_3_reg_2243 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln227_fu_628_p2 == 1'd0) & (icmp_ln878_3_reg_2243 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln878_reg_2215 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((gaussian_mat_41_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A0_1_fu_1012_p2 = (zext_ln49_fu_1008_p1 + zext_ln46_2_fu_998_p1);

assign A0_2_fu_1134_p2 = (zext_ln49_1_fu_1130_p1 + zext_ln46_4_fu_1120_p1);

assign A0_3_fu_1246_p2 = (zext_ln49_2_fu_1242_p1 + zext_ln49_fu_1008_p1);

assign A0_4_fu_1354_p2 = (zext_ln49_3_fu_1350_p1 + zext_ln49_1_fu_1130_p1);

assign A0_5_fu_1462_p2 = (zext_ln49_4_fu_1458_p1 + zext_ln49_2_fu_1242_p1);

assign A0_6_fu_1570_p2 = (zext_ln49_5_fu_1566_p1 + zext_ln49_3_fu_1350_p1);

assign A0_7_fu_1678_p2 = (zext_ln49_6_fu_1674_p1 + zext_ln49_4_fu_1458_p1);

assign A0_8_fu_1782_p2 = (zext_ln49_7_fu_1778_p1 + zext_ln49_5_fu_1566_p1);

assign A0_fu_2067_p2 = (zext_ln1460_1_fu_2063_p1 + zext_ln1460_fu_2059_p1);

assign A1_1_fu_1048_p3 = {{add_ln50_3_fu_1042_p2}, {1'd0}};

assign A1_2_fu_1170_p3 = {{add_ln50_5_fu_1164_p2}, {1'd0}};

assign A1_3_fu_1278_p3 = {{add_ln50_7_fu_1272_p2}, {1'd0}};

assign A1_4_fu_1386_p3 = {{add_ln50_9_fu_1380_p2}, {1'd0}};

assign A1_5_fu_1494_p3 = {{add_ln50_11_fu_1488_p2}, {1'd0}};

assign A1_6_fu_1602_p3 = {{add_ln50_13_fu_1596_p2}, {1'd0}};

assign A1_7_fu_1710_p3 = {{add_ln50_15_fu_1704_p2}, {1'd0}};

assign A1_8_fu_1818_p3 = {{add_ln50_17_fu_1812_p2}, {1'd0}};

assign A1_fu_2101_p3 = {{add_ln50_1_fu_2095_p2}, {1'd0}};

assign A2_1_fu_1056_p3 = {{ap_phi_mux_m1_V_10_phi_fu_432_p4}, {2'd0}};

assign A2_2_fu_1178_p3 = {{call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_2}, {2'd0}};

assign A2_3_fu_1286_p3 = {{call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_3}, {2'd0}};

assign A2_4_fu_1394_p3 = {{call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_4}, {2'd0}};

assign A2_5_fu_1502_p3 = {{call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_5}, {2'd0}};

assign A2_6_fu_1610_p3 = {{call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_6}, {2'd0}};

assign A2_7_fu_1718_p3 = {{call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_7}, {2'd0}};

assign A2_8_fu_1826_p3 = {{call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_8}, {2'd0}};

assign A2_fu_2109_p3 = {{m1_V_fu_186}, {2'd0}};

assign add_ln45_1_fu_1114_p2 = (zext_ln48_fu_980_p1 + zext_ln45_2_fu_988_p1);

assign add_ln45_fu_992_p2 = (zext_ln45_fu_964_p1 + zext_ln46_1_fu_976_p1);

assign add_ln48_1_fu_1144_p2 = (zext_ln45_1_fu_968_p1 + zext_ln47_1_fu_1140_p1);

assign add_ln48_2_fu_1252_p2 = (zext_ln45_3_fu_1102_p1 + zext_ln1460_2_fu_984_p1);

assign add_ln48_3_fu_1360_p2 = (zext_ln45_4_fu_1224_p1 + zext_ln1460_3_fu_1110_p1);

assign add_ln48_4_fu_1468_p2 = (zext_ln45_5_fu_1332_p1 + zext_ln1460_4_fu_1232_p1);

assign add_ln48_5_fu_1576_p2 = (zext_ln45_6_fu_1440_p1 + zext_ln1460_5_fu_1340_p1);

assign add_ln48_6_fu_1684_p2 = (zext_ln45_7_fu_1548_p1 + zext_ln1460_6_fu_1448_p1);

assign add_ln48_7_fu_1788_p2 = (zext_ln46_9_fu_1656_p1 + zext_ln1460_7_fu_1556_p1);

assign add_ln48_fu_1022_p2 = (zext_ln48_1_fu_1018_p1 + zext_ln45_2_fu_988_p1);

assign add_ln49_10_fu_1560_p2 = (zext_ln45_7_fu_1548_p1 + zext_ln46_8_fu_1552_p1);

assign add_ln49_12_fu_1668_p2 = (zext_ln46_9_fu_1656_p1 + zext_ln1460_8_fu_1660_p1);

assign add_ln49_14_fu_1772_p2 = (zext_ln46_10_fu_1764_p1 + zext_ln45_8_fu_1768_p1);

assign add_ln49_2_fu_1124_p2 = (zext_ln45_3_fu_1102_p1 + zext_ln46_3_fu_1106_p1);

assign add_ln49_4_fu_1236_p2 = (zext_ln45_4_fu_1224_p1 + zext_ln46_5_fu_1228_p1);

assign add_ln49_6_fu_1344_p2 = (zext_ln45_5_fu_1332_p1 + zext_ln46_6_fu_1336_p1);

assign add_ln49_8_fu_1452_p2 = (zext_ln45_6_fu_1440_p1 + zext_ln46_7_fu_1444_p1);

assign add_ln49_fu_1002_p2 = (zext_ln45_1_fu_968_p1 + zext_ln46_fu_972_p1);

assign add_ln50_10_fu_1478_p2 = (zext_ln46_6_fu_1336_p1 + zext_ln1460_6_fu_1448_p1);

assign add_ln50_11_fu_1488_p2 = (zext_ln50_12_fu_1484_p1 + zext_ln50_11_fu_1474_p1);

assign add_ln50_12_fu_1586_p2 = (zext_ln46_7_fu_1444_p1 + zext_ln1460_7_fu_1556_p1);

assign add_ln50_13_fu_1596_p2 = (zext_ln50_14_fu_1592_p1 + zext_ln50_13_fu_1582_p1);

assign add_ln50_14_fu_1694_p2 = (zext_ln46_8_fu_1552_p1 + zext_ln1460_9_fu_1664_p1);

assign add_ln50_15_fu_1704_p2 = (zext_ln50_16_fu_1700_p1 + zext_ln50_15_fu_1690_p1);

assign add_ln50_16_fu_1802_p2 = (zext_ln1460_8_fu_1660_p1 + zext_ln50_18_fu_1798_p1);

assign add_ln50_17_fu_1812_p2 = (zext_ln50_19_fu_1808_p1 + zext_ln50_17_fu_1794_p1);

assign add_ln50_1_fu_2095_p2 = (zext_ln50_2_fu_2091_p1 + zext_ln50_1_fu_2081_p1);

assign add_ln50_2_fu_1032_p2 = (zext_ln48_fu_980_p1 + zext_ln1460_2_fu_984_p1);

assign add_ln50_3_fu_1042_p2 = (zext_ln50_4_fu_1038_p1 + zext_ln50_3_fu_1028_p1);

assign add_ln50_4_fu_1154_p2 = (zext_ln46_fu_972_p1 + zext_ln1460_3_fu_1110_p1);

assign add_ln50_5_fu_1164_p2 = (zext_ln50_6_fu_1160_p1 + zext_ln50_5_fu_1150_p1);

assign add_ln50_6_fu_1262_p2 = (zext_ln46_3_fu_1106_p1 + zext_ln1460_4_fu_1232_p1);

assign add_ln50_7_fu_1272_p2 = (zext_ln50_8_fu_1268_p1 + zext_ln50_7_fu_1258_p1);

assign add_ln50_8_fu_1370_p2 = (zext_ln46_5_fu_1228_p1 + zext_ln1460_5_fu_1340_p1);

assign add_ln50_9_fu_1380_p2 = (zext_ln50_10_fu_1376_p1 + zext_ln50_9_fu_1366_p1);

assign add_ln50_fu_2085_p2 = (zext_ln50_fu_2077_p1 + zext_ln47_fu_2073_p1);

assign add_ln52_10_fu_1522_p2 = (zext_ln52_24_fu_1518_p1 + zext_ln52_22_fu_1510_p1);

assign add_ln52_11_fu_1532_p2 = (zext_ln52_25_fu_1528_p1 + zext_ln52_17_fu_1514_p1);

assign add_ln52_12_fu_1630_p2 = (zext_ln52_28_fu_1626_p1 + zext_ln52_27_fu_1618_p1);

assign add_ln52_13_fu_1640_p2 = (zext_ln52_29_fu_1636_p1 + zext_ln52_20_fu_1622_p1);

assign add_ln52_14_fu_1738_p2 = (zext_ln52_31_fu_1734_p1 + zext_ln52_30_fu_1726_p1);

assign add_ln52_15_fu_1748_p2 = (zext_ln52_32_fu_1744_p1 + zext_ln52_23_fu_1730_p1);

assign add_ln52_16_fu_1846_p2 = (zext_ln52_34_fu_1842_p1 + zext_ln52_33_fu_1834_p1);

assign add_ln52_17_fu_1856_p2 = (zext_ln52_35_fu_1852_p1 + zext_ln52_26_fu_1838_p1);

assign add_ln52_1_fu_2139_p2 = (zext_ln52_3_fu_2135_p1 + zext_ln52_1_fu_2121_p1);

assign add_ln52_2_fu_1076_p2 = (zext_ln52_6_fu_1072_p1 + zext_ln52_4_fu_1064_p1);

assign add_ln52_3_fu_1086_p2 = (zext_ln52_7_fu_1082_p1 + zext_ln52_5_fu_1068_p1);

assign add_ln52_4_fu_1198_p2 = (zext_ln52_10_fu_1194_p1 + zext_ln52_9_fu_1186_p1);

assign add_ln52_5_fu_1208_p2 = (zext_ln52_12_fu_1204_p1 + zext_ln52_8_fu_1190_p1);

assign add_ln52_6_fu_1306_p2 = (zext_ln52_15_fu_1302_p1 + zext_ln52_13_fu_1294_p1);

assign add_ln52_7_fu_1316_p2 = (zext_ln52_16_fu_1312_p1 + zext_ln52_11_fu_1298_p1);

assign add_ln52_8_fu_1414_p2 = (zext_ln52_19_fu_1410_p1 + zext_ln52_18_fu_1402_p1);

assign add_ln52_9_fu_1424_p2 = (zext_ln52_21_fu_1420_p1 + zext_ln52_14_fu_1406_p1);

assign add_ln52_fu_2129_p2 = (zext_ln52_2_fu_2125_p1 + zext_ln52_fu_2117_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln215_reg_2224 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (in_mat_421_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln215_reg_2224 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (in_mat_421_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (in_mat_421_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)) | ((gaussian_mat_41_full_n == 1'b0) & (ap_predicate_op386_write_state10 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter1 == 1'b1) & (in_mat_421_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)) | ((gaussian_mat_41_full_n == 1'b0) & (ap_predicate_op386_write_state10 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter1 == 1'b1) & (in_mat_421_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1)) | ((gaussian_mat_41_full_n == 1'b0) & (ap_predicate_op386_write_state10 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((img_width_out_full_n == 1'b0) | (img_height_out_full_n == 1'b0) | (img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter4 = ((gaussian_mat_41_full_n == 1'b0) & (ap_predicate_op386_write_state10 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln215_reg_2224 == 1'd0) & (in_mat_421_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((in_mat_421_empty_n == 1'b0) & (ap_predicate_op118_read_state7 == 1'b1));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1904 = (~(bottom_V_reg_2351 == 2'd1) & ~(bottom_V_reg_2351 == 2'd0) & (icmp_ln116_reg_2364 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_235 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_242 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_P0_V_9_reg_513 = 'bx;

assign ap_phi_reg_pp1_iter0_buf2_V_reg_502 = 'bx;

always @ (*) begin
    ap_predicate_op118_read_state7 = ((cmp_i_i345_i_i_reg_2355 == 1'd1) & (icmp_ln116_reg_2364 == 1'd0));
end

always @ (*) begin
    ap_predicate_op386_write_state10 = ((icmp_ln870_9_reg_2388_pp1_iter3_reg == 1'd0) & (icmp_ln116_reg_2364_pp1_iter3_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign bottom_2_fu_664_p3 = ((icmp_ln870_fu_642_p2[0:0] == 1'b1) ? 2'd1 : bottom_fu_154);

assign bottom_V_fu_730_p3 = ((or_ln231_fu_692_p2[0:0] == 1'b1) ? select_ln231_4_fu_722_p3 : bottom_2_fu_664_p3);

assign buf_V_0_address0 = zext_ln126_fu_783_p1;

assign buf_V_1_address0 = zext_ln126_fu_783_p1;

assign buf_V_2_address0 = zext_ln126_fu_783_p1;

assign cmp_i_i345_i_i_fu_738_p2 = ((row_V_reg_368 < img_height_cast47_i_reg_2233) ? 1'b1 : 1'b0);

assign col_V_10_fu_587_p2 = (col_V_reg_357 + 8'd1);

assign col_V_12_fu_758_p2 = (ap_phi_mux_col_V_11_phi_fu_396_p4 + 8'd1);

assign g_x_V_49_fu_1322_p4 = {{add_ln52_7_fu_1316_p2[11:4]}};

assign g_x_V_50_fu_1430_p4 = {{add_ln52_9_fu_1424_p2[11:4]}};

assign g_x_V_51_fu_1538_p4 = {{add_ln52_11_fu_1532_p2[11:4]}};

assign g_x_V_52_fu_1646_p4 = {{add_ln52_13_fu_1640_p2[11:4]}};

assign g_x_V_53_fu_1754_p4 = {{add_ln52_15_fu_1748_p2[11:4]}};

assign g_x_V_54_fu_1862_p4 = {{add_ln52_17_fu_1856_p2[11:4]}};

assign g_x_V_fu_1214_p4 = {{add_ln52_5_fu_1208_p2[11:4]}};

assign icmp_ln116_fu_764_p2 = ((ap_phi_mux_col_V_11_phi_fu_396_p4 == trunc_ln_reg_2209) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_593_p2 = ((col_V_reg_357 == trunc_ln_reg_2209) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_628_p2 = ((row_V_reg_368 == op2_assign_3_reg_2238) ? 1'b1 : 1'b0);

assign icmp_ln231_1_fu_678_p2 = ((row_ind_V_reg_380 == 13'd2) ? 1'b1 : 1'b0);

assign icmp_ln231_fu_672_p2 = ((row_ind_V_reg_380 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_8_fu_2027_p2 = ((row_ind_V_3_fu_2021_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_9_fu_790_p2 = ((col_V_11_reg_392_pp1_iter1_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_642_p2 = ((row_ind_V_reg_380 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_622_p2 = ((tmp_58_fu_612_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_581_p2 = ((trunc_ln_fu_571_p4 == 8'd0) ? 1'b1 : 1'b0);

assign img_height_cast47_i_fu_603_p1 = img_height_read_reg_2204;

assign img_height_out_din = img_height_dout;

assign img_width_out_din = img_width_dout;

assign mid_2_fu_656_p3 = ((icmp_ln870_fu_642_p2[0:0] == 1'b1) ? 2'd0 : mid_fu_150);

assign mid_V_fu_714_p3 = ((or_ln231_fu_692_p2[0:0] == 1'b1) ? select_ln231_2_fu_706_p3 : mid_2_fu_656_p3);

assign op2_assign_3_fu_606_p2 = (img_height_cast47_i_fu_603_p1 + 11'd1);

assign or_ln1349_1_fu_1990_p2 = (trunc_ln1349_1_fu_1986_p1 | P0_V_10_reg_490);

assign or_ln1349_fu_2179_p2 = (trunc_ln1349_fu_2175_p1 | P0_V_11_reg_524);

assign or_ln231_fu_692_p2 = (icmp_ln231_fu_672_p2 | icmp_ln231_1_fu_678_p2);

assign r_27_fu_2167_p3 = ((shift_x_2_reg_536[0:0] == 1'b1) ? shl_ln_fu_2159_p3 : zext_ln208_fu_2155_p1);

assign r_fu_1978_p3 = ((shift_x_reg_476[0:0] == 1'b1) ? shl_ln781_1_fu_1971_p3 : zext_ln208_1_fu_1968_p1);

assign ret_40_fu_2195_p3 = {{tmp_s_fu_2185_p4}, {or_ln1349_fu_2179_p2}};

assign ret_fu_2006_p3 = {{tmp_fu_1996_p4}, {or_ln1349_1_fu_1990_p2}};

assign row_V_4_fu_2015_p2 = (row_V_reg_368 + 11'd1);

assign row_ind_V_3_fu_2021_p2 = (row_ind_V_reg_380 + 13'd1);

assign row_ind_V_4_fu_2033_p3 = ((icmp_ln870_8_fu_2027_p2[0:0] == 1'b1) ? 13'd0 : row_ind_V_3_fu_2021_p2);

assign select_ln231_2_fu_706_p3 = ((icmp_ln231_1_fu_678_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign select_ln231_4_fu_722_p3 = ((icmp_ln231_1_fu_678_p2[0:0] == 1'b1) ? 2'd2 : 2'd0);

assign select_ln231_fu_684_p3 = ((icmp_ln231_1_fu_678_p2[0:0] == 1'b1) ? 2'd0 : 2'd1);

assign shl_ln781_1_fu_1971_p3 = {{val_assign_1_reg_2422}, {56'd0}};

assign shl_ln_fu_2159_p3 = {{val_assign_s_fu_2145_p4}, {56'd0}};

assign start_out = real_start;

assign tmp_36_i_fu_1872_p8 = {{{{{{{g_x_V_54_fu_1862_p4}, {g_x_V_53_fu_1754_p4}}, {g_x_V_52_fu_1646_p4}}, {g_x_V_51_fu_1538_p4}}, {g_x_V_50_fu_1430_p4}}, {g_x_V_49_fu_1322_p4}}, {g_x_V_fu_1214_p4}};

assign tmp_58_fu_612_p4 = {{op2_assign_3_fu_606_p2[10:1]}};

assign tmp_fu_1996_p4 = {{r_fu_1978_p3[63:56]}};

assign tmp_i_fu_1890_p8 = {{{{{{{g_x_V_54_fu_1862_p4}, {g_x_V_53_fu_1754_p4}}, {g_x_V_52_fu_1646_p4}}, {g_x_V_51_fu_1538_p4}}, {g_x_V_50_fu_1430_p4}}, {g_x_V_49_fu_1322_p4}}, {g_x_V_fu_1214_p4}};

assign tmp_s_fu_2185_p4 = {{r_27_fu_2167_p3[63:56]}};

assign tp_1_fu_648_p3 = ((icmp_ln870_fu_642_p2[0:0] == 1'b1) ? 2'd2 : tp_fu_146);

assign tp_V_fu_698_p3 = ((or_ln231_fu_692_p2[0:0] == 1'b1) ? select_ln231_fu_684_p3 : tp_1_fu_648_p3);

assign trunc_ln1349_1_fu_1986_p1 = r_fu_1978_p3[55:0];

assign trunc_ln1349_fu_2175_p1 = r_27_fu_2167_p3[55:0];

assign trunc_ln_fu_571_p4 = {{img_width_dout[10:3]}};

assign val_assign_s_fu_2145_p4 = {{add_ln52_1_fu_2139_p2[11:4]}};

assign zext_ln126_fu_783_p1 = col_V_11_reg_392_pp1_iter1_reg;

assign zext_ln1460_1_fu_2063_p1 = A01_fu_198;

assign zext_ln1460_2_fu_984_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_2;

assign zext_ln1460_3_fu_1110_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_3;

assign zext_ln1460_4_fu_1232_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_4;

assign zext_ln1460_5_fu_1340_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_5;

assign zext_ln1460_6_fu_1448_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_6;

assign zext_ln1460_7_fu_1556_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_7;

assign zext_ln1460_8_fu_1660_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_8;

assign zext_ln1460_9_fu_1664_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_8;

assign zext_ln1460_fu_2059_p1 = A00_fu_166;

assign zext_ln208_1_fu_1968_p1 = val_assign_1_reg_2422;

assign zext_ln208_fu_2155_p1 = val_assign_s_fu_2145_p4;

assign zext_ln45_1_fu_968_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_2;

assign zext_ln45_2_fu_988_p1 = ap_phi_mux_b1_V_10_phi_fu_408_p4;

assign zext_ln45_3_fu_1102_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_3;

assign zext_ln45_4_fu_1224_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_4;

assign zext_ln45_5_fu_1332_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_5;

assign zext_ln45_6_fu_1440_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_6;

assign zext_ln45_7_fu_1548_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_7;

assign zext_ln45_8_fu_1768_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_9;

assign zext_ln45_fu_964_p1 = ap_phi_mux_t0_V_phi_fu_468_p4;

assign zext_ln46_10_fu_1764_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_9;

assign zext_ln46_1_fu_976_p1 = ap_phi_mux_b0_V_phi_fu_420_p4;

assign zext_ln46_2_fu_998_p1 = add_ln45_fu_992_p2;

assign zext_ln46_3_fu_1106_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_3;

assign zext_ln46_4_fu_1120_p1 = add_ln45_1_fu_1114_p2;

assign zext_ln46_5_fu_1228_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_4;

assign zext_ln46_6_fu_1336_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_5;

assign zext_ln46_7_fu_1444_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_6;

assign zext_ln46_8_fu_1552_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_7;

assign zext_ln46_9_fu_1656_p1 = call_ret6_i_xfExtractPixels_8_24_0_1_fu_549_ap_return_8;

assign zext_ln46_fu_972_p1 = call_ret_i_xfExtractPixels_8_24_0_1_fu_563_ap_return_2;

assign zext_ln47_1_fu_1140_p1 = ap_phi_mux_m1_V_10_phi_fu_432_p4;

assign zext_ln47_fu_2073_p1 = t1_V_fu_170;

assign zext_ln48_1_fu_1018_p1 = ap_phi_mux_m0_V_1_phi_fu_444_p4;

assign zext_ln48_fu_980_p1 = ap_phi_mux_t1_V_10_phi_fu_456_p4;

assign zext_ln49_1_fu_1130_p1 = add_ln49_2_fu_1124_p2;

assign zext_ln49_2_fu_1242_p1 = add_ln49_4_fu_1236_p2;

assign zext_ln49_3_fu_1350_p1 = add_ln49_6_fu_1344_p2;

assign zext_ln49_4_fu_1458_p1 = add_ln49_8_fu_1452_p2;

assign zext_ln49_5_fu_1566_p1 = add_ln49_10_fu_1560_p2;

assign zext_ln49_6_fu_1674_p1 = add_ln49_12_fu_1668_p2;

assign zext_ln49_7_fu_1778_p1 = add_ln49_14_fu_1772_p2;

assign zext_ln49_fu_1008_p1 = add_ln49_fu_1002_p2;

assign zext_ln50_10_fu_1376_p1 = add_ln50_8_fu_1370_p2;

assign zext_ln50_11_fu_1474_p1 = add_ln48_4_fu_1468_p2;

assign zext_ln50_12_fu_1484_p1 = add_ln50_10_fu_1478_p2;

assign zext_ln50_13_fu_1582_p1 = add_ln48_5_fu_1576_p2;

assign zext_ln50_14_fu_1592_p1 = add_ln50_12_fu_1586_p2;

assign zext_ln50_15_fu_1690_p1 = add_ln48_6_fu_1684_p2;

assign zext_ln50_16_fu_1700_p1 = add_ln50_14_fu_1694_p2;

assign zext_ln50_17_fu_1794_p1 = add_ln48_7_fu_1788_p2;

assign zext_ln50_18_fu_1798_p1 = call_ret7_i_xfExtractPixels_8_24_0_1_fu_556_ap_return_9;

assign zext_ln50_19_fu_1808_p1 = add_ln50_16_fu_1802_p2;

assign zext_ln50_1_fu_2081_p1 = b1_V_fu_202;

assign zext_ln50_2_fu_2091_p1 = add_ln50_fu_2085_p2;

assign zext_ln50_3_fu_1028_p1 = add_ln48_fu_1022_p2;

assign zext_ln50_4_fu_1038_p1 = add_ln50_2_fu_1032_p2;

assign zext_ln50_5_fu_1150_p1 = add_ln48_1_fu_1144_p2;

assign zext_ln50_6_fu_1160_p1 = add_ln50_4_fu_1154_p2;

assign zext_ln50_7_fu_1258_p1 = add_ln48_2_fu_1252_p2;

assign zext_ln50_8_fu_1268_p1 = add_ln50_6_fu_1262_p2;

assign zext_ln50_9_fu_1366_p1 = add_ln48_3_fu_1360_p2;

assign zext_ln50_fu_2077_p1 = m0_V_fu_182;

assign zext_ln52_10_fu_1194_p1 = A2_2_fu_1178_p3;

assign zext_ln52_11_fu_1298_p1 = A1_3_fu_1278_p3;

assign zext_ln52_12_fu_1204_p1 = add_ln52_4_fu_1198_p2;

assign zext_ln52_13_fu_1294_p1 = A0_3_fu_1246_p2;

assign zext_ln52_14_fu_1406_p1 = A1_4_fu_1386_p3;

assign zext_ln52_15_fu_1302_p1 = A2_3_fu_1286_p3;

assign zext_ln52_16_fu_1312_p1 = add_ln52_6_fu_1306_p2;

assign zext_ln52_17_fu_1514_p1 = A1_5_fu_1494_p3;

assign zext_ln52_18_fu_1402_p1 = A0_4_fu_1354_p2;

assign zext_ln52_19_fu_1410_p1 = A2_4_fu_1394_p3;

assign zext_ln52_1_fu_2121_p1 = A1_fu_2101_p3;

assign zext_ln52_20_fu_1622_p1 = A1_6_fu_1602_p3;

assign zext_ln52_21_fu_1420_p1 = add_ln52_8_fu_1414_p2;

assign zext_ln52_22_fu_1510_p1 = A0_5_fu_1462_p2;

assign zext_ln52_23_fu_1730_p1 = A1_7_fu_1710_p3;

assign zext_ln52_24_fu_1518_p1 = A2_5_fu_1502_p3;

assign zext_ln52_25_fu_1528_p1 = add_ln52_10_fu_1522_p2;

assign zext_ln52_26_fu_1838_p1 = A1_8_fu_1818_p3;

assign zext_ln52_27_fu_1618_p1 = A0_6_fu_1570_p2;

assign zext_ln52_28_fu_1626_p1 = A2_6_fu_1610_p3;

assign zext_ln52_29_fu_1636_p1 = add_ln52_12_fu_1630_p2;

assign zext_ln52_2_fu_2125_p1 = A2_fu_2109_p3;

assign zext_ln52_30_fu_1726_p1 = A0_7_fu_1678_p2;

assign zext_ln52_31_fu_1734_p1 = A2_7_fu_1718_p3;

assign zext_ln52_32_fu_1744_p1 = add_ln52_14_fu_1738_p2;

assign zext_ln52_33_fu_1834_p1 = A0_8_fu_1782_p2;

assign zext_ln52_34_fu_1842_p1 = A2_8_fu_1826_p3;

assign zext_ln52_35_fu_1852_p1 = add_ln52_16_fu_1846_p2;

assign zext_ln52_3_fu_2135_p1 = add_ln52_fu_2129_p2;

assign zext_ln52_4_fu_1064_p1 = A0_1_fu_1012_p2;

assign zext_ln52_5_fu_1068_p1 = A1_1_fu_1048_p3;

assign zext_ln52_6_fu_1072_p1 = A2_1_fu_1056_p3;

assign zext_ln52_7_fu_1082_p1 = add_ln52_2_fu_1076_p2;

assign zext_ln52_8_fu_1190_p1 = A1_2_fu_1170_p3;

assign zext_ln52_9_fu_1186_p1 = A0_2_fu_1134_p2;

assign zext_ln52_fu_2117_p1 = A0_fu_2067_p2;

assign zext_ln534_5_fu_776_p1 = col_V_11_reg_392;

assign zext_ln534_6_fu_769_p1 = col_V_11_reg_392;

assign zext_ln534_fu_598_p1 = col_V_reg_357;

always @ (posedge ap_clk) begin
    zext_ln534_reg_2228[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    img_height_cast47_i_reg_2233[10] <= 1'b0;
end

endmodule //canny_accel_xFAverageGaussianMask3x3_0_0_800_1280_0_8_2_2_24_160_s
