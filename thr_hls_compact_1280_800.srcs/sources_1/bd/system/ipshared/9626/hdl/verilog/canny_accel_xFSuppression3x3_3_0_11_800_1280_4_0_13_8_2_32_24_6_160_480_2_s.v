// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        magnitude_mat_48_dout,
        magnitude_mat_48_empty_n,
        magnitude_mat_48_read,
        phase_mat_49_dout,
        phase_mat_49_empty_n,
        phase_mat_49_read,
        nms_mat_410_din,
        nms_mat_410_full_n,
        nms_mat_410_write,
        low_threshold_dout,
        low_threshold_empty_n,
        low_threshold_read,
        high_threshold_dout,
        high_threshold_empty_n,
        high_threshold_read,
        imgheight_dout,
        imgheight_empty_n,
        imgheight_read,
        imgwidth_dout,
        imgwidth_empty_n,
        imgwidth_read,
        imgheight_out_din,
        imgheight_out_full_n,
        imgheight_out_write,
        imgwidth_out_din,
        imgwidth_out_full_n,
        imgwidth_out_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state4 = 6'd4;
parameter    ap_ST_fsm_state5 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state10 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [127:0] magnitude_mat_48_dout;
input   magnitude_mat_48_empty_n;
output   magnitude_mat_48_read;
input  [63:0] phase_mat_49_dout;
input   phase_mat_49_empty_n;
output   phase_mat_49_read;
output  [15:0] nms_mat_410_din;
input   nms_mat_410_full_n;
output   nms_mat_410_write;
input  [7:0] low_threshold_dout;
input   low_threshold_empty_n;
output   low_threshold_read;
input  [7:0] high_threshold_dout;
input   high_threshold_empty_n;
output   high_threshold_read;
input  [9:0] imgheight_dout;
input   imgheight_empty_n;
output   imgheight_read;
input  [10:0] imgwidth_dout;
input   imgwidth_empty_n;
output   imgwidth_read;
output  [9:0] imgheight_out_din;
input   imgheight_out_full_n;
output   imgheight_out_write;
output  [10:0] imgwidth_out_din;
input   imgwidth_out_full_n;
output   imgwidth_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg magnitude_mat_48_read;
reg phase_mat_49_read;
reg[15:0] nms_mat_410_din;
reg nms_mat_410_write;
reg low_threshold_read;
reg high_threshold_read;
reg imgheight_read;
reg imgwidth_read;
reg imgheight_out_write;
reg imgwidth_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    magnitude_mat_48_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln345_reg_1648;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln207_reg_1820;
reg   [0:0] cmp_i_i156_i_i_reg_1798;
reg    phase_mat_49_blk_n;
reg    nms_mat_410_blk_n;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] icmp_ln207_reg_1820_pp1_iter2_reg;
reg   [0:0] icmp_ln870_4_reg_1849;
wire    ap_CS_fsm_state10;
reg    low_threshold_blk_n;
reg    high_threshold_blk_n;
reg    imgheight_blk_n;
reg    imgwidth_blk_n;
reg    imgheight_out_blk_n;
reg    imgwidth_out_blk_n;
reg   [7:0] col_V_reg_464;
reg   [7:0] col_V_2_reg_523;
reg   [7:0] col_V_2_reg_523_pp1_iter1_reg;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_predicate_op150_read_state7;
reg    ap_predicate_op161_read_state7;
reg    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
reg    ap_predicate_op262_write_state9;
reg    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] agg_tmp31_i_i_0_i_reg_535;
reg   [15:0] agg_tmp20_i_i_assign_1_i_reg_547;
reg   [15:0] agg_tmp20_i_i_0_i_reg_559;
reg   [15:0] agg_tmp9_i_i_assign_1_i_reg_571;
reg   [15:0] agg_tmp9_i_i_0_i_reg_583;
reg   [15:0] agg_tmp2_i_i_0_i_reg_595;
reg   [15:0] agg_tmp_i_i_0_i_reg_607;
reg   [15:0] P0_V_6_reg_619;
reg   [7:0] low_threshold_read_reg_1608;
reg   [7:0] high_threshold_read_reg_1620;
reg   [9:0] imgheight_read_reg_1632;
reg   [7:0] imgwidth_assign_cast_reg_1637;
wire   [7:0] col_V_1_fu_830_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln345_fu_836_p2;
wire   [63:0] zext_ln534_fu_841_p1;
reg   [63:0] zext_ln534_reg_1652;
wire   [10:0] imgheight_cast3_i_fu_846_p1;
reg   [10:0] imgheight_cast3_i_reg_1658;
wire    ap_CS_fsm_state4;
wire   [10:0] op2_assign_2_fu_849_p2;
reg   [10:0] op2_assign_2_reg_1663;
wire   [0:0] icmp_ln878_fu_865_p2;
reg   [0:0] icmp_ln878_reg_1668;
wire   [0:0] icmp_ln362_fu_911_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] cmp_i_i156_i_i_fu_991_p2;
wire   [1:0] trunc_ln214_fu_996_p1;
reg   [1:0] trunc_ln214_reg_1802;
wire   [0:0] trunc_ln215_fu_1000_p1;
reg   [0:0] trunc_ln215_reg_1806;
wire   [0:0] trunc_ln231_fu_1004_p1;
reg   [0:0] trunc_ln231_reg_1810;
wire   [7:0] col_V_3_fu_1008_p2;
reg   [7:0] col_V_3_reg_1815;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln207_fu_1014_p2;
reg   [0:0] icmp_ln207_reg_1820_pp1_iter1_reg;
wire   [0:0] icmp_ln870_4_fu_1046_p2;
wire   [10:0] row_V_1_fu_1501_p2;
wire   [12:0] row_ind_V_2_fu_1572_p3;
wire   [12:0] read_ind_V_2_fu_1586_p3;
wire   [12:0] write_ind_V_2_fu_1600_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter2_state8;
reg   [7:0] angle_V_0_address0;
reg    angle_V_0_ce0;
reg    angle_V_0_we0;
reg   [63:0] angle_V_0_d0;
wire   [7:0] angle_V_0_address1;
reg    angle_V_0_ce1;
wire   [63:0] angle_V_0_q1;
reg   [7:0] angle_V_1_address0;
reg    angle_V_1_ce0;
reg    angle_V_1_we0;
reg   [63:0] angle_V_1_d0;
wire   [7:0] angle_V_1_address1;
reg    angle_V_1_ce1;
wire   [63:0] angle_V_1_q1;
reg   [7:0] buf_V_0_address0;
reg    buf_V_0_ce0;
reg    buf_V_0_we0;
reg   [127:0] buf_V_0_d0;
wire   [7:0] buf_V_0_address1;
reg    buf_V_0_ce1;
wire   [127:0] buf_V_0_q1;
reg   [7:0] buf_V_1_address0;
reg    buf_V_1_ce0;
reg    buf_V_1_we0;
reg   [127:0] buf_V_1_d0;
wire   [7:0] buf_V_1_address1;
reg    buf_V_1_ce1;
wire   [127:0] buf_V_1_q1;
reg   [7:0] buf_V_2_address0;
reg    buf_V_2_ce0;
reg    buf_V_2_we0;
reg   [127:0] buf_V_2_d0;
wire   [7:0] buf_V_2_address1;
reg    buf_V_2_ce1;
wire   [127:0] buf_V_2_q1;
wire    grp_xFFindmax3x3_4_0_13_s_fu_642_ap_ready;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21;
reg   [15:0] grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22;
reg   [7:0] grp_xFFindmax3x3_4_0_13_s_fu_642_angle;
wire   [1:0] grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return;
wire    ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_ready;
wire   [1:0] ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return;
wire    ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_ready;
wire   [1:0] ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return;
wire    ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_ready;
wire   [1:0] ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return;
wire    ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_ready;
wire   [1:0] ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return;
wire    ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_ready;
wire   [1:0] ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return;
wire    ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_ready;
wire   [1:0] ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return;
wire    ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_ready;
wire   [1:0] ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return;
wire    call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_ready;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_0;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_1;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8;
wire   [15:0] call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9;
wire    call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_ready;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_0;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_1;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8;
wire   [15:0] call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9;
wire    call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_ready;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_0;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_1;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8;
wire   [15:0] call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9;
wire    call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_ready;
wire   [63:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_p_read10;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_0;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_1;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_2;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_3;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_4;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_5;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_6;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_7;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_8;
wire   [7:0] call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9;
reg   [10:0] row_V_reg_475;
reg   [12:0] write_ind_V_reg_487;
reg   [12:0] read_ind_V_reg_499;
wire   [12:0] ap_phi_mux_row_ind_V_phi_fu_515_p4;
reg   [12:0] row_ind_V_reg_511;
reg   [7:0] ap_phi_mux_col_V_2_phi_fu_527_p4;
reg   [15:0] ap_phi_mux_P0_V_5_phi_fu_635_p4;
wire   [15:0] p_Result_s_fu_1413_p5;
wire   [15:0] ap_phi_reg_pp1_iter3_P0_V_5_reg_631;
wire   [15:0] p_Result_3_fu_1374_p9;
wire   [127:0] buf0_V_fu_1084_p5;
wire   [127:0] buf1_V_fu_1097_p5;
wire   [127:0] buf2_V_fu_1110_p5;
wire   [63:0] zext_ln534_2_fu_1019_p1;
wire   [63:0] zext_ln534_1_fu_1028_p1;
wire   [63:0] zext_ln222_fu_1037_p1;
reg   [1:0] bottom_fu_152;
wire   [1:0] bottom_1_fu_952_p3;
reg   [1:0] mid_fu_156;
wire   [1:0] mid_1_fu_960_p3;
reg   [1:0] top_fu_160;
wire   [1:0] top_1_fu_968_p3;
reg   [15:0] l00_buf_V_0_1_fu_164;
reg   [15:0] l00_buf_V_1_1_fu_168;
reg   [15:0] l00_buf_V_8_1_fu_172;
reg   [15:0] l00_buf_V_9_1_fu_176;
reg   [15:0] l10_buf_V_0_1_fu_180;
reg   [15:0] l10_buf_V_1_1_fu_184;
reg   [15:0] l10_buf_V_8_1_fu_188;
reg   [15:0] l10_buf_V_9_1_fu_192;
reg   [15:0] l20_buf_V_0_1_fu_196;
reg   [15:0] l20_buf_V_1_1_fu_200;
reg   [15:0] l20_buf_V_8_1_fu_204;
reg   [15:0] l20_buf_V_9_1_fu_208;
reg   [7:0] angle_buf_V_0_1_fu_212;
reg   [7:0] angle_buf_V_1_1_fu_216;
reg   [7:0] angle_buf_V_9_1_fu_220;
wire   [15:0] p_Result_2_fu_1361_p5;
reg    ap_block_pp1_stage0_01001;
wire   [15:0] p_Result_4_fu_1535_p5;
wire   [9:0] tmp_fu_855_p4;
wire   [0:0] icmp_ln870_fu_946_p2;
wire   [13:0] tmp_i_fu_1395_p8;
wire   [12:0] row_ind_V_1_fu_1548_p2;
wire   [0:0] icmp_ln870_1_fu_1566_p2;
wire   [12:0] read_ind_V_1_fu_1554_p2;
wire   [0:0] icmp_ln870_2_fu_1580_p2;
wire   [12:0] write_ind_V_1_fu_1560_p2;
wire   [0:0] icmp_ln870_3_fu_1594_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_1525;
reg    ap_condition_242;
reg    ap_condition_1532;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_angle_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
angle_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angle_V_0_address0),
    .ce0(angle_V_0_ce0),
    .we0(angle_V_0_we0),
    .d0(angle_V_0_d0),
    .address1(angle_V_0_address1),
    .ce1(angle_V_0_ce1),
    .q1(angle_V_0_q1)
);

canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_angle_V_0 #(
    .DataWidth( 64 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
angle_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angle_V_1_address0),
    .ce0(angle_V_1_ce0),
    .we0(angle_V_1_we0),
    .d0(angle_V_1_d0),
    .address1(angle_V_1_address1),
    .ce1(angle_V_1_ce1),
    .q1(angle_V_1_q1)
);

canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_buf_V_0 #(
    .DataWidth( 128 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .we0(buf_V_0_we0),
    .d0(buf_V_0_d0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .q1(buf_V_0_q1)
);

canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_buf_V_0 #(
    .DataWidth( 128 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .we0(buf_V_1_we0),
    .d0(buf_V_1_d0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .q1(buf_V_1_q1)
);

canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s_buf_V_0 #(
    .DataWidth( 128 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .we0(buf_V_2_we0),
    .d0(buf_V_2_d0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .q1(buf_V_2_q1)
);

canny_accel_xFFindmax3x3_4_0_13_s grp_xFFindmax3x3_4_0_13_s_fu_642(
    .ap_ready(grp_xFFindmax3x3_4_0_13_s_fu_642_ap_ready),
    .p_i00(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00),
    .p_i01(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01),
    .p_i02(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02),
    .p_i10(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10),
    .p_i11(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11),
    .p_i12(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12),
    .p_i20(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20),
    .p_i21(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21),
    .p_i22(grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22),
    .angle(grp_xFFindmax3x3_4_0_13_s_fu_642_angle),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return)
);

canny_accel_xFFindmax3x3_4_0_13_s ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665(
    .ap_ready(ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_ready),
    .p_i00(agg_tmp2_i_i_0_i_reg_595),
    .p_i01(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2),
    .p_i02(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3),
    .p_i10(agg_tmp9_i_i_assign_1_i_reg_571),
    .p_i11(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2),
    .p_i12(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3),
    .p_i20(agg_tmp20_i_i_assign_1_i_reg_547),
    .p_i21(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2),
    .p_i22(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3),
    .angle(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_2),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return)
);

canny_accel_xFFindmax3x3_4_0_13_s ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684(
    .ap_ready(ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_ready),
    .p_i00(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2),
    .p_i01(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3),
    .p_i02(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4),
    .p_i10(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2),
    .p_i11(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3),
    .p_i12(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4),
    .p_i20(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2),
    .p_i21(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3),
    .p_i22(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4),
    .angle(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_3),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return)
);

canny_accel_xFFindmax3x3_4_0_13_s ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700(
    .ap_ready(ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_ready),
    .p_i00(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3),
    .p_i01(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4),
    .p_i02(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5),
    .p_i10(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3),
    .p_i11(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4),
    .p_i12(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5),
    .p_i20(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3),
    .p_i21(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4),
    .p_i22(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5),
    .angle(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_4),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return)
);

canny_accel_xFFindmax3x3_4_0_13_s ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716(
    .ap_ready(ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_ready),
    .p_i00(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4),
    .p_i01(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5),
    .p_i02(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6),
    .p_i10(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4),
    .p_i11(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5),
    .p_i12(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6),
    .p_i20(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4),
    .p_i21(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5),
    .p_i22(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6),
    .angle(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_5),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return)
);

canny_accel_xFFindmax3x3_4_0_13_s ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732(
    .ap_ready(ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_ready),
    .p_i00(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5),
    .p_i01(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6),
    .p_i02(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7),
    .p_i10(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5),
    .p_i11(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6),
    .p_i12(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7),
    .p_i20(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5),
    .p_i21(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6),
    .p_i22(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7),
    .angle(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_6),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return)
);

canny_accel_xFFindmax3x3_4_0_13_s ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748(
    .ap_ready(ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_ready),
    .p_i00(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6),
    .p_i01(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7),
    .p_i02(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8),
    .p_i10(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6),
    .p_i11(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7),
    .p_i12(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8),
    .p_i20(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6),
    .p_i21(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7),
    .p_i22(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8),
    .angle(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_7),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return)
);

canny_accel_xFFindmax3x3_4_0_13_s ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764(
    .ap_ready(ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_ready),
    .p_i00(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7),
    .p_i01(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8),
    .p_i02(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9),
    .p_i10(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7),
    .p_i11(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8),
    .p_i12(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9),
    .p_i20(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7),
    .p_i21(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8),
    .p_i22(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9),
    .angle(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_8),
    .p_low_threshold(low_threshold_read_reg_1608),
    .p_high_threshold(high_threshold_read_reg_1620),
    .ap_return(ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return)
);

canny_accel_xfExtractPixels_8_32_4_s call_ret1_i_xfExtractPixels_8_32_4_s_fu_783(
    .ap_ready(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_ready),
    .p_read(l00_buf_V_0_1_fu_164),
    .p_read1(l00_buf_V_1_1_fu_168),
    .p_read10(buf0_V_fu_1084_p5),
    .ap_return_0(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_0),
    .ap_return_1(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_1),
    .ap_return_2(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2),
    .ap_return_3(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_3),
    .ap_return_4(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_4),
    .ap_return_5(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_5),
    .ap_return_6(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_6),
    .ap_return_7(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_7),
    .ap_return_8(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8),
    .ap_return_9(call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9)
);

canny_accel_xfExtractPixels_8_32_4_s call_ret2_i_xfExtractPixels_8_32_4_s_fu_790(
    .ap_ready(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_ready),
    .p_read(l10_buf_V_0_1_fu_180),
    .p_read1(l10_buf_V_1_1_fu_184),
    .p_read10(buf1_V_fu_1097_p5),
    .ap_return_0(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_0),
    .ap_return_1(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_1),
    .ap_return_2(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2),
    .ap_return_3(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_3),
    .ap_return_4(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_4),
    .ap_return_5(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_5),
    .ap_return_6(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_6),
    .ap_return_7(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_7),
    .ap_return_8(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8),
    .ap_return_9(call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9)
);

canny_accel_xfExtractPixels_8_32_4_s call_ret_i_xfExtractPixels_8_32_4_s_fu_797(
    .ap_ready(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_ready),
    .p_read(l20_buf_V_0_1_fu_196),
    .p_read1(l20_buf_V_1_1_fu_200),
    .p_read10(buf2_V_fu_1110_p5),
    .ap_return_0(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_0),
    .ap_return_1(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_1),
    .ap_return_2(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2),
    .ap_return_3(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_3),
    .ap_return_4(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_4),
    .ap_return_5(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_5),
    .ap_return_6(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_6),
    .ap_return_7(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_7),
    .ap_return_8(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8),
    .ap_return_9(call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9)
);

canny_accel_xfExtractPixels_8_24_0_1 call_ret3_i_xfExtractPixels_8_24_0_1_fu_804(
    .ap_ready(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_ready),
    .p_read(angle_buf_V_0_1_fu_212),
    .p_read1(angle_buf_V_1_1_fu_216),
    .p_read10(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_p_read10),
    .ap_return_0(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_0),
    .ap_return_1(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_1),
    .ap_return_2(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_2),
    .ap_return_3(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_3),
    .ap_return_4(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_4),
    .ap_return_5(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_5),
    .ap_return_6(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_6),
    .ap_return_7(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_7),
    .ap_return_8(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_8),
    .ap_return_9(call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9)
);

canny_accel_mux_32_128_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .din2_WIDTH( 128 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 128 ))
mux_32_128_1_1_U161(
    .din0(buf_V_0_q1),
    .din1(buf_V_1_q1),
    .din2(buf_V_2_q1),
    .din3(top_fu_160),
    .dout(buf0_V_fu_1084_p5)
);

canny_accel_mux_32_128_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .din2_WIDTH( 128 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 128 ))
mux_32_128_1_1_U162(
    .din0(buf_V_0_q1),
    .din1(buf_V_1_q1),
    .din2(buf_V_2_q1),
    .din3(mid_fu_156),
    .dout(buf1_V_fu_1097_p5)
);

canny_accel_mux_32_128_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 128 ),
    .din2_WIDTH( 128 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 128 ))
mux_32_128_1_1_U163(
    .din0(buf_V_0_q1),
    .din1(buf_V_1_q1),
    .din2(buf_V_2_q1),
    .din3(bottom_fu_152),
    .dout(buf2_V_fu_1110_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln362_fu_911_p2 == 1'd1) | (icmp_ln878_reg_1668 == 1'd1)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter2_state8) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter2_state8))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        P0_V_6_reg_619 <= ap_phi_mux_P0_V_5_phi_fu_635_p4;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        P0_V_6_reg_619 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        agg_tmp20_i_i_0_i_reg_559 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp20_i_i_0_i_reg_559 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        agg_tmp20_i_i_assign_1_i_reg_547 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp20_i_i_assign_1_i_reg_547 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        agg_tmp2_i_i_0_i_reg_595 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp2_i_i_0_i_reg_595 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        agg_tmp31_i_i_0_i_reg_535 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp31_i_i_0_i_reg_535 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        agg_tmp9_i_i_0_i_reg_583 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp9_i_i_0_i_reg_583 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        agg_tmp9_i_i_assign_1_i_reg_571 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp9_i_i_assign_1_i_reg_571 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        agg_tmp_i_i_0_i_reg_607 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        agg_tmp_i_i_0_i_reg_607 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        angle_buf_V_0_1_fu_212 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        angle_buf_V_0_1_fu_212 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        angle_buf_V_1_1_fu_216 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        angle_buf_V_1_1_fu_216 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd0))) begin
            bottom_fu_152 <= bottom_1_fu_952_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd2)) begin
            bottom_fu_152 <= 2'd2;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd0)) begin
            bottom_fu_152 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        col_V_2_reg_523 <= col_V_3_reg_1815;
    end else if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        col_V_2_reg_523 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln345_fu_836_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_V_reg_464 <= col_V_1_fu_830_p2;
    end else if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_V_reg_464 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        l00_buf_V_0_1_fu_164 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        l00_buf_V_0_1_fu_164 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        l00_buf_V_1_1_fu_168 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        l00_buf_V_1_1_fu_168 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        l10_buf_V_0_1_fu_180 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        l10_buf_V_0_1_fu_180 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        l10_buf_V_1_1_fu_184 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        l10_buf_V_1_1_fu_184 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        l20_buf_V_0_1_fu_196 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        l20_buf_V_0_1_fu_196 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        l20_buf_V_1_1_fu_200 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        l20_buf_V_1_1_fu_200 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd0))) begin
            mid_fu_156 <= mid_1_fu_960_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd2)) begin
            mid_fu_156 <= 2'd1;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd0)) begin
            mid_fu_156 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        read_ind_V_reg_499 <= 13'd1;
    end else if (((nms_mat_410_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        read_ind_V_reg_499 <= read_ind_V_2_fu_1586_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        row_V_reg_475 <= 11'd1;
    end else if (((nms_mat_410_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        row_V_reg_475 <= row_V_1_fu_1501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        row_ind_V_reg_511 <= 13'd2;
    end else if (((nms_mat_410_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        row_ind_V_reg_511 <= row_ind_V_2_fu_1572_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_242)) begin
        if ((~(ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd2) & ~(ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd0))) begin
            top_fu_160 <= top_1_fu_968_p3;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd2)) begin
            top_fu_160 <= 2'd0;
        end else if ((ap_phi_mux_row_ind_V_phi_fu_515_p4 == 13'd0)) begin
            top_fu_160 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_865_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        write_ind_V_reg_487 <= 13'd0;
    end else if (((nms_mat_410_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        write_ind_V_reg_487 <= write_ind_V_2_fu_1600_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        angle_buf_V_9_1_fu_220 <= call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_ap_return_9;
        l00_buf_V_8_1_fu_172 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_8;
        l00_buf_V_9_1_fu_176 <= call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_9;
        l10_buf_V_8_1_fu_188 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_8;
        l10_buf_V_9_1_fu_192 <= call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_9;
        l20_buf_V_8_1_fu_204 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_8;
        l20_buf_V_9_1_fu_208 <= call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        cmp_i_i156_i_i_reg_1798 <= cmp_i_i156_i_i_fu_991_p2;
        trunc_ln214_reg_1802 <= trunc_ln214_fu_996_p1;
        trunc_ln215_reg_1806 <= trunc_ln215_fu_1000_p1;
        trunc_ln231_reg_1810 <= trunc_ln231_fu_1004_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_2_reg_523_pp1_iter1_reg <= col_V_2_reg_523;
        icmp_ln207_reg_1820 <= icmp_ln207_fu_1014_p2;
        icmp_ln207_reg_1820_pp1_iter1_reg <= icmp_ln207_reg_1820;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_3_reg_1815 <= col_V_3_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        high_threshold_read_reg_1620 <= high_threshold_dout;
        imgheight_read_reg_1632 <= imgheight_dout;
        imgwidth_assign_cast_reg_1637 <= {{imgwidth_dout[10:3]}};
        low_threshold_read_reg_1608 <= low_threshold_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln207_reg_1820_pp1_iter2_reg <= icmp_ln207_reg_1820_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln345_reg_1648 <= icmp_ln345_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln207_reg_1820_pp1_iter1_reg == 1'd0))) begin
        icmp_ln870_4_reg_1849 <= icmp_ln870_4_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln878_reg_1668 <= icmp_ln878_fu_865_p2;
        imgheight_cast3_i_reg_1658[9 : 0] <= imgheight_cast3_i_fu_846_p1[9 : 0];
        op2_assign_2_reg_1663 <= op2_assign_2_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln345_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln534_reg_1652[7 : 0] <= zext_ln534_fu_841_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        angle_V_0_address0 = zext_ln534_1_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        angle_V_0_address0 = zext_ln534_2_fu_1019_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        angle_V_0_address0 = zext_ln534_reg_1652;
    end else begin
        angle_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        angle_V_0_ce0 = 1'b1;
    end else begin
        angle_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        angle_V_0_ce1 = 1'b1;
    end else begin
        angle_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        angle_V_0_d0 = 64'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        angle_V_0_d0 = phase_mat_49_dout;
    end else begin
        angle_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln345_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        angle_V_0_we0 = 1'b1;
    end else begin
        angle_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1525)) begin
        if ((cmp_i_i156_i_i_reg_1798 == 1'd1)) begin
            angle_V_1_address0 = zext_ln534_1_fu_1028_p1;
        end else if ((cmp_i_i156_i_i_reg_1798 == 1'd0)) begin
            angle_V_1_address0 = zext_ln534_2_fu_1019_p1;
        end else begin
            angle_V_1_address0 = 'bx;
        end
    end else begin
        angle_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        angle_V_1_ce0 = 1'b1;
    end else begin
        angle_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        angle_V_1_ce1 = 1'b1;
    end else begin
        angle_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1525)) begin
        if ((cmp_i_i156_i_i_reg_1798 == 1'd1)) begin
            angle_V_1_d0 = phase_mat_49_dout;
        end else if ((cmp_i_i156_i_i_reg_1798 == 1'd0)) begin
            angle_V_1_d0 = 64'd0;
        end else begin
            angle_V_1_d0 = 'bx;
        end
    end else begin
        angle_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln215_reg_1806 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        angle_V_1_we0 = 1'b1;
    end else begin
        angle_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln345_fu_836_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_condition_pp1_exit_iter2_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter2_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln207_fu_1014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln362_fu_911_p2 == 1'd1) | (icmp_ln878_reg_1668 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0)) begin
        if ((icmp_ln870_4_reg_1849 == 1'd0)) begin
            ap_phi_mux_P0_V_5_phi_fu_635_p4 = p_Result_3_fu_1374_p9;
        end else if ((icmp_ln870_4_reg_1849 == 1'd1)) begin
            ap_phi_mux_P0_V_5_phi_fu_635_p4 = p_Result_s_fu_1413_p5;
        end else begin
            ap_phi_mux_P0_V_5_phi_fu_635_p4 = ap_phi_reg_pp1_iter3_P0_V_5_reg_631;
        end
    end else begin
        ap_phi_mux_P0_V_5_phi_fu_635_p4 = ap_phi_reg_pp1_iter3_P0_V_5_reg_631;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_col_V_2_phi_fu_527_p4 = col_V_3_reg_1815;
    end else begin
        ap_phi_mux_col_V_2_phi_fu_527_p4 = col_V_2_reg_523;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        buf_V_0_address0 = zext_ln534_1_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        buf_V_0_address0 = zext_ln534_2_fu_1019_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_0_address0 = zext_ln534_fu_841_p1;
    end else begin
        buf_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        buf_V_0_d0 = magnitude_mat_48_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_0_d0 = 128'd0;
    end else begin
        buf_V_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln345_fu_836_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_0_we0 = 1'b1;
    end else begin
        buf_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        buf_V_1_address0 = zext_ln534_1_fu_1028_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        buf_V_1_address0 = zext_ln534_2_fu_1019_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_1_address0 = zext_ln534_reg_1652;
    end else begin
        buf_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        buf_V_1_d0 = 128'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_1_d0 = magnitude_mat_48_dout;
    end else begin
        buf_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln345_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (trunc_ln214_reg_1802 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_1_we0 = 1'b1;
    end else begin
        buf_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1532)) begin
        if ((cmp_i_i156_i_i_reg_1798 == 1'd1)) begin
            buf_V_2_address0 = zext_ln534_1_fu_1028_p1;
        end else if ((cmp_i_i156_i_i_reg_1798 == 1'd0)) begin
            buf_V_2_address0 = zext_ln534_2_fu_1019_p1;
        end else begin
            buf_V_2_address0 = 'bx;
        end
    end else begin
        buf_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln214_reg_1802 == 2'd1) & ~(trunc_ln214_reg_1802 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | (~(trunc_ln214_reg_1802 == 2'd1) & ~(trunc_ln214_reg_1802 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1532)) begin
        if ((cmp_i_i156_i_i_reg_1798 == 1'd1)) begin
            buf_V_2_d0 = magnitude_mat_48_dout;
        end else if ((cmp_i_i156_i_i_reg_1798 == 1'd0)) begin
            buf_V_2_d0 = 128'd0;
        end else begin
            buf_V_2_d0 = 'bx;
        end
    end else begin
        buf_V_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln214_reg_1802 == 2'd1) & ~(trunc_ln214_reg_1802 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | (~(trunc_ln214_reg_1802 == 2'd1) & ~(trunc_ln214_reg_1802 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        buf_V_2_we0 = 1'b1;
    end else begin
        buf_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_angle = angle_buf_V_9_1_fu_220;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_angle = agg_tmp31_i_i_0_i_reg_535;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_angle = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00 = l00_buf_V_8_1_fu_172;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00 = agg_tmp_i_i_0_i_reg_607;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i00 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01 = l00_buf_V_9_1_fu_176;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01 = agg_tmp2_i_i_0_i_reg_595;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i01 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02 = call_ret1_i_xfExtractPixels_8_32_4_s_fu_783_ap_return_2;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i02 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10 = l10_buf_V_8_1_fu_188;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10 = agg_tmp9_i_i_0_i_reg_583;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11 = l10_buf_V_9_1_fu_192;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11 = agg_tmp9_i_i_assign_1_i_reg_571;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i11 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12 = call_ret2_i_xfExtractPixels_8_32_4_s_fu_790_ap_return_2;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20 = l20_buf_V_8_1_fu_204;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20 = agg_tmp20_i_i_0_i_reg_559;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i20 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21 = l20_buf_V_9_1_fu_208;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21 = agg_tmp20_i_i_assign_1_i_reg_547;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i21 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22 = call_ret_i_xfExtractPixels_8_32_4_s_fu_797_ap_return_2;
    end else begin
        grp_xFFindmax3x3_4_0_13_s_fu_642_p_i22 = 'bx;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        high_threshold_blk_n = high_threshold_empty_n;
    end else begin
        high_threshold_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        high_threshold_read = 1'b1;
    end else begin
        high_threshold_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgheight_blk_n = imgheight_empty_n;
    end else begin
        imgheight_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgheight_out_blk_n = imgheight_out_full_n;
    end else begin
        imgheight_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgheight_out_write = 1'b1;
    end else begin
        imgheight_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgheight_read = 1'b1;
    end else begin
        imgheight_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_blk_n = imgwidth_empty_n;
    end else begin
        imgwidth_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_out_blk_n = imgwidth_out_full_n;
    end else begin
        imgwidth_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_out_write = 1'b1;
    end else begin
        imgwidth_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgwidth_read = 1'b1;
    end else begin
        imgwidth_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln362_fu_911_p2 == 1'd1) | (icmp_ln878_reg_1668 == 1'd1)))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        low_threshold_blk_n = low_threshold_empty_n;
    end else begin
        low_threshold_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        low_threshold_read = 1'b1;
    end else begin
        low_threshold_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln345_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        magnitude_mat_48_blk_n = magnitude_mat_48_empty_n;
    end else begin
        magnitude_mat_48_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln345_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op150_read_state7 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        magnitude_mat_48_read = 1'b1;
    end else begin
        magnitude_mat_48_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln870_4_reg_1849 == 1'd0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        nms_mat_410_blk_n = nms_mat_410_full_n;
    end else begin
        nms_mat_410_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((nms_mat_410_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        nms_mat_410_din = p_Result_4_fu_1535_p5;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_predicate_op262_write_state9 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        nms_mat_410_din = p_Result_2_fu_1361_p5;
    end else begin
        nms_mat_410_din = 'bx;
    end
end

always @ (*) begin
    if ((((nms_mat_410_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op262_write_state9 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
        nms_mat_410_write = 1'b1;
    end else begin
        nms_mat_410_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln345_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        phase_mat_49_blk_n = phase_mat_49_empty_n;
    end else begin
        phase_mat_49_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln345_reg_1648 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op161_read_state7 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        phase_mat_49_read = 1'b1;
    end else begin
        phase_mat_49_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln345_fu_836_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln345_fu_836_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln362_fu_911_p2 == 1'd1) | (icmp_ln878_reg_1668 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((nms_mat_410_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign angle_V_0_address1 = zext_ln222_fu_1037_p1;

assign angle_V_1_address1 = zext_ln222_fu_1037_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln345_reg_1648 == 1'd0) & (phase_mat_49_empty_n == 1'b0)) | ((icmp_ln345_reg_1648 == 1'd0) & (magnitude_mat_48_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln345_reg_1648 == 1'd0) & (phase_mat_49_empty_n == 1'b0)) | ((icmp_ln345_reg_1648 == 1'd0) & (magnitude_mat_48_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((nms_mat_410_full_n == 1'b0) & (ap_predicate_op262_write_state9 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((phase_mat_49_empty_n == 1'b0) & (ap_predicate_op161_read_state7 == 1'b1)) | ((magnitude_mat_48_empty_n == 1'b0) & (ap_predicate_op150_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((nms_mat_410_full_n == 1'b0) & (ap_predicate_op262_write_state9 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((phase_mat_49_empty_n == 1'b0) & (ap_predicate_op161_read_state7 == 1'b1)) | ((magnitude_mat_48_empty_n == 1'b0) & (ap_predicate_op150_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((nms_mat_410_full_n == 1'b0) & (ap_predicate_op262_write_state9 == 1'b1) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((phase_mat_49_empty_n == 1'b0) & (ap_predicate_op161_read_state7 == 1'b1)) | ((magnitude_mat_48_empty_n == 1'b0) & (ap_predicate_op150_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((imgwidth_out_full_n == 1'b0) | (imgheight_out_full_n == 1'b0) | (imgwidth_empty_n == 1'b0) | (imgheight_empty_n == 1'b0) | (high_threshold_empty_n == 1'b0) | (low_threshold_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln345_reg_1648 == 1'd0) & (phase_mat_49_empty_n == 1'b0)) | ((icmp_ln345_reg_1648 == 1'd0) & (magnitude_mat_48_empty_n == 1'b0)));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = (((phase_mat_49_empty_n == 1'b0) & (ap_predicate_op161_read_state7 == 1'b1)) | ((magnitude_mat_48_empty_n == 1'b0) & (ap_predicate_op150_read_state7 == 1'b1)));
end

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter3 = ((nms_mat_410_full_n == 1'b0) & (ap_predicate_op262_write_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_1525 = ((1'b0 == ap_block_pp1_stage0) & (trunc_ln215_reg_1806 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_1532 = (~(trunc_ln214_reg_1802 == 2'd1) & ~(trunc_ln214_reg_1802 == 2'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln207_reg_1820 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_242 = ((icmp_ln362_fu_911_p2 == 1'd0) & (icmp_ln878_reg_1668 == 1'd0) & (1'b1 == ap_CS_fsm_state5));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_row_ind_V_phi_fu_515_p4 = row_ind_V_reg_511;

assign ap_phi_reg_pp1_iter3_P0_V_5_reg_631 = 'bx;

always @ (*) begin
    ap_predicate_op150_read_state7 = ((cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_read_state7 = ((cmp_i_i156_i_i_reg_1798 == 1'd1) & (icmp_ln207_reg_1820 == 1'd0));
end

always @ (*) begin
    ap_predicate_op262_write_state9 = ((icmp_ln870_4_reg_1849 == 1'd0) & (icmp_ln207_reg_1820_pp1_iter2_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign bottom_1_fu_952_p3 = ((icmp_ln870_fu_946_p2[0:0] == 1'b1) ? 2'd1 : bottom_fu_152);

assign buf_V_0_address1 = zext_ln222_fu_1037_p1;

assign buf_V_1_address1 = zext_ln222_fu_1037_p1;

assign buf_V_2_address1 = zext_ln222_fu_1037_p1;

assign call_ret3_i_xfExtractPixels_8_24_0_1_fu_804_p_read10 = ((trunc_ln231_reg_1810[0:0] == 1'b1) ? angle_V_1_q1 : angle_V_0_q1);

assign cmp_i_i156_i_i_fu_991_p2 = ((row_V_reg_475 < imgheight_cast3_i_reg_1658) ? 1'b1 : 1'b0);

assign col_V_1_fu_830_p2 = (col_V_reg_464 + 8'd1);

assign col_V_3_fu_1008_p2 = (ap_phi_mux_col_V_2_phi_fu_527_p4 + 8'd1);

assign icmp_ln207_fu_1014_p2 = ((ap_phi_mux_col_V_2_phi_fu_527_p4 == imgwidth_assign_cast_reg_1637) ? 1'b1 : 1'b0);

assign icmp_ln345_fu_836_p2 = ((col_V_reg_464 == imgwidth_assign_cast_reg_1637) ? 1'b1 : 1'b0);

assign icmp_ln362_fu_911_p2 = ((row_V_reg_475 == op2_assign_2_reg_1663) ? 1'b1 : 1'b0);

assign icmp_ln870_1_fu_1566_p2 = ((row_ind_V_1_fu_1548_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_2_fu_1580_p2 = ((read_ind_V_1_fu_1554_p2 == 13'd2) ? 1'b1 : 1'b0);

assign icmp_ln870_3_fu_1594_p2 = ((write_ind_V_1_fu_1560_p2 == 13'd2) ? 1'b1 : 1'b0);

assign icmp_ln870_4_fu_1046_p2 = ((col_V_2_reg_523_pp1_iter1_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_946_p2 = ((row_ind_V_reg_511 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_865_p2 = ((tmp_fu_855_p4 == 10'd0) ? 1'b1 : 1'b0);

assign imgheight_cast3_i_fu_846_p1 = imgheight_read_reg_1632;

assign imgheight_out_din = imgheight_dout;

assign imgwidth_out_din = imgwidth_dout;

assign mid_1_fu_960_p3 = ((icmp_ln870_fu_946_p2[0:0] == 1'b1) ? 2'd0 : mid_fu_156);

assign op2_assign_2_fu_849_p2 = (imgheight_cast3_i_fu_846_p1 + 11'd1);

assign p_Result_2_fu_1361_p5 = {{grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return}, {P0_V_6_reg_619[13:0]}};

assign p_Result_3_fu_1374_p9 = {{{{{{{{grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return}, {ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return}}, {ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return}}, {ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return}}, {ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return}}, {ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return}}, {ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return}}, {ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return}};

assign p_Result_4_fu_1535_p5 = {{grp_xFFindmax3x3_4_0_13_s_fu_642_ap_return}, {P0_V_6_reg_619[13:0]}};

assign p_Result_s_fu_1413_p5 = {{P0_V_6_reg_619[15:14]}, {tmp_i_fu_1395_p8}};

assign read_ind_V_1_fu_1554_p2 = (read_ind_V_reg_499 + 13'd1);

assign read_ind_V_2_fu_1586_p3 = ((icmp_ln870_2_fu_1580_p2[0:0] == 1'b1) ? 13'd0 : read_ind_V_1_fu_1554_p2);

assign row_V_1_fu_1501_p2 = (row_V_reg_475 + 11'd1);

assign row_ind_V_1_fu_1548_p2 = (row_ind_V_reg_511 + 13'd1);

assign row_ind_V_2_fu_1572_p3 = ((icmp_ln870_1_fu_1566_p2[0:0] == 1'b1) ? 13'd0 : row_ind_V_1_fu_1548_p2);

assign start_out = real_start;

assign tmp_fu_855_p4 = {{op2_assign_2_fu_849_p2[10:1]}};

assign tmp_i_fu_1395_p8 = {{{{{{{ref_tmp_i138_i_assign_7_i_xFFindmax3x3_4_0_13_s_fu_764_ap_return}, {ref_tmp_i138_i_assign_8_i_xFFindmax3x3_4_0_13_s_fu_748_ap_return}}, {ref_tmp_i138_i_assign_9_i_xFFindmax3x3_4_0_13_s_fu_732_ap_return}}, {ref_tmp_i138_i_assign_4_i_xFFindmax3x3_4_0_13_s_fu_716_ap_return}}, {ref_tmp_i138_i_assign_3_i_xFFindmax3x3_4_0_13_s_fu_700_ap_return}}, {ref_tmp_i138_i_assign_2_i_xFFindmax3x3_4_0_13_s_fu_684_ap_return}}, {ref_tmp_i138_i_assign_1_i_xFFindmax3x3_4_0_13_s_fu_665_ap_return}};

assign top_1_fu_968_p3 = ((icmp_ln870_fu_946_p2[0:0] == 1'b1) ? 2'd2 : top_fu_160);

assign trunc_ln214_fu_996_p1 = row_ind_V_reg_511[1:0];

assign trunc_ln215_fu_1000_p1 = read_ind_V_reg_499[0:0];

assign trunc_ln231_fu_1004_p1 = write_ind_V_reg_487[0:0];

assign write_ind_V_1_fu_1560_p2 = (write_ind_V_reg_487 + 13'd1);

assign write_ind_V_2_fu_1600_p3 = ((icmp_ln870_3_fu_1594_p2[0:0] == 1'b1) ? 13'd0 : write_ind_V_1_fu_1560_p2);

assign zext_ln222_fu_1037_p1 = col_V_2_reg_523_pp1_iter1_reg;

assign zext_ln534_1_fu_1028_p1 = col_V_2_reg_523;

assign zext_ln534_2_fu_1019_p1 = col_V_2_reg_523;

assign zext_ln534_fu_841_p1 = col_V_reg_464;

always @ (posedge ap_clk) begin
    zext_ln534_reg_1652[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    imgheight_cast3_i_reg_1658[10] <= 1'b0;
end

endmodule //canny_accel_xFSuppression3x3_3_0_11_800_1280_4_0_13_8_2_32_24_6_160_480_2_s
